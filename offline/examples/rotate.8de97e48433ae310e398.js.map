{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./examples/rotate.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","__webpack_require__","OSM","opt_options","options","attributions","undefined","ATTRIBUTION","crossOrigin","url","call","this","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","__webpack_exports__","exports","module","angular","ngeoBase","name","ngeoMapModule","MainController","map","olMap","layers","olLayerTile","source","olSourceOSM","view","olView","center","zoom","polygon","olGeomPolygon","features","olCollection","push","olFeature","geometry","vectorSource","olSourceVector","vectorLayer","olLayerVector","setMap","styles","style","olStyleStyle","fill","olStyleFill","color","stroke","olStyleStroke","width","image","olStyleCircle","text","olStyleText","font","concat","feature","resolution","getGeometry","getType","interaction","ngeoInteractionRotate","setActive","addInteraction","on","evt","forEachFeatureAtPixel","pixel","controller","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","projection","tileGrid","createXYZ","extent","extentFromProjection","minZoom","tileSize","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","urls","transition"],"mappings":"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","file":"rotate.8de97e48433ae310e398.js","sourcesContent":["/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 5\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 15 17 18 19 20 22 23 24 25 26 27 28","/**\n * @module app.rotate\n */\nconst exports = {};\n\nimport './rotate.css';\nimport './common_dependencies.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\n\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoBase.module.name,\n  ngeoMapModule.name\n]);\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', ['ngeo']);\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10997148, 4569099],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  const polygon = new olGeomPolygon([[\n    [-9e6, 4e6], [-11e6, 4e6], [-11e6, 6e6], [-9e6, 6e6]\n  ]]);\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features = new olCollection();\n\n  this.features.push(new olFeature({\n    geometry: polygon\n  }));\n\n  const vectorSource = new olSourceVector({\n    features: this.features\n  });\n  const vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(map);\n\n\n  const style = (function() {\n    const styles = {};\n    styles['Polygon'] = [\n      new olStyleStyle({\n        fill: new olStyleFill({\n          color: [255, 255, 255, 0.5]\n        })\n      }),\n      new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: 5\n        })\n      }),\n      new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [0, 153, 255, 1],\n          width: 3\n        })\n      })\n    ];\n    styles['Point'] = new olStyleStyle({\n      image: new olStyleCircle(),\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#ffffff'\n        })\n      })\n    });\n\n    styles['GeometryCollection'] = styles['Polygon'].concat(styles['Point']);\n\n    return function(feature, resolution) {\n      return styles[feature.getGeometry().getType()];\n    };\n  })();\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @export\n   */\n  this.interaction = new ngeoInteractionRotate(\n    /** @type {olx.interaction.ModifyOptions} */({\n      features: this.features,\n      layers: [vectorLayer],\n      style: style\n    }));\n\n  const interaction = this.interaction;\n  interaction.setActive(false);\n  map.addInteraction(interaction);\n\n  map.on('singleclick', function(evt) {\n    const feature = this.map.forEachFeatureAtPixel(evt.pixel,\n      feature => feature);\n    if (feature) {\n      this.interaction.setActive(true);\n    }\n  }, this);\n};\n\n\nmodule.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/rotate.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 6\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 15 17 18 19 20 22 23 24 25 26 27 28"],"sourceRoot":""}