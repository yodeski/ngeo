{"version":3,"sources":["webpack:///./src/source/AsitVD.js","webpack:///./examples/backgroundlayer.js"],"names":["__webpack_require__","asitVDResolutions","asitVDTileGrid","olTilegridWMTS","extent","resolutions","matrixIds","map","value","index","exports","options","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","attributions","url","projection","requestEncoding","layer","style","matrixSet","format","tileGrid","_inherits","olSourceWMTS","module","angular","ngeoBase","name","ngeoMapModule","backgroundlayerComponent","bindings","templateUrl","controller","controllerAs","component","BackgroundlayerController","$http","ngeoBackgroundLayerMgr","_this","bgLayers","undefined","bgLayer","get","then","resp","data","backgroundLayerMgr_","prototype","change","layerSpec","getLayer_","set","layerName","olLayerTile","source","ngeoSourceAsitVD","MainController","$scope","olMap","view","olView","center","zoom","overlay","olLayerImage","olSourceImageWMS","params","LAYERS","serverType","addLayer"],"mappings":"qGAGA,QAAAA,EAAA,wDAOA,IAAMC,GACJ,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAClE,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAO1DC,EAAiB,MAfvBF,EAAA,MAe2BG,UACzBC,QAAS,KAAQ,IAAO,IAAQ,MAChCC,YAAaJ,EACbK,UAAWL,EAAkBM,IAAI,SAACC,EAAOC,GAAR,SAAqBA,MASlDC,cAKJ,SAAAA,EAAYC,GAAS,mGAAAC,CAAAC,KAAAH,oKAAAI,CAAAD,MAAAH,EAAAK,WAAAC,OAAAC,eAAAP,IAAAQ,KAAAL,MAEjBM,aAAc,sEACdC,IAAK,6GAELC,WAAY,aACZC,gBAAiB,OACjBC,MAAOZ,EAAQY,MACfC,MAAO,UACPC,UAAW,QACXC,OAAQ,YACRC,SAAUzB,KAhBV,gUAAA0B,CAAAlB,EAAwBmB,WAAxBnB,eAsBSA,gIChDfV,EAAA,KACAA,EAAA,IACA,QAAAA,EAAA,WAGAA,EAAA,OAEAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,wDAfA,IAAMU,KAmBNA,EAAQoB,OAASC,QAAQD,OAAO,OAC9BE,UAASF,OAAOG,KAChBC,UAAcD,OAiBhBvB,EAAQyB,0BACNC,UACE7B,IAAO,0BAET8B,YAAa,gCACbC,WAAY,+BACZC,aAAc,QAIhB7B,EAAQoB,OAAOU,UAAU,qBAAsB9B,EAAQyB,0BAWvDzB,EAAQ+B,0BAA4B,SAASC,EAAOC,GAAwB,IAAAC,EAAA/B,KAM1EA,KAAKN,IAMLM,KAAKgC,cAAWC,EAMhBjC,KAAKkC,QAAU,KAEfL,EAAMM,IAAI,8BAA8BC,KACtC,SAACC,GACCN,EAAKC,SAAWK,EAAKC,KAErBP,EAAKG,QAAUH,EAAKC,SAAS,KAOjChC,KAAKuC,oBAAsBT,GA/B7BjC,EAAQ+B,qEAyCR/B,EAAQ+B,0BAA0BY,UAAUC,OAAS,WACnD,IAAMC,EAAY1C,KAAKkC,QACjBxB,EAAQV,KAAK2C,UAAUD,EAAA,MAC7B1C,KAAKuC,oBAAoBK,IAAI5C,KAAKN,IAAKgB,IASzCb,EAAQ+B,0BAA0BY,UAAUG,UAAY,SAASE,GAC/D,GAAkB,UAAdA,EACF,OAAO,IAAIC,UAGb,IAAMC,EAAS,IAAIC,WACjBtC,MAAOmC,IAET,OAAO,IAAIC,WAAaC,YAI1BlD,EAAQoB,OAAOQ,WAAW,+BACxB5B,EAAQ+B,2BAQV/B,EAAQoD,eAAiB,SAASC,GAMhClD,KAAKN,IAAM,IAAIyD,WACbC,KAAM,IAAIC,WACR7C,WAAY,aACZhB,aAAc,IAAM,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,IAC7D8D,QAAS,IAAQ,KACjBC,KAAM,MAQV,IAAMC,EAAU,IAAIC,WAClBV,OAAQ,IAAIW,WACVnD,IAAK,2BACLoD,QAASC,OAAU,oCACnBC,WAAY,gBAIhB7D,KAAKN,IAAIoE,SAASN,IA3BpB3D,EAAQoD,kCAgCRpD,EAAQoB,OAAOQ,WAAW,iBAAkB5B,EAAQoD,0BAGrCpD","file":"backgroundlayer.fba618d0e278e3a54c8b.js","sourcesContent":["/**\n * @module ngeo.source.AsitVD\n */\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n\n/**\n * @const {!Array.<number>}\n */\nconst asitVDResolutions = [\n  4000, 3750, 3500, 3250, 3000, 2750, 2500, 2250, 2000, 1750, 1500, 1250,\n  1000, 750, 650, 500, 250, 100, 50, 20, 10, 5, 2.5, 2, 1.5, 1, 0.5\n];\n\n\n/**\n * @const {ol.tilegrid.WMTS}\n */\nconst asitVDTileGrid = new olTilegridWMTS({\n  extent: [420000, 30000, 900000, 350000],\n  resolutions: asitVDResolutions,\n  matrixIds: asitVDResolutions.map((value, index) => `${index}`)\n});\n\n\n/**\n * Layer source for the ASIT VD tile server.\n * @see https://www.asitvd.ch/chercher/geoservices/fond-de-plan-asit-vd.html\n *\n */\nconst exports = class extends olSourceWMTS {\n\n  /**\n   * @param {ngeox.source.AsitVDOptions} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      attributions: 'géodonnées &copy; Etat de Vaud & &copy; contributeurs OpenStreetMap',\n      url: 'https://ows{1-4}.asitvd.ch/wmts/1.0.0/{Layer}/default/default/0/' +\n        '21781/{TileMatrix}/{TileRow}/{TileCol}.png',\n      projection: 'EPSG:21781',\n      requestEncoding: 'REST',\n      layer: options.layer,\n      style: 'default',\n      matrixSet: '21781',\n      format: 'image/png',\n      tileGrid: asitVDTileGrid\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/source/AsitVD.js","/**\n * @module app.backgroundlayer\n */\nconst exports = {};\n\nimport './backgroundlayer.css';\nimport './common_dependencies.js';\nimport ngeoSourceAsitVD from 'ngeo/source/AsitVD.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoBase.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * The application-specific background layer component.\n *\n * The component is based on Angular's select, ngOptions, ngModel, and\n * ngChange components. ngChange is used to avoid adding a watcher on\n * the ngModel expression.\n *\n * Note: we don't need two-way binding for ngModel here, but using ::\n * for the ngModel expression doesn't actually make a difference. This\n * is because ngModel doesn't actually watch the ngModel expression.\n *\n * @type {!angular.Component}\n */\nexports.backgroundlayerComponent = {\n  bindings: {\n    'map': '=appBackgroundlayerMap'\n  },\n  templateUrl: 'partials/backgroundlayer.html',\n  controller: 'AppBackgroundlayerController',\n  controllerAs: 'ctrl'\n};\n\n\nexports.module.component('appBackgroundlayer', exports.backgroundlayerComponent);\n\n\n/**\n * @constructor\n * @param {angular.$http} $http Angular http service.\n * @param {ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n *     manager.\n * @export\n * @ngInject\n */\nexports.BackgroundlayerController = function($http, ngeoBackgroundLayerMgr) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.bgLayers = undefined;\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.bgLayer = null;\n\n  $http.get('data/backgroundlayers.json').then(\n    (resp) => {\n      this.bgLayers = resp.data;\n      // use the first layer by default\n      this.bgLayer = this.bgLayers[0];\n    });\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n};\n\n\n/**\n * Function called when the user selects a new background layer through\n * the select element. The ngChange directive used in the partial calls\n * it.\n * @export\n */\nexports.BackgroundlayerController.prototype.change = function() {\n  const layerSpec = this.bgLayer;\n  const layer = this.getLayer_(layerSpec['name']);\n  this.backgroundLayerMgr_.set(this.map, layer);\n};\n\n\n/**\n * @param {string} layerName Layer name.\n * @return {ol.layer.Tile} The layer.\n * @private\n */\nexports.BackgroundlayerController.prototype.getLayer_ = function(layerName) {\n  if (layerName === 'blank') {\n    return new olLayerTile();\n  }\n\n  const source = new ngeoSourceAsitVD({\n    layer: layerName\n  });\n  return new olLayerTile({source});\n};\n\n\nexports.module.controller('AppBackgroundlayerController',\n  exports.BackgroundlayerController);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Controller scope.\n * @ngInject\n */\nexports.MainController = function($scope) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [1000, 500, 200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 1\n    })\n  });\n\n  /**\n   * An overlay layer.\n   * @type {ol.layer.Image}\n   */\n  const overlay = new olLayerImage({\n    source: new olSourceImageWMS({\n      url: 'https://wms.geo.admin.ch',\n      params: {'LAYERS': 'ch.swisstopo.dreiecksvermaschung'},\n      serverType: 'mapserver'\n    })\n  });\n\n  this.map.addLayer(overlay);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/backgroundlayer.js"],"sourceRoot":""}