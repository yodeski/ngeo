{"version":3,"sources":["webpack:///./examples/mapfishprint.js"],"names":["__webpack_require__","exports","module","angular","ngeoBase","name","ngeoMapModule","WMS_URL_","PRINT_URL_","PRINT_SCALES_","PRINT_FORMAT_","PRINT_LAYOUT_","PRINT_DPI_","PRINT_PAPER_SIZE_","MainController","$timeout","ngeoCreatePrint","ngeoPrintUtils","this","map","olMap","layers","olLayerImage","source","olSourceImageWMS","url","params","LAYERS","serverType","olLayerVector","olSourceVector","format","olFormatGeoJSON","defaultDataProjection","view","olView","projection","resolutions","center","zoom","printState","$timeout_","print_","printUtils_","postcomposeListener","createPrintMaskPostcompose","frameState","mapSize","size","mapResolution","viewState","resolution","undefined","getOptimalScale","on","prototype","print","getSize","viewResolution","getView","getResolution","scale","dpi","layout","spec","createSpec","datasource","debug","comments","title","createReport","then","handleCreateReportSuccess_","bind","handleCreateReportError_","resp","mfResp","data","getStatus_","ref","getStatus","handleGetStatusSuccess_","handleGetStatusError_","done","window","location","href","getReportUrl","that","controller"],"mappings":"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","file":"mapfishprint.cbdf495a9cd2df3ddcdc.js","sourcesContent":["/**\n * @module app.mapfishprint\n */\nconst exports = {};\n\nimport './mapfishprint.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', [\n  ngeoBase.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @const\n * @private\n */\nexports.WMS_URL_ = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/' +\n    'mapserv_proxy';\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_URL_ = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/' +\n    'printproxy';\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_SCALES_ = [100, 250, 500, 2500, 5000, 10000, 25000, 50000,\n  100000, 500000];\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_FORMAT_ = 'pdf';\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_LAYOUT_ = 'A4 portrait';\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_DPI_ = 72;\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_PAPER_SIZE_ = [555, 675];\n\n\n/**\n * @constructor\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n * @ngInject\n * @export\n */\nexports.MainController = function($timeout, ngeoCreatePrint, ngeoPrintUtils) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerImage({\n        source: new olSourceImageWMS({\n          url: exports.WMS_URL_,\n          params: {\n            'LAYERS': 'osm'\n          },\n          serverType: /** @type {ol.source.WMSServerType} */ ('mapserver')\n        })\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          url: 'data/polygon-swizerland.json',\n          format: new olFormatGeoJSON({\n            defaultDataProjection: 'EPSG:21781'\n          })\n        })\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  /**\n   * Text to display a \"loading\" message while waiting for the report.\n   * @type {string}\n   * @export\n   */\n  this.printState = '';\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {ngeo.print.Service}\n   * @private\n   */\n  this.print_ = ngeoCreatePrint(exports.PRINT_URL_);\n\n  /**\n   * @type {ngeo.print.Utils}\n   * @private\n   */\n  this.printUtils_ = ngeoPrintUtils;\n\n  /**\n   * @type {function(ol.render.Event)}\n   */\n  const postcomposeListener = ngeoPrintUtils.createPrintMaskPostcompose(\n    /**\n       * @return {ol.Size} Size in dots of the map to print.\n       */\n    () => exports.PRINT_PAPER_SIZE_,\n    /**\n       * @param {olx.FrameState} frameState Frame state.\n       * @return {number} Scale of the map to print.\n       */\n    (frameState) => {\n      const mapSize = frameState.size;\n      const mapResolution = frameState.viewState.resolution;\n      // we test mapSize and mapResolution just to please the compiler\n      return mapSize !== undefined && mapResolution !== undefined ?\n        ngeoPrintUtils.getOptimalScale(mapSize, mapResolution,\n          exports.PRINT_PAPER_SIZE_, exports.PRINT_SCALES_) :\n        exports.PRINT_SCALES_[0];\n    });\n\n  /**\n   * Draw the print window in a map postcompose listener.\n   */\n  this.map.on('postcompose', postcomposeListener);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.print = function() {\n  const map = this.map;\n\n  const mapSize = map.getSize();\n  const viewResolution = map.getView().getResolution();\n\n  // we test mapSize and viewResolution just to please the compiler\n  const scale = mapSize !== undefined && viewResolution !== undefined ?\n    this.printUtils_.getOptimalScale(mapSize, viewResolution,\n      exports.PRINT_PAPER_SIZE_, exports.PRINT_SCALES_) :\n    exports.PRINT_SCALES_[0];\n\n  const dpi = exports.PRINT_DPI_;\n  const format = exports.PRINT_FORMAT_;\n  const layout = exports.PRINT_LAYOUT_;\n\n  this.printState = 'Printing...';\n\n  const spec = this.print_.createSpec(map, scale, dpi, layout, format, {\n    'datasource': [],\n    'debug': 0,\n    'comments': 'My comments',\n    'title': 'My print'\n  });\n\n  this.print_.createReport(spec).then(\n    this.handleCreateReportSuccess_.bind(this),\n    this.handleCreateReportError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleCreateReportSuccess_ = function(resp) {\n  const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n  this.getStatus_(mfResp.ref);\n};\n\n\n/**\n * @param {string} ref Ref.\n * @private\n */\nexports.MainController.prototype.getStatus_ = function(ref) {\n  this.print_.getStatus(ref).then(\n    this.handleGetStatusSuccess_.bind(this, ref),\n    this.handleGetStatusError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleCreateReportError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\n/**\n * @param {string} ref Ref.\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleGetStatusSuccess_ = function(ref, resp) {\n  const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n  const done = mfResp.done;\n  if (done) {\n    // The report is ready. Open it by changing the window location.\n    this.printState = '';\n    window.location.href = this.print_.getReportUrl(ref);\n  } else {\n    // The report is not ready yet. Check again in 1s.\n    const that = this;\n    this.$timeout_(() => {\n      that.getStatus_(ref);\n    }, 1000, false);\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleGetStatusError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\nmodule.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mapfishprint.js"],"sourceRoot":""}