{"version":3,"sources":["webpack:///./src/message/Notification.js","webpack:///./node_modules/openlayers/src/ol/GeolocationProperty.js","webpack:///./node_modules/openlayers/src/ol/Geolocation.js","webpack:///./examples/desktopgeolocation.js","webpack:///./src/geolocation/desktop.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./src/message/Message.js"],"names":["__webpack_require__","olBase","exports","$timeout","ngeoMessageMessage","call","this","timeout_","container","angular","element","document","body","append","container_","cache_","inherits","DEFAULT_DELAY_","prototype","notify","object","show","clear","uid","clearMessageByCacheItem_","parseInt","showMessage","message","_this","type","googAsserts","assertString","classNames","Type","ERROR","push","INFORMATION","SUCCESS","WARNING","el","join","target","html","msg","addClass","delay","undefined","item","getUid","promise","alert","cancel","module","service","ngeoBase","requires","name","GeolocationProperty","d","__webpack_exports__","Geolocation","opt_options","ol_Object","options","position_","transform_","proj","watchId_","events","listen","getChangeEventType","handleProjectionChanged_","handleTrackingChanged_","projection","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","Object","ol","disposeInternal","getProjection","set","has","GEOLOCATION","getTracking","navigator","geolocation","watchPosition","positionChange_","bind","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","math","longitude","latitude","projectedPosition","speed","geometry","Polygon","applyTransform","changed","error","EventType","dispatchEvent","getAccuracy","get","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ngeoGeolocationDesktop","ngeoMapModule","MainController","$scope","ngeoFeatureOverlayMgr","positionFeatureStyle","olStyleStyle","image","olStyleCircle","radius","fill","olStyleFill","color","stroke","olStyleStroke","width","accuracyFeatureStyle","desktopGeolocationOptions","zoom","map","olMap","layers","olLayerTile","source","olSourceOSM","view","olView","center","init","controller","ngeoMapFeatureOverlayMgr","ngeoMessageNotification","GeolocationEventType","directive_","restrict","scope","getDesktopMapFn","getDesktopGeolocationOptionsFn","directive","Controller_","$element","ngeoNotification","on","toggle","goog","asserts","assertInstanceof","map_","assertObject","$scope_","notification_","featureOverlay_","getFeatureOverlay","geolocation_","olGeolocation","getView","deactivate_","$emit","positionFeature_","olFeature","setStyle","accuracyFeature_","zoom_","active_","olEvents","setGeometry","event","setPosition_","activate_","addFeature","point","olGeomPoint","setCenter","setZoom","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","attributions","ATTRIBUTION","crossOrigin","url","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","tileGrid","createXYZ","extent","extentFromProjection","minZoom","tileSize","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","urls","transition","getMessageObjects","forEach","info","success","warn","opt_type","msgObjects","msgObject","defaultType","Array","isArray"],"mappings":"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","file":"desktopgeolocation.f3dee0dc1af647a0b04e.js","sourcesContent":["/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/GeolocationProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './index.js';\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject from './Object.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport _ol_has_ from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {{tracking: (boolean|undefined),\n *     trackingOptions: (GeolocationPositionOptions|undefined),\n *     projection: ol.ProjectionLike}}\n */\nexport let GeolocationOptions;\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of `ol.Geolocation`.\n *\n * Example:\n *\n *     var geolocation = new ol.Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {ol.Object}\n * @param {GeolocationOptions=} opt_options Options.\n * @param {boolean|undefined} opt_options.tracking Start Tracking. Default is\n *     `false`.\n * @param {GeolocationPositionOptions|undefined} opt_options.trackingOptions\n *     Tracking options. See\n *     {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @param {ol.ProjectionLike} opt_options.projection The projection the position\n *     is reported in.\n * @api\n */\nconst Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {ol.TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  _ol_events_.listen(\n    this, BaseObject.getChangeEventType(GeolocationProperty.PROJECTION),\n    this.handleProjectionChanged_, this);\n  _ol_events_.listen(\n    this, BaseObject.getChangeEventType(GeolocationProperty.TRACKING),\n    this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  const projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n      getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (_ol_has_.GEOLOCATION) {\n    const tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n        this.positionChange_.bind(this),\n        this.positionError_.bind(this),\n        this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  const coords = position.coords;\n  this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n  this.set(GeolocationProperty.ALTITUDE,\n    coords.altitude === null ? undefined : coords.altitude);\n  this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n    coords.altitudeAccuracy === null ?\n      undefined : coords.altitudeAccuracy);\n  this.set(GeolocationProperty.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  const projectedPosition = this.transform_(this.position_);\n  this.set(GeolocationProperty.POSITION, projectedPosition);\n  this.set(GeolocationProperty.SPEED,\n    coords.speed === null ? undefined : coords.speed);\n  const geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.ACCURACY)\n  );\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?ol.geom.Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?ol.geom.Polygon} */ this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.ALTITUDE)\n  );\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.ALTITUDE_ACCURACY)\n  );\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.HEADING)\n  );\n};\n\n\n/**\n * Get the position of the device.\n * @return {ol.Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {ol.Coordinate|undefined} */ this.get(GeolocationProperty.POSITION)\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {ol.proj.Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {ol.proj.Projection|undefined} */ this.get(GeolocationProperty.PROJECTION)\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.SPEED)\n  );\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return (\n    /** @type {boolean} */ this.get(GeolocationProperty.TRACKING)\n  );\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return (\n    /** @type {GeolocationPositionOptions|undefined} */ this.get(GeolocationProperty.TRACKING_OPTIONS)\n  );\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {ol.ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(GeolocationProperty.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Geolocation.js\n// module id = null\n// module chunks = ","/**\n * @module app.desktopgeolocation\n*/\nconst exports = {};\n\nimport './desktopgeolocation.css';\nimport './common_dependencies.js';\nimport olMap from 'ol/Map.js';\n\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoGeolocationDesktop from 'ngeo/geolocation/desktop.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoBase.module.name,\n  ngeoGeolocationDesktop.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureOverlayMgr) {\n\n  const positionFeatureStyle = new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.DesktopGeolocationDirectiveOptions}\n   * @export\n   */\n  this.desktopGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: 17\n  };\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n  ngeoFeatureOverlayMgr.init(this.map);\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/desktopgeolocation.js","/**\n * @module ngeo.geolocation.desktop\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeolocation from 'ol/Geolocation.js';\nimport olMap from 'ol/Map.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDesktopGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'desktop-geolocation-error'\n};\n\n\n/**\n * Provide a \"desktop geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-desktop-geolocation=\"\"\n *        ngeo-desktop-geolocation-map=\"ctrl.map\"\n *        ngeo-desktop-geolocation-options=\"ctrl.desktopGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/desktopgeolocation.html](../examples/desktopgeolocation.html)\n *\n * @htmlAttribute {ol.Map} gmf-geolocation-map The map.\n * @htmlAttribute {ngeox.DesktopGeolocationDirectiveOptions} gmf-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDesktopGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getDesktopMapFn': '&ngeoDesktopGeolocationMap',\n      'getDesktopGeolocationOptionsFn': '&ngeoDesktopGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationDesktopController'\n  };\n};\n\n\nexports.directive('ngeoDesktopGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoDesktopGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggle.bind(this));\n\n  const map = $scope['getDesktopMapFn']();\n  goog.asserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getDesktopGeolocationOptionsFn']() || {};\n  goog.asserts.assertObject(options);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection()\n  });\n\n  // handle geolocation error.\n  this.geolocation_.on('error', function(error) {\n    this.deactivate_();\n    this.notification_.error(error.message);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  }, this);\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.active_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', (event) => {\n    this.setPosition_(event);\n  });\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggle = function() {\n  if (this.active_) {\n    this.deactivate_();\n  } else {\n    this.activate_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.activate_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.geolocation_.setTracking(true);\n  this.active_ = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.deactivate_ = function() {\n  this.featureOverlay_.clear();\n  this.active_ = false;\n  this.notification_.clear();\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function(event) {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  this.map_.getView().setCenter(position);\n\n  if (this.zoom_ !== undefined) {\n    this.map_.getView().setZoom(this.zoom_);\n  }\n\n  this.geolocation_.setTracking(false);\n};\n\nexports.controller('ngeoGeolocationDesktopController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/geolocation/desktop.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 4\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 17 18 19 20 21 22 23 24 25 26 27","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 5\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 17 18 19 20 21 22 23 24 25 26 27","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js"],"sourceRoot":""}