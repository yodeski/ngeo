{"version":3,"sources":["webpack:///./examples/importfeatures.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_require__","olExtent","exports","module","angular","ngeoBase","name","ngeoMapModule","ngeoMiscFilereaderComponent","MainController","$scope","_this","this","kmlFormat_","olFormatKML","vectorSource_","olSourceVector","map","olMap","layers","olLayerTile","source","olSourceOSM","olLayerVector","view","olView","center","zoom","fileReaderSupported","undefined","fileContent","$watch","importKml_","bind","prototype","kml","vectorSource","features","readFeatures","featureProjection","clear","addFeatures","extent","getExtent","mapSize","getSize","isEmpty","getView","fit","controller","_index","requires","push","component_","$window","restrict","scope","supported","link","element","attrs","on","changeEvent","fileReader","FileReader","onload","evt","$apply","target","result","readAsText","files","directive","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","opt_options","options","attributions","ATTRIBUTION","crossOrigin","url","call","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","projection","tileGrid","createXYZ","extentFromProjection","minZoom","tileSize","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","urls","transition"],"mappings":"+IAKAA,EAAA,KACAA,EAAA,IACA,QAAAA,EAAA,QAEAA,EAAA,SAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,KACYC,0JAAZD,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,wDAlBA,IAAME,KAsBNA,EAAQC,OAASC,QAAQD,OAAO,OAC9BE,UAASF,OAAOG,KAChBC,UAAcD,KACdE,UAA4BF,OAU9BJ,EAAQO,eAAiB,SAASC,GAAQ,IAAAC,EAAAC,KAMxCA,KAAKC,WAAa,IAAIC,UAMtBF,KAAKG,cAAgB,IAAIC,UAMzBJ,KAAKK,IAAM,IAAIC,WACbC,QACE,IAAIC,WACFC,OAAQ,IAAIC,YAEd,IAAIC,WACFF,OAAQT,KAAKG,iBAGjBS,KAAM,IAAIC,WACRC,QAAS,EAAG,GACZC,KAAM,MASVf,KAAKgB,yBAAsBC,EAM3BjB,KAAKkB,YAAc,GAEnBpB,EAAOqB,OAAO,kBAAMpB,EAAKmB,aAAalB,KAAKoB,WAAWC,KAAKrB,QA9C7DV,EAAQO,kCAuDRP,EAAQO,eAAeyB,UAAUF,WAAa,SAASG,GACrD,IAAMlB,EAAML,KAAKK,IACXmB,EAAexB,KAAKG,cACpBsB,EAAWzB,KAAKC,WAAWyB,aAAaH,GAC5CI,kBAAmB,cAErBH,EAAaI,OAAM,GACnBJ,EAAaK,YAAYJ,GACzB,IAAMK,EAASN,EAAaO,YACtBC,EAAU3B,EAAI4B,UAChBD,IAAY3C,EAAS6C,QAAQJ,IAC/BzB,EAAI8B,UAAUC,IAAIN,EAAQE,IAK9B1C,EAAQC,OAAO8C,WAAW,iBAAkB/C,EAAQO,0BAGrCP,yGC7Gf,MAAAgD,EAAAlD,EAAA,uCAKA,IAAME,EAAUE,QAAQD,OAAO,qBAE/BE,UAASF,OAAOgD,SAASC,KAAKlD,EAAQI,MAyBtCJ,EAAQmD,WAAa,SAASC,GAC5B,OACEC,SAAU,IACVC,OACE1B,YAAe,kBACf2B,UAAa,6BAOfC,KAAM,SAACF,EAAOG,EAASC,GACrB,IAAMH,EAAY,eAAgBH,EAClCE,EAAA,UAAqBC,EAChBA,GAGLE,EAAQE,GAAG,SAAU,SAACC,GAEpB,IAAMC,EAAa,IAAIT,EAAQU,WAC/BD,EAAWE,OAIT,SAASC,GACPV,EAAMW,OAAO,WACXX,EAAA,YAAuBU,EAAIE,OAAOC,UAGxCN,EAAWO,WAAWR,EAAYM,OAAOG,MAAM,SA9BvDrE,EAAQmD,+BAqCRnD,EAAQsE,UAAU,iBAChBtE,EAAQmD,sBAGKnD,8FC5EfuE,EAAAzE,EAAA,GAeA,MAAA0E,EAAA,SAAAC,GAEA,MAAAC,EAAAD,MAEA,IAAAE,EAEAA,OADAhD,IAAA+C,EAAAC,aACAD,EAAAC,cAEAH,EAAAI,aAGA,MAAAC,OAAAlD,IAAA+C,EAAAG,YACAH,EAAAG,YAAA,YAEAC,OAAAnD,IAAA+C,EAAAI,IACAJ,EAAAI,IAAA,uDAEAP,EAAA,EAAAQ,KAAArE,MACAiE,eACAK,UAAAN,EAAAM,UACAH,cACAI,YAAAtD,IAAA+C,EAAAO,QAAAP,EAAAO,OACAC,aAAAvD,IAAA+C,EAAAQ,QAAAR,EAAAQ,QAAA,GACAC,2BAAAT,EAAAS,2BACAC,iBAAAV,EAAAU,iBACAN,MACAO,MAAAX,EAAAW,SAKAC,OAAAC,EAAA,SAAAD,CAAAd,EAAAD,EAAA,GAUAC,EAAAI,YAAA,2FAGAY,EAAA,6DC3DAC,EAAA3F,EAAA,IA6BA,MAAA4F,EAAA,SAAAjB,GACA,MAAAC,EAAAD,MACAkB,OAAAhE,IAAA+C,EAAAiB,WACAjB,EAAAiB,WAAA,YAEAC,OAAAjE,IAAA+C,EAAAkB,SAAAlB,EAAAkB,SACAH,EAAA,EAAAI,WACArD,OAAAiD,EAAA,EAAAK,qBAAAH,GACAT,QAAAR,EAAAQ,QACAa,QAAArB,EAAAqB,QACAC,SAAAtB,EAAAsB,WAGAC,EAAA,EAAAlB,KAAArE,MACAiE,aAAAD,EAAAC,aACAK,UAAAN,EAAAM,UACAH,YAAAH,EAAAG,YACAI,OAAAP,EAAAO,OACAU,aACAR,2BAAAT,EAAAS,2BACAS,WACAR,iBAAAV,EAAAU,iBACAc,eAAAxB,EAAAwB,eACAC,gBAAAzB,EAAAyB,gBACArB,IAAAJ,EAAAI,IACAsB,KAAA1B,EAAA0B,KACAf,WAAA1D,IAAA+C,EAAAW,OAAAX,EAAAW,MACAgB,WAAA3B,EAAA2B,cAKAf,OAAAC,EAAA,SAAAD,CAAAI,EAAAO,EAAA,GACAT,EAAA","file":"importfeatures.b2a86220bcf11d773327.js","sourcesContent":["/**\n * @module app.importfeatures\n*/\nconst exports = {};\n\nimport './importfeatures.css';\nimport './common_dependencies.js';\nimport ngeoBase from 'ngeo/index.js';\n\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoBase.module.name,\n  ngeoMapModule.name,\n  ngeoMiscFilereaderComponent.name,\n]);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Scope.\n * @export\n * @ngInject\n */\nexports.MainController = function($scope) {\n\n  /**\n   * @private\n   * @type {ol.format.KML}\n   */\n  this.kmlFormat_ = new olFormatKML();\n\n  /**\n   * @private\n   * @type {ol.source.Vector}\n   */\n  this.vectorSource_ = new olSourceVector();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      new olLayerVector({\n        source: this.vectorSource_\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 2\n    })\n  });\n\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.fileReaderSupported = undefined;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fileContent = '';\n\n  $scope.$watch(() => this.fileContent, this.importKml_.bind(this));\n\n};\n\n\n/**\n * @param {string} kml KML document.\n * @private\n */\nexports.MainController.prototype.importKml_ = function(kml) {\n  const map = this.map;\n  const vectorSource = this.vectorSource_;\n  const features = this.kmlFormat_.readFeatures(kml, {\n    featureProjection: 'EPSG:3857'\n  });\n  vectorSource.clear(true);\n  vectorSource.addFeatures(features);\n  const extent = vectorSource.getExtent();\n  const mapSize = map.getSize();\n  if (mapSize && !olExtent.isEmpty(extent)) {\n    map.getView().fit(extent, mapSize);\n  }\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/importfeatures.js","/**\n * @module ngeo.misc.filereaderComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filereaderComponent.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 4\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 17 18 19 20 21 22 23 24 25 26 27","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 5\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 17 18 19 20 21 22 23 24 25 26 27"],"sourceRoot":""}