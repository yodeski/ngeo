{"version":3,"sources":["webpack:///./src/message/Popup.js","webpack:///./src/message/popupComponent.js","webpack:///./examples/popupservice.js"],"names":["__webpack_require__","exports","$compile","$rootScope","$sce","$timeout","_this","this","scope","$new","$watch","open","autoDestroy_","timeout_","destroy","sce_","element_","angular","element","document","body","append","prototype","getOpen","setOpen","$destroy","remove","setTitle","title","trustedTitle","trustAsHtml","setContent","content","opt_trusted","setUrl","url","setWidth","width","setHeight","height","setSize","setAutoDestroy","autoDestroy","addClass","cls","options","googAsserts","fail","undefined","Factory","module","ngeoMessagePopupComponent","name","factory","ngeoBase","requires","push","_index","value","attrs","templateUrl","baseModuleTemplateUrl","directive_","ngeoPopupTemplateUrl","restrict","link","close","evt","stopPropagation","preventDefault","newVal","oldVal","css","directive","ngeoMessagePopup","MainController","ngeoCreatePopup","createPopup_","$","tooltip","container","trigger","simplePopup","popup","iframePopup","heavyPopup","openPopupWithContent","openPopupWithUrl","controller"],"mappings":"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","file":"popupservice.25eb429aa7658d9d8ad4.js","sourcesContent":["/**\n * @module ngeo.message.Popup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module ngeo.message.popupComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\nconst exports = angular.module('ngeoPopup', []);\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module app.popupservice\n*/\nconst exports = {};\n\nimport './popupservice.css';\nimport './common_dependencies.js';\nimport ngeoBase from 'ngeo/index.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoBase.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\n/**\n * @param {angular.$sce} $sce Angular sce service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @ngInject\n * @constructor\n */\nexports.MainController = function($sce, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.simplePopup = function() {\n  const popup = this.createPopup_();\n  popup.setAutoDestroy(true);\n  popup.setTitle('Simple popup');\n  const content = this.sce_.trustAsHtml('This is a simple 400x300 px popup.');\n  popup.setContent(content);\n  popup.setWidth('400px');\n  popup.setHeight('300px');\n  popup.setOpen(true);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.iframePopup = function() {\n  const popup = this.createPopup_();\n  popup.setAutoDestroy(true);\n  popup.addClass('popup-with-iframe');\n  popup.setTitle('Iframe popup');\n  popup.setUrl('http://geomapfish.org/');\n  popup.setSize('400px', '300px');\n  popup.setOpen(true);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.heavyPopup = function() {\n  const popup = this.createPopup_();\n  popup.setAutoDestroy(true);\n  popup.setTitle(\n    'This is a popup with lots and lots of content and a very long title');\n  const content = this.sce_.trustAsHtml(\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla eget' +\n    'quam at ex euismod bibendum et eget enim. Nulla sodales tortor ac' +\n    'sagittis aliquet. Ut malesuada quam vitae pulvinar porta. Nunc id' +\n    'magna id risus malesuada elementum eget id purus. Curabitur vel augue' +\n    'blandit, faucibus nulla quis, consequat tellus. Phasellus commodo,' +\n    'tellus et vulputate ultricies, nulla libero ornare arcu, quis' +\n    'fermentum sem diam quis tellus. Aliquam ut sapien tristique, lacinia' +\n    'ante et, lacinia arcu. Quisque sagittis eros at quam blandit' +\n    'gravida. Nulla sit amet enim semper, efficitur eros sit amet,' +\n    'porttitor libero. Fusce quis tellus est. Quisque ornare, ex eget' +\n    'luctus pharetra, nisl leo lobortis purus, sed tristique neque leo eget' +\n    'odio. Maecenas lobortis nisl ac magna mollis, ac pulvinar risus' +\n    'convallis. Donec ullamcorper sollicitudin maximus. Quisque bibendum' +\n    'elit sit amet ultrices ornare. Donec aliquam felis id urna ultrices' +\n    'scelerisque.'\n  );\n  popup.setContent(content);\n  popup.setOpen(true);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.openPopupWithContent = function() {\n  const popup = this.createPopup_();\n  const content = this.sce_.trustAsHtml(\n    'This popup was opened using the <code>open</code> method.');\n  popup.open({\n    autoDestroy: true,\n    content: content,\n    height: '200px',\n    title: 'Opened with \"open\"',\n    width: '300px'\n  });\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.openPopupWithUrl = function() {\n  const popup = this.createPopup_();\n  popup.open({\n    autoDestroy: true,\n    cls: 'popup-with-iframe',\n    height: '300px',\n    title: 'Opened with \"open\" and \"iframe\"',\n    url: 'http://geomapfish.org/',\n    width: '400px'\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/popupservice.js"],"sourceRoot":""}