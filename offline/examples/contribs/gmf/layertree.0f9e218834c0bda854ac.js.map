{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/DataSources.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./src/datasource/File.js","webpack:///./src/message/popupComponent.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/misc/Time.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./src/message/Popup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./node_modules/angular-sanitize/index.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/layertree/component.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/misc/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./node_modules/angular-sanitize/angular-sanitize.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./contribs/gmf/src/disclaimer/module.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./src/message/Disclaimer.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./contribs/gmf/examples/layertree.js","webpack:///./src/layertree/module.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","olBase","$filter","gettextCatalog","$filter_","gettextCatalog_","ngeoMiscTime","inherits","formatTimeValue","time","resolution","opt_useISOFormat","opt_toUTC","date","utc","yearResolution","monthResolution","dayResolution","getString","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","assert","mode","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","_classCallCheck","collection_","map_","handleDataSourcesAdd_","_createClass","view","getView","handleViewResolutionChange_","getResolution","assertNumber","syncDataSourcesToResolution_","olObservable","unByKey","target","olView","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","maxResolution","minResolution","inRange","event","ngeoDatasourceDataSource","set","unbindMap_","bindMap_","get","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","item","active","interaction","removeInteraction","addInteraction","setMap","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_11__xml_js__","GPX","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","defaultDataProjection","__WEBPACK_IMPORTED_MODULE_10__proj_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","readString","RTE_PARSERS","cmt","desc","src","parseLink","number","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","getLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","parentNode","createElementNS","namespaceURI","GPX_SERIALIZERS","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","layout","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","setAttributeNS","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","rotation","scale","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","s","getAllTextContent","m","exec","hexColor","parseInt","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","coord","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","setGeometry","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","writeCoordinatesTextNode_","dimension","d","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","getGeometries","GEOMETRY_NODE_FACTORY_","MULTI_POINT","getPoints","POINT_NODE_FACTORY_","MULTI_LINE_STRING","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","appendChild","DOCUMENT","createCDATASection","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","decimal","toPrecision","nonNegativeInteger","_possibleConstructorReturn","__proto__","getPrototypeOf","featuresCollection_","olSourceVector","layer_","olLayerVector","_inherits","getArray","ngeoPopupTemplateUrl","addClass","close","stopPropagation","preventDefault","oldVal","css","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","localDate","ngeoLayerHelper","ngeoWMSTime","layerHelper_","ngeoWMSTime_","ogcServersObject_","ogcServersObject","$on","firstParent","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","depth","metadata","opacity","setOpacity","updateLayerState_","setVisible","olLayerImage","getSource","updateParams","LAYERS","reverse","groupNode","isRoot","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","getLayer","_this3","createBasicGroup","timeParam","getTimeParam_","imageType","createBasicWMSLayer","credential","hasActiveChildren","ctrl","updateLayerReferences_","isChecked","setState","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","refreshState","gmfLayerWMTS","newLayer","olLayerTile","createWMTSLayerFromCapabilitites","dimensions","setSource","querySourceIds","disclaimer","disclaimers","wmsTime","VisitorDecision","STOP","timeValues","tree","isOneParentNotMix","ngeoMiscWMSTime","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","$compile","$sce","$new","autoDestroy_","destroy","sce_","element_","document","body","getOpen","setOpen","$destroy","setTitle","title","trustedTitle","trustAsHtml","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","cls","fail","Factory","ngeoMessagePopupComponent","$injector","ngeoDataSources","ngeoFile","injector_","dataSources_","collection","ngeoFile_","ngeoLayerHelper_","extDataSources_","files_","fileGroup_","ngeoDatasourceFileGroup","dataSources","injector","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","$inject","wmsGroup","wmsGroupsCollection","found","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","wmsGroups","Symbol","iterator","next","done","err","return","wmtsGroup","wmtsGroupsCollection","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","wmtsGroups","layerGroup","capabilities","req","formats","ogcImageType","wmsInfoFormat","ngeoDatasourceOGC","WMSInfoFormat","GML","ogcLayers","ogcType","Type","visible","wmsUrl","getWMSGroup","addDataSource","ngeoDatasourceWMSGroup","addLayer_","addWMSGroup_","wmtsUrl","assertString","wmtsLayer","WMTS","getWMTSGroup","ngeoDatasourceOGCGroup","addWMTSGroup_","layerObj","createWMTSLayerFromCapabilititesObj","unregister","handleWMTSDataSourceVisibleChange_","file","getFileDataSource_","fileGroup","fit","rejections","read","readOptions","featureProjection","isKml","olFormatKML","isGpx","olFormatGPX","ngeoDatasourceFile","reject","oldValue","removeFileDataSource_","removeOGCDataSource_","removeLayer_","removeDataSource","removeWMSGroup_","removeWMTSGroup_","getGroupFromMap","EXTERNALLAYERGROUP_NAME","ngeoMiscFile","ngeoDatasourceDataSources","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","ngeoLayertreeTemplateUrl","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","ids","getIds","array","child","layerLayerCreationFn","message","console","error","server","promiseSuccessFn","promises","background_layers","itemType","all","layerGroupCreationFn","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolutionHint","getNodeMinResolution","minResolutionHint","loadThemes","opt_roleId","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","MIXED_GROUP","NOT_MIXED_GROUP","ngeoMapLayerHelper","olObj","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeSyncLayertreeMap","ngeoLayertreeComponent","ngeoMessagePopup","gmfLayertreeTemplate","$element","$attrs","component_","bindings","openLinksInNewWindow","component","$scope","ngeoCreatePopup","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfSyncLayertreeMap","scope_","$sce_","root","gmfSyncLayertreeMap_","infoPopup_","promises_","groupNodeStates_","dataLayerGroup_","on","$apply","DATALAYERGROUP_NAME","_syncArrays2","default","render","updateDimensions_","olLayerLayer","updateLayerDimensions_","_this4","isEmpty","olSourceWMTS","updateDimensions","olSourceTileWMS","olSourceImageWMS","once","numberOfGroupsToAddInThisDigestLoop","listeners","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getDataSource","timeRangeValue","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getOgcServer","getWMSLegendURL","getLegendsObject","_this5","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","getWMTSLegendURL","layersNames","getScale_","ServerType","QGISSERVER","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","_this6","treeUid","metadataURL","resp","infoPopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","refreshFirstLevelGroups","removeNode","removeGroup","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggle","toggleFiltrableDataSource","ds","isNodeLegendVisible","is","supportsCustomization","supportsLegend","supportsOpacityChange","legend","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","code","reason","onprogress","notify","readAsText","load","opt_cancelP","unregister_","ngeoDatasourceGroup","_get","registerDataSource_","handleDataSourceVisibleChange_","unregisterDataSource_","_class","toggleVisibilityState","isDefined","lowercase","noop","nodeContains","htmlParser","htmlSanitizeWriter","$sanitizeMinErr","$$minErr","provider","svgEnabled","$get","$$sanitizeUri","validElements","svgElements","buf","uri","isImage","enableSvg","handler","inertBodyElement","getInertBodyElement","mXSSAttempts","innerHTML","toLowerCase","attrToMap","attributes","chars","textContent","nextNode","getNonDescendant","removeChild","uriValidator","ignoreCurrentElement","out","tag","blockedElements","lkey","validAttrs","uriAttrs","encodeEntities","voidElements","arg","compareDocumentPosition","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","toMap","optionalEndTagBlockElements","optionalEndTagInlineElements","optionalEndTagElements","blockElements","inlineElements","htmlAttrs","svgAttrs","str","lowercaseKeys","items","inertDocument","implementation","createHTMLDocument","documentElement","getDocumentElement","querySelector","DOMParser","parseFromString","e","documentMode","stripCustomNsAttrs","encodeURI","xhr","XMLHttpRequest","responseType","send","attr","charCodeAt","attrNode","attrName","lastIndexOf","removeAttributeNode","propName","outerHTML","outerText","info","angularVersion","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","linkyMinErr","isFunction","isObject","isString","match","attributesFn","addText","addLink","linkAttributes","arr1","arr2","dereg1","dereg2","nodeExpr","state_","mapExpr","$parent","splice","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","state","opt_broadcast","setStateInternal_","firstParents","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","setDataSource","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","_component","gmfDisclaimerComponent","ngeoDisclaimer","ngeoEventHelper","external","popup","msg","msgs_","createPopup_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","olLayerBase","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","$onDestroy","ngeoMessageMessage","WARNING","container","container_","messages_","show","getMessageObjects","closeMessage_","showMessage","getMessageUid_","classNames","ERROR","INFORMATION","SUCCESS","el","button","hasClass","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcLayers_","ogcServerType_","ogcServerType","MAPSERVER","ogcType_","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsUrl_","ogcLayer","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","range","lower","upper","config","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","prefix","defaultPrefix","ft","pop","count","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","readPoint","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","ring","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","gmfLayertreeComponent","gmfMapComponent","gmfThemeManager","ngeoLayertreeModule","gmfDisclaimerModule","constant","MainController","ngeoLocation","olSourceOSM","resolutions","center","zoom","modal","getParam","groups","getSetTheme","getSetGroup","getSetLayers","addGroupByLayerName","getSetRemoveTree","flatNodes","getDistinctFlatNodes_","alreadyAdded","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","olServerType","serverType","createBasicWMSLayerFromDataSource","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","optionsFromCapabilities","elt","layerCap","capabilitiesStyles","opt_layers","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","legendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","ngeoNotification_","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","groupID","rootChild","grp","unshift","addGroupByName","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","cloneGroupNode_","assign","toggleNodeCheck_","childNode","correspondingTreeCtrl","firstLevelGroupCtrl","gmfGroup","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","legendElement","_this8","ngeoMessageNotification","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","localStorage","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","coords","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","line","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","rgb","r","g","Error","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","success","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","LOADED","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","compareVersions","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","title_","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","geom","featureUidToGroupIndex_","groups_","useSpatialIndex","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","projString","defData","paramName","paramVal","paramOutname","self","paramObj","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","f","temp","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","angle","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","configurable","getOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","DEFAULT_DELAY_","clearMessageByCacheItem_","delay","wmsDataSourceUnregister_","init_","updateLayer_"],"mappings":"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","file":"layertree.0f9e218834c0bda854ac.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/File.js","/**\n * @module ngeo.message.popupComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.misc.Time\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/SyncLayertreeMap.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      });\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","require('./angular-sanitize');\nmodule.exports = 'ngSanitize';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/index.js\n// module id = 209\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\nimport gmfBase from 'gmf/index.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","/**\n * @module ngeo.layertree.component\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessagePopup.module.name,\n  ngeoMessagePopupComponent.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const subTemplateUrl = `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`;\n    return `${'<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          'ngeo-layertree-templateurl=\"'}${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nngeoLayertreeComponent.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`);\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overrided by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup.\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow'\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.$http} $http Angular http service.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $http, $sce, $scope,\n  ngeoCreatePopup, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager,\n  gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @private\n   * @type {!angular.$http}\n   */\n  this.$http_ = $http;\n\n  /**\n   * @private\n   * @type {!angular.$sce}\n   */\n  this.$sce_ = $sce;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @private\n   * @type {!ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {!Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Mutliple urls for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Display a ngeo.infoPopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const treeUid = treeCtrl.uid.toString();\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    if (!(treeUid in this.promises_)) {\n      this.promises_[treeUid] = this.$http_.get(metadataURL).then(\n        (resp) => {\n          const html = this.$sce_.trustAsHtml(resp.data);\n          return html;\n        });\n    }\n    const infoPopup = this.infoPopup_;\n    this.promises_[treeUid].then((html) => {\n      infoPopup.setTitle(node.name);\n      infoPopup.setContent(html);\n      infoPopup.setOpen(true);\n    });\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  }, this);\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach(function(child) {\n    this.layers.push(child.layer);\n  }, this);\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/component.js","/**\n * @module ngeo.misc.File\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/File.js","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/FileGroup.js","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module(\n  'gmfLayertreeDatasourceGroupTreeComponent', [\n    ngeoDatasourceDataSources.module.name,\n  ]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/layertree/datasourceGroupTreeComponent.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","/**\n * @license AngularJS v1.6.9\n * (c) 2010-2018 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar nodeContains;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  nodeContains = window.Node.prototype.contains || /** @this */ function(arg) {\n    // eslint-disable-next-line no-bitwise\n    return !!(this.compareDocumentPosition(arg) & 16);\n  };\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href,xml:base');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  /**\n   * Create an inert document that contains the dirty HTML that needs sanitizing\n   * Depending upon browser support we use one of three strategies for doing this.\n   * Support: Safari 10.x -> XHR strategy\n   * Support: Firefox -> DomParser strategy\n   */\n  var getInertBodyElement /* function(html: string): HTMLBodyElement */ = (function(window, document) {\n    var inertDocument;\n    if (document && document.implementation) {\n      inertDocument = document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');\n\n    // Check for the Safari 10.1 bug - which allows JS to run inside the SVG G element\n    inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (!inertBodyElement.querySelector('svg')) {\n      return getInertBodyElement_XHR;\n    } else {\n      // Check for the Firefox bug - which prevents the inner img JS from being sanitized\n      inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n      if (inertBodyElement.querySelector('svg img')) {\n        return getInertBodyElement_DOMParser;\n      } else {\n        return getInertBodyElement_InertDocument;\n      }\n    }\n\n    function getInertBodyElement_XHR(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        html = encodeURI(html);\n      } catch (e) {\n        return undefined;\n      }\n      var xhr = new window.XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n      xhr.send(null);\n      var body = xhr.response.body;\n      body.firstChild.remove();\n      return body;\n    }\n\n    function getInertBodyElement_DOMParser(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n        body.firstChild.remove();\n        return body;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    function getInertBodyElement_InertDocument(html) {\n      inertBodyElement.innerHTML = html;\n\n      // Support: IE 9-11 only\n      // strip custom-namespaced attributes on IE<=11\n      if (document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n\n      return inertBodyElement;\n    }\n  })(window, window.document);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n\n    var inertBodyElement = getInertBodyElement(html);\n    if (!inertBodyElement) return '';\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // trigger mXSS if it is going to happen by reading and writing the innerHTML\n      html = inertBodyElement.innerHTML;\n      inertBodyElement = getInertBodyElement(html);\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = getNonDescendant('nextSibling', node);\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = getNonDescendant('parentNode', node);\n            if (node === inertBodyElement) break;\n            nextNode = getNonDescendant('nextSibling', node);\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = getNonDescendant('nextSibling', node);\n    }\n  }\n\n  function getNonDescendant(propName, node) {\n    // An element is clobbered if its `propName` property points to one of its descendants\n    var nextNode = node[propName];\n    if (nextNode && nodeContains.call(node, nextNode)) {\n      throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);\n    }\n    return nextNode;\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', [])\n  .provider('$sanitize', $SanitizeProvider)\n  .info({ angularVersion: '1.6.9' });\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/sftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} [target] Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((s?ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/angular-sanitize.js\n// module id = 229\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/syncArrays.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmf.disclaimer.module\n */\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDisclaimerModule', [\n  gmfDisclaimerComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/module.js","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize'\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach(function(layer) {\n      this.registerLayer_(layer);\n    }, this);\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.showDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(this.unregisterLayer_, this);\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.closeDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/component.js","/**\n * @module ngeo.message.Disclaimer\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Disclaimer.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.layertree\n */\nconst exports = {};\n\nimport './layertree.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDisclaimerModule from 'gmf/disclaimer/module.js';\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoLayertreeModule from 'ngeo/layertree/module.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change when other dependencies are in a module\n  gmfLayertreeComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfMapComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerLocation.module.name,\n  ngeoLayertreeModule.name,\n  gmfDisclaimerModule.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background&interface=desktop');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.theme.Manager} gmfThemeManager gmf Theme Manager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n */\nexports.MainController = function(gmfTreeManager, gmfThemes, gmfThemeManager, ngeoLocation) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  // How should disclaimer message be displayed: in modals or alerts\n  const modal = ngeoLocation.getParam('modal');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modal = modal === 'true';\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @export\n   */\n  this.gmfTreeManager = gmfTreeManager;\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {Array.<gmfThemes.GmfTheme>}\n   * @export\n   */\n  this.themes = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @export\n   */\n  this.groups = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfLayer>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @param {gmfThemes.GmfTheme|undefined} value A theme or undefined to get Themes.\n   * @return {Array.<gmfThemes.GmfTheme>} All themes.\n   * @export\n   */\n  this.getSetTheme = function(value) {\n    if (value) {\n      this.gmfThemeManager.addTheme(value);\n    }\n    return this.themes;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in all themes.\n   * @export\n   */\n  this.getSetGroup = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.setFirstLevelGroups([value]);\n    }\n    return this.groups;\n  };\n\n  /**\n   * @param {gmfThemes.GmfLayer|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfLayer>} All groups in all themes.\n   * @export\n   */\n  this.getSetLayers = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.addGroupByLayerName(value.name);\n    }\n    return this.layers;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A GeoMapFish group, or undefined\n   *     to get the groups of the tree manager.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in the tree manager.\n   * @export\n   */\n  this.getSetRemoveTree = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.removeGroup(value);\n    }\n    return this.gmfTreeManager.root.children;\n  };\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      this.themes = themes;\n\n      // Get an array with all nodes entities existing in \"themes\".\n      const flatNodes = [];\n      this.themes.forEach((theme) => {\n        theme.children.forEach((group) => {\n          this.groups.push(group); // get a list of all groups\n          this.getDistinctFlatNodes_(group, flatNodes);\n        });\n      });\n      flatNodes.forEach((node) => {\n        // Get an array of all layers\n        if (node.children === undefined) {\n          this.layers.push(node);\n        }\n      });\n    }\n  });\n\n  /**\n   * Just for this example\n   * @param {gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer} node A theme, group or layer node.\n   * @param {Array.<gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An Array of nodes.\n   * @export\n   */\n  this.getDistinctFlatNodes_ = function(node, nodes) {\n    let i;\n    const children = node.children;\n    if (children !== undefined) {\n      for (i = 0; i < children.length; i++) {\n        this.getDistinctFlatNodes_(children[i], nodes);\n      }\n    }\n    let alreadyAdded = false;\n    nodes.some((n) => {\n      if (n.id === node.id) {\n        return alreadyAdded = true;\n      }\n    });\n    if (!alreadyAdded) {\n      nodes.push(node);\n    }\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/layertree.js","/**\n * @module ngeo.layertree.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.layertree.Controller (already required by ngeo.layertree.component)\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertreeModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoLayertreeComponent.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/module.js","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}