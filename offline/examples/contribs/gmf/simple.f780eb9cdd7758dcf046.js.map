{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./contribs/gmf/examples/simple.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__WEBPACK_IMPORTED_MODULE_5__xml_js__","__webpack_require__","WMSGetFeatureInfo","opt_options","options","this","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","exports","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","listenerKeys_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","map","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","forEach","olEvents","unlistenByKey","$watchCollection","rootCtrl","children","value","traverseDepthFirst","registerTreeCtrl_","bind","push","listen","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","olCollection","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","name","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","view","getView","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","module","angular","service","gmfBase","requires","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","undefined","originalEl","element","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoBase","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","evt","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","$eval","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","gmfMapComponent","constant","MainController","olMap","olSourceOSM","olView","center","zoom","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","ol_Image","ImageWMS","source_Image","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","restrict","link","attrs","prop","setTarget","manageResizeProp","resizeTransitionProp","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","factory_","func","wait","invokeApply","_len","args","_key","manager","manager_","index_","setFeatures"],"mappings":"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","file":"simple.f780eb9cdd7758dcf046.js","sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.simple\n*/\nconst exports = {};\n\nimport './simple.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/simple.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}