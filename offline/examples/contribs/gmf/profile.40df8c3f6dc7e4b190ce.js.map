{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/download/service.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/download/Csv.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./contribs/gmf/examples/profile.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./src/profile/elevationComponent.js","webpack:///./src/profile/d3Elevation.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__WEBPACK_IMPORTED_MODULE_5__xml_js__","__webpack_require__","WMSGetFeatureInfo","opt_options","options","this","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","exports","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","listenerKeys_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","map","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","forEach","olEvents","unlistenByKey","$watchCollection","rootCtrl","children","value","traverseDepthFirst","registerTreeCtrl_","bind","push","listen","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","olCollection","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","name","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","view","getView","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","module","angular","service","gmfBase","requires","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","undefined","originalEl","element","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoBase","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","evt","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","setCoordinates","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","wrapX","getDefaultStyleFunction","updateWhileInteracting","geometryName_","condition_","condition","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","events","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","ol","Style","createDefaultEditing","resolution","event","originalEvent","EventType","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","Date","now","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","start","setGeometryName","setGeometry","dispatchEvent","last","sketchLineGeom","ring","getLinearRing","getLayout","done","pop","removeLastPoint","splice","sketchFeature","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","getSource","sketchFeatures","overlaySource","addFeatures","getActive","createRegularPolygon","opt_sides","opt_angle","center","angle","atan","createBox","ol_extent","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","opt_layout","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","layout","closestPointXY","closestPoint","minSquaredDistance","delta","containsXY","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","intersectsExtent","circleExtent","intersectsCoordinate","setCenter","setLayout","changed","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setFlatCoordinatesInternal","setRadius","transform","factory_","fileName","opt_fileType","fileType","isSafari","blob","Blob","saveAs","factory","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","olObservable","mapUids_","mapUid","previous","setAt","removeAt","insertAt","ngeoCustomEvent","current","updateDimensions","dimensions","baseBgLayer","olLayerGroup","getArray","olLayerLayer","hasUpdates","updatedDimensions","olSourceWMTS","refresh","olSourceTileWMS","olSourceImageWMS","updateParams","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","ngeoMapBackgroundLayerMgr","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","_index","restrict","link","$scope","$element","$attrs","mapExpr","$eval","recenter","attr","fit","zoom","setZoom","on","selected","target","selectedIndex","$window","attrs","prop","olMap","stateExpr","animationDelayKey","animationDelay","updateSize","renderSync","requestAnimationFrame","oldVal","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","$applyAsync","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","gettextCatalog_","encoding_","extension_","includeHeader_","quote_","separator_","download_","generateCsv","columnDefs","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","RegExp","doubleQuote","startDownload","fileContent","ngeoDownloadService","isRoot","nodeExpr","state_","$parent","$on","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","serverType","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","read","optionsFromCapabilities","isEmpty","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","gmfMapComponent","gmfProfileModule","ngeoMapModule","constant","MainController","profileLine","profileLinesconfiguration","aster","srtm","profileOptions","styleDefs","olSourceOSM","olView","resolutions","lineStyle","overlay","getFeatureOverlay","setFeatures","drawLine","olInteractionDraw","setActive","toggleDrawLineActive","clear_","$digest","gmfProfileComponent","gmfProfileDrawLineComponent","ngeoDownloadCsv","ngeoProfileElevationComponent","gmfProfileTemplateUrl","component_","bindings","line","getMapFn","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","component","$filter","gmfProfileJsonUrl","ngeoCsvDownload","$element_","$filter_","pointHoverOverlay_","gmfProfileJsonUrl_","ngeoCsvDownload_","linesConfiguration_","layersNames_","nbPoints_","profileData","currentPoint","elevations","xUnits","yUnits","profileHighlight","measureTooltip_","measureTooltipElement_","snappedPoint_","profileLabels_","xAxis","yAxis","pointerMoveKey_","isErrored","newValue","oldValue","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","linesConfiguration","zExtractor","getZFactory_","distanceExtractor","getDist_","hoverCallback","hoverCallback_","outCallback","outCallback_","i18n","optionsFn","assertObject","getJsonProfile_","onPointerMove_","unByKey","dragging","getEventCoordinate","getClosestPoint","pixelDist","getLength","getDistanceOnALine_","$apply","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","elevationsRef","ref","geom","createMeasureTooltip_","innerHTML","getTooltipHTML_","setPosition","removeMeasureTooltip_","elevationName","translatedElevationName","number","DistDecimal","document","createElement","className","positioning","addOverlay","parentNode","removeChild","lineConfiguration","getLayersNames","JSON","stringify","nbPoints","method","paramSerializer","headers","Content-Type","getProfileDataSuccess_","getProfileDataError_","resp","downloadCsv","hasDistance","rows","row","ngeoMiscDebounce","ngeoDebounce","optionsAttr","selection","d3","select","profile","elevationData","poiData","refreshData","datum","showPois","origHoverCallback","origOutCallback","_d3Elevation2","default","highlight","clearHighlight","_asserts","light","margin","top","right","bottom","left","nullFunction","numberOfLines","bisectDistance","bisector","d","poiExtractor","poiLabelAngle","xAxisLabel","yAxisLabel","formatter","xhover","units","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","g","height","xFactor","xDomain","each","selectAll","max","clientWidth","scaleLinear","clientHeight","axisBottom","axisLeft","area","y0","y1","firstLineName","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","padding","yHover","tickFormat","tickValues","ticks","tickSize","mouseX","mouse","x0","invert","elevation","lineName","xtranslate","pois","pe","poiEnterG","z","duration","delay","title","exit","getStyleFn","styleFn","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","coords","substr","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","LOADED","load","LOADING","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","featureUidToGroupIndex_","groups_","olSourceVector","layer_","olLayerVector","styleFunction_","updateWhileAnimating","groupIndex","featureUid","getLayer","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","asin","sinh","hypot","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeoOlcsConstants","Permalink3dParam","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","addClass","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","setTarget","manageResizeProp","resizeTransitionProp","loop","adjustSize","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","detail","olEventsEvent","func","wait","invokeApply","_len","args","_key","manager","manager_","index_"],"mappings":"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","file":"profile.40df8c3f6dc7e4b190ce.js","sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 125\n// module chunks = 0 1 2 3 4 5 6 7 8 12 13 14","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.download.Csv\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/Csv.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module gmfapp.profile\n*/\nconst exports = {};\n\nimport './profile.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me when gmf.Theme and other dependencies are in a module\n  gmfPermalinkPermalink.module.name,\n  gmfMapComponent.name,\n  gmfProfileModule.name,\n  ngeoMapModule.name // for ngeo.map.FeatureOverlay, perhaps remove me\n]);\n\n\nexports.module.value(\n  'gmfProfileJsonUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/profile.json');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureOverlayMgr) {\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {\n      'color': '#0404A0'\n    },\n    'srtm': {\n      'color': '#04A004'\n    }\n  };\n\n  this.profileOptions = {\n    styleDefs: 'svg {background-color: #D3E5D7};'\n  };\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n\n  const lineStyle = new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: '#ffcc33',\n      width: 2\n    })\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const features = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(features);\n  overlay.setStyle(lineStyle);\n\n\n  // Initialize the feature overlay manager with the map.\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * Draw line interaction.\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawLine = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: features\n  });\n\n  this.drawLine.setActive(false);\n  this.map.addInteraction(this.drawLine);\n\n  /**\n   * Toggle activation of the draw line interaction.\n   * @export\n   */\n  this.toggleDrawLineActive = function() {\n    if (this.drawLine.getActive()) {\n      this.drawLine.setActive(false);\n      this.clear_();\n    } else {\n      this.drawLine.setActive(true);\n    }\n  };\n\n  this.clear_ = function() {\n    features.clear(); // For the draw overlay.\n    this.profileLine = null; // To reset the profile.\n  };\n\n  this.drawLine.on('drawstart', function() {\n    this.clear_();\n  }, this);\n\n  this.drawLine.on('drawend', function(e) {\n    // Update the profile with the new geometry\n    this.profileLine = e.feature.getGeometry();\n    $scope.$digest();\n  }, this);\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/profile.js","/**\n * @module gmf.profile.module\n*/\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProifleModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/profile/module.js","/**\n * @module gmf.profile.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olObservable from 'ol/Observable.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/profile/component.html`;\n  });\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    goog.asserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  goog.asserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    goog.asserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olObservable.unByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/profile/component.js","/**\n * @module ngeo.profile.elevationComponent\n*/\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/profile/elevationComponent.js","/**\n * @module ngeo.profile.d3Elevation\n*/\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : olBase.nullFunction;\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : olBase.nullFunction;\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of differents configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/profile/d3Elevation.js","/**\n * @module gmf.profile.drawLineComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    goog.asserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  goog.asserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/profile/drawLineComponent.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}