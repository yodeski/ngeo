{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/DataSources.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/rule/Rule.js","webpack:///./src/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/datasource/File.js","webpack:///./src/message/popupComponent.js","webpack:///./src/misc/Time.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/message/Popup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/query/Querent.js","webpack:///./src/filter/RuleHelper.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/layertree/component.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/utils/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./node_modules/openlayers/src/ol/format/WMSCapabilities.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./contribs/gmf/examples/print.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/print/Service.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Utils.js"],"names":["__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__webpack_require__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","undefined","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","ngeoMapLayerHelper","value","service","requires","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","goog","asserts","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeoBase","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","key","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoStatemanagerService","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","olGeomPoint","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","navigator","userAgent","hex","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","olEventsCondition","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","unlisten","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","olStyleStyle","defaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","createFunction","proj4","projCodes","defs","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","a","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","shift","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","apply","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","extend","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","add","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","Proj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","num","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","min","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","olStyleStroke","width","radius","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","olFeature","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","ngeoPopover","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","$filter","$filter_","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","_Event","detail","olEventsEvent","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","collection_","handleDataSourcesAdd_","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","olObservable","unByKey","olView","syncDataSourceToResolution_","supportsDynamicInRange","unbindMap_","bindMap_","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","olOverlay","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olFormatTextFeature","accuracy_","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","ngeoFormatFeatureHashStyleType","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","olGeomGeometryLayout","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","L","GEOMETRY_WRITERS_","opt_flatCoordinates","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","closestOnCircle","closestOnSegment","distance","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","segmentData","insert","kk","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","olProjEPSG4326","RADIUS","getFormattedArea","geodesicArea","getFormattedCircleArea","getFormattedLength","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","olProjProj4","epsg21781def","register","setExtent","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","homepage","license","main","repository","scripts","build","build:tmerc","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","active_","lowerBoundary_","operator_","operator","upperBoundary_","isCustom_","isCustom","operators_","operators","propertyName_","listenerKeys","getExpression","setExpression","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","olMath","Scalify","numberFilter","filterFn","$locale","formats","NUMBER_FORMATS","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","nb_decimal","factor","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","olString","xdms","ydms","trustHtmlFilter","$sce","trustAsHtml","olExtent","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","getNumber","getOpacityProperty","azimut","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","featuresCollection_","ngeoPopupTemplateUrl","close","css","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","localDate","JSONFeature","format_Feature","getObject","JSON","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GeoJSON","defaultFeatureProjection","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","GEOMETRY_WRITERS","rightHanded","geoJSONFeature","geometry_name","geoJSONFeatures","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","createLayerFromGroup_","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","isOneParentNotMix","ngeoMiscWMSTime","$compile","$new","autoDestroy_","destroy","sce_","element_","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setWidth","setHeight","setSize","setAutoDestroy","autoDestroy","cls","Factory","ngeoMessagePopupComponent","ngeoDataSources","ngeoFile","injector_","dataSources_","ngeoFile_","extDataSources_","files_","fileGroup_","ngeoDatasourceFileGroup","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","$inject","layerGroup","req","getWMSGroup","addDataSource","ngeoDatasourceWMSGroup","addLayer_","addWMSGroup_","getWMTSGroup","addWMTSGroup_","layerObj","handleWMTSDataSourceVisibleChange_","file","getFileDataSource_","fileGroup","readOptions","isKml","isGpx","ngeoDatasourceFile","removeFileDataSource_","removeOGCDataSource_","removeLayer_","removeDataSource","removeWMSGroup_","removeWMTSGroup_","EXTERNALLAYERGROUP_NAME","ngeoUtilsFile","ngeoDatasourceDataSources","mapUids_","mapUid","previous","setAt","removeAt","current","baseBgLayer","hasUpdates","updatedDimensions","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","ngeoRuleHelper","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","queryableDataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","supportsAttributes","ogcLayerNames","TYPENAME","ngeoWFSDescribeFeatureType","layerCapabilities","layerCapability","baseUrl","opt_cache","olFormatWMSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","limit","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","getSetOlFormatTypes_","opt_types","types","combinedDataSources","wfsCount","tolerancePx","createOrUpdateFromCoordinate","getFeatureCommonOptions","createFilter","incTime","getFeatureDefer","handleQueryResult_","countPromise","getCountOptions","featureCountXml","featureCountRequest","canceler","registerCanceler_","headers","Content-Type","numberOfFeatures","FEATURE_COUNT","INFO_FORMAT","activeDimensionsSet","filterString","filtrableLayerName","getFiltrableOGCLayerName","createFilterString","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","combined","combinableDataSource","combinableWithDataSourceForWFS","combinableWithDataSourceForWMS","isAnyOGCLayerInRange","CombinedDataSources","ngeoFilterRuleHelper","ngeoFeatureHelper","ngeoFeatureHelper_","opt_isCustom","rules","createRuleFromAttribute","rule","ngeoRuleDate","ngeoRuleRule","ngeoRuleGeometry","ngeoRuleSelect","choices","ngeoRuleText","optionsList","createRule","selectOptions","sourceRule","destRule","serializeRule","featureProperties","mainFilter","createFilterFromRule_","olFormatFilter","timeFilter","createTimeFilterFromDataSource_","filterNode","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","momentEnd","startValue","ngeoMiscFeatureHelper","ngeoLayertreeTemplateUrl","sources","total","pending","ngeoDataSourcesHelper","ngeoQueryResult","ngeoDataSourcesHelper_","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","handleResult_","queried","tooManyResults","idStr","querentResultItem","typeSeparatedFeatures","filteredProperties","alias","unset","featuresByType","ngeoQueryQuerent","_AttributeType","geomType","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeSyncLayertreeMap","ngeoLayertreeComponent","ngeoMessagePopup","gmfLayertreeTemplate","$element","component_","bindings","openLinksInNewWindow","component","ngeoCreatePopup","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfSyncLayertreeMap","scope_","$sce_","gmfSyncLayertreeMap_","infoPopup_","promises_","groupNodeStates_","dataLayerGroup_","$apply","DATALAYERGROUP_NAME","_syncArrays2","default","render","updateDimensions_","updateLayerDimensions_","once","listeners","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","treeUid","metadataURL","resp","infoPopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggle","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","NgeoFile","gettext","fileReader","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","abort","onload","onerror","reason","onprogress","readAsText","opt_cancelP","unregister_","_class","toggleVisibilityState","arr1","arr2","dereg1","dereg2","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","complexType","complexContent","ngeoFormatWFSAttribute","setAttributes","authenticationBaseUrl","gmfUser","baseUrl_","user_","load_","_olEventsEventTarget","RouteSuffix","IS_LOGGED_IN","handleLogin_","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","oldPassword","newPassword","confirmNewPassword","login","pwd","LOGIN","password","LOGOUT","resetUser_","RESET_PASSWORD","successFn","role_id","checkingLoginStatus","respData","setUser_","user","emitEvent","username","is_password_changed","role_name","feature_","format_","olFormatGeoJSON","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","olObject","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","olGeomGeometry","handleGeometryChange_","choices_","complexTypeElements","readFromComplexTypeElement_","required","ngeoFormatAttribute","setGeometryType","olFormatXML","olXml","readElement_","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","extension","sequence","WMSCapabilities","__WEBPACK_IMPORTED_MODULE_2__format_XML_js__","wmsCapabilityObject","readAttribution_","ATTRIBUTION_PARSERS_","readBoundingBox_","__WEBPACK_IMPORTED_MODULE_3__format_XSD_js__","readEXGeographicBoundingBox_","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","readCapability_","CAPABILITY_PARSERS_","readService_","SERVICE_PARSERS_","readContactInformation_","CONTACT_INFORMATION_PARSERS_","readContactPersonPrimary_","CONTACT_PERSON_PARSERS_","readContactAddress_","CONTACT_ADDRESS_PARSERS_","readException_","EXCEPTION_PARSERS_","readCapabilityLayer_","parentLayerObject","layerObject","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","readDimension_","unitSymbol","multipleValues","nearestValue","readFormatOnlineresource_","FORMAT_ONLINERESOURCE_PARSERS_","readRequest_","REQUEST_PARSERS_","readDCPType_","DCPTYPE_PARSERS_","readHTTP_","readOperationType_","OPERATIONTYPE_PARSERS_","readSizedFormatOnlineresource_","formatOnlineresource","readAuthorityURL_","authorityObject","readMetadataURL_","metadataObject","readKeywordList_","KEYWORDLIST_PARSERS_","Service","Capability","Request","Exception","Name","KeywordList","OnlineResource","__WEBPACK_IMPORTED_MODULE_1__format_XLink_js__","ContactInformation","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","ContactPosition","ContactAddress","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","CRS","EX_GeographicBoundingBox","BoundingBox","Attribution","AuthorityURL","MetadataURL","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","GetCapabilities","GetMap","GetFeatureInfo","DCPType","StyleSheetURL","StyleURL","Keyword","ngeoMapBackgroundLayerMgr","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","recenter","attr","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","gmfLayertreeComponent","gmfMapComponent","gmfPrintComponent","ngeoMapModule","constant","MainController","olSourceOSM","defaulPrintFieldstValues","comments","treeSource","gmfAuthenticationService","ngeoPrintService","ngeoPrintUtils","ngeoQueryMapQuerent","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","transclude","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","translate_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","gmfAuthenticationService_","scaleInput","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","postcomposeListener_","capabilities_","currentThemes_","getRoleId","togglePrintPanel_","print","currentThemes","getRotationFn","createPrintMaskPostcompose","getScaleFn","mapSize","viewResolution","viewState","getOptimalScale_","getCapabilities_","parseCapabilities_","onPointerDrag_","getSetRotation","getCapabilities","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","assertObject","clientInfo","updateCustomFields_","dpis","rawType","simpleAttributes","previousAttributes","defaultValue","opt_rotation","toRadians","altKey","shiftKey","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","toDegrees","$digest","customAttributes","datasource","getDataSource_","lang","currentLanguage","field","getLegend_","setView","ol_layers","new_ol_layers","server_name","layer_names","printLayers","setLayerGroup","spec","createSpec","encodeLayer","createReport","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getOptimalScale","ref","getStatus_","getStatus","handleGetStatusSuccess_","mfResp","status","getReportUrl","classes","icons","getMetadataLegendImage_","layoutName","getOptimalResolution","contrainRes","stateEnumKey","vectorEncoder_","ngeoPrintVectorEncoder","printNativeAngle_","opt_httpConfig","httpConfig","specMap","encodeMap_","viewCenter","viewProjection","viewRotation","mapLayerGroup","arr","encodeImageLayer_","encodeTileLayer_","encodeVectorLayer","encodeImageWmsLayer_","encodeWmsLayer_","url_url","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","useNativeAngle","encodeURI","decodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","olTilegridWMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","olSize","topLeftCorner","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","matrixSet","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","printSpec","createPrintServiceFactory","geojsonFormat","PrintStyleTypes_","PrintStyleType","geojsonFeatures","mapfishStyleObject","originalFeature","styleData","origGeojsonFeature","isOriginalFeatureAdded","styleId","geojsonFeature","styledFeature","featureStyleProp","encodeVectorStyle","geoJson","symbolizers","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","encodeVectorStyleStroke","olStyleIcon","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeOpacity","strokeDashstyle","getLineDash","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","olTextBaseline","labelAlign","labelRotation","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","labelXOffset","labelYOffset","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","viewportWidth","viewportHeight","olHas","DEVICE_PIXEL_RATIO","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","minx","miny","maxx","maxy","diagonal","gamma","omega","x1","y1","x2","y2","x3","y3","x4","y4","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","printMapScale","dotsPerMeter","resolutionX","resolutionY","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner"],"mappings":"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","file":"print.6630265c5c58dc79bd66.js","sourcesContent":["/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 68\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14 15 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.WMSTime\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.datasource.DataSources\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 125\n// module chunks = 0 1 2 3 4 5 6 7 8 12 13 14","/**\n * @module ngeo.rule.Rule\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olObservable from 'ol/Observable.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, chaning an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = goog.asserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    olObservable.unByKey(this.listenerKeys);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: '>=',\n  DURING: '..',\n  ENDS: '<=',\n  EQUALS: '='\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Rule.js","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 138\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 139\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ngeo.datasource.File\n*/\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/File.js","/**\n * @module ngeo.message.popupComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\nconst exports = angular.module('ngeoPopup', []);\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module gmf.layertree.SyncLayertreeMap\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    goog.asserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    goog.asserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    goog.asserts.assert(ogcServer);\n    goog.asserts.assert(ogcServer.url);\n    goog.asserts.assert(ogcServer.type);\n    goog.asserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    goog.asserts.assert(ogcServer);\n    goog.asserts.assert(ogcServer.url);\n    goog.asserts.assert(ogcServer.type);\n    goog.asserts.assert(gmfLayerWMS.layers);\n    goog.asserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  goog.asserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  goog.asserts.assert(gmfLayerWMTS.url);\n  goog.asserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/SyncLayertreeMap.js","/**\n * @module ngeo.interaction.MeasureBaseOptions\n*/\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.message.Popup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n*/\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoUtilsFile from 'ngeo/utils/File.js';\n\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.utils.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.utils.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    goog.asserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      });\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = goog.asserts.assertString(layer['Title']);\n      const wmtsLayer = goog.asserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        goog.asserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      goog.asserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      goog.asserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoUtilsFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.query.Querent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      goog.asserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = goog.asserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    goog.asserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      goog.asserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      goog.asserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          goog.asserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      goog.asserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      goog.asserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions =\n            /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                resultType: 'hits'\n              },\n              getFeatureCommonOptions\n            )\n          );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions =\n              /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n              olObj.assign(\n                {\n                  maxFeatures\n                },\n                getFeatureCommonOptions\n              )\n            );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          goog.asserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    goog.asserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          goog.asserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          goog.asserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      goog.asserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = goog.asserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Querent.js","/**\n * @module ngeo.filter.RuleHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: goog.asserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        goog.asserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = olFormatWFS.writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      goog.asserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = goog.asserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = goog.asserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/RuleHelper.js","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n*/\nconst exports = {};\nimport gmfBase from 'gmf/index.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","/**\n * @module ngeo.layertree.component\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module ngeo.query.MapQuerent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nngeoBase.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * NOTE: This will replace the ngeo.Query service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      goog.asserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = goog.asserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/MapQuerent.js","/**\n * @module ngeo.format.Attribute\n*/\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/Attribute.js","/**\n * @module gmf.layertree.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessagePopup.module.name,\n  ngeoMessagePopupComponent.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const subTemplateUrl = `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`;\n    return `${'<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          'ngeo-layertree-templateurl=\"'}${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nngeoLayertreeComponent.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`);\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overrided by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup.\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow'\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.$http} $http Angular http service.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $http, $sce, $scope,\n  ngeoCreatePopup, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager,\n  gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @private\n   * @type {!angular.$http}\n   */\n  this.$http_ = $http;\n\n  /**\n   * @private\n   * @type {!angular.$sce}\n   */\n  this.$sce_ = $sce;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  goog.asserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @private\n   * @type {!ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {!Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      goog.asserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          goog.asserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    goog.asserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Mutliple urls for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Display a ngeo.infoPopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const treeUid = treeCtrl.uid.toString();\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    if (!(treeUid in this.promises_)) {\n      this.promises_[treeUid] = this.$http_.get(metadataURL).then(\n        (resp) => {\n          const html = this.$sce_.trustAsHtml(resp.data);\n          return html;\n        });\n    }\n    const infoPopup = this.infoPopup_;\n    this.promises_[treeUid].then((html) => {\n      infoPopup.setTitle(node.name);\n      infoPopup.setContent(html);\n      infoPopup.setOpen(true);\n    });\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  }, this);\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach(function(child) {\n    this.layers.push(child.layer);\n  }, this);\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/component.js","/**\n * @module ngeo.utils.File\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst NgeoFile = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nconst name = 'ngeoFile';\nNgeoFile.module = angular.module(name, []).service(name, NgeoFile);\nngeoBase.module.requires.push(name);\n\nconst exports = NgeoFile;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/File.js","/**\n * @module ngeo.datasource.FileGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/FileGroup.js","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module(\n  'gmfLayertreeDatasourceGroupTreeComponent', [\n    ngeoDatasourceDataSources.module.name,\n  ]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/layertree/datasourceGroupTreeComponent.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","/**\n * @module ngeo.misc.syncArrays\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/syncArrays.js","/**\n * @module ngeo.datasource.Helper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        goog.asserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        goog.asserts.assert(element.name === ogcLayerName);\n        goog.asserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Helper.js","/**\n * @module gmf.authentication.Service\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport gmfBase from 'gmf/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(\n      this.resetUser_.bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetUser_() {\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    this.load_();\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/authentication/Service.js","/**\n * @module ngeo.rule.Geometry\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport olObject from 'ol/Object.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        olObject.getChangeEventType(this.feature.getGeometryName()),\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = goog.asserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = goog.asserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olObservable.unByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Geometry.js","/**\n * @module ngeo.rule.Select\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Select.js","/**\n * @module ngeo.format.WFSAttribute\n*/\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = goog.asserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      goog.asserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = goog.asserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/WFSAttribute.js","/**\n * @module ngeo.rule.Date\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Date.js","/**\n * @module ngeo.rule.Text\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Text.js","/**\n * @module ngeo.WFSDescribeFeatureType\n*/\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/WFSDescribeFeatureType.js","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  const wmsCapabilityObject = _ol_xml_.pushParseAndPop({\n    'version': this.version\n  }, WMSCapabilities.PARSERS_, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMSCapabilities.readAttribution_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.ATTRIBUTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nWMSCapabilities.readBoundingBox_ = function(node, objectStack) {\n  const extent = [\n    XSD.readDecimalString(node.getAttribute('minx')),\n    XSD.readDecimalString(node.getAttribute('miny')),\n    XSD.readDecimalString(node.getAttribute('maxx')),\n    XSD.readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    XSD.readDecimalString(node.getAttribute('resx')),\n    XSD.readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Extent|undefined} Bounding box object.\n */\nWMSCapabilities.readEXGeographicBoundingBox_ = function(node, objectStack) {\n  const geographicBoundingBox = _ol_xml_.pushParseAndPop(\n    {},\n    WMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Capability object.\n */\nWMSCapabilities.readCapability_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CAPABILITY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Service object.\n */\nWMSCapabilities.readService_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.SERVICE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact information object.\n */\nWMSCapabilities.readContactInformation_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_INFORMATION_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact person object.\n */\nWMSCapabilities.readContactPersonPrimary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_PERSON_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact address object.\n */\nWMSCapabilities.readContactAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_ADDRESS_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<string>|undefined} Format array.\n */\nWMSCapabilities.readException_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.EXCEPTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readCapabilityLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readLayer_ = function(node, objectStack) {\n  const parentLayerObject = /**  @type {Object.<string,*>} */\n        (objectStack[objectStack.length - 1]);\n\n  const layerObject = _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable =\n        XSD.readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = XSD.readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = XSD.readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets =\n        XSD.readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth =\n        XSD.readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight =\n        XSD.readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nWMSCapabilities.readDimension_ = function(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': XSD.readBooleanString(\n      node.getAttribute('multipleValues')),\n    'nearestValue': XSD.readBooleanString(\n      node.getAttribute('nearestValue')),\n    'current': XSD.readBooleanString(node.getAttribute('current')),\n    'values': XSD.readString(node)\n  };\n  return dimensionObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readFormatOnlineresource_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nWMSCapabilities.readRequest_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.REQUEST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nWMSCapabilities.readDCPType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.DCPTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nWMSCapabilities.readHTTP_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.HTTP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nWMSCapabilities.readOperationType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.OPERATIONTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readSizedFormatOnlineresource_ = function(node, objectStack) {\n  const formatOnlineresource =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      XSD.readNonNegativeIntegerString(node.getAttribute('width')),\n      XSD.readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nWMSCapabilities.readAuthorityURL_ = function(node, objectStack) {\n  const authorityObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nWMSCapabilities.readMetadataURL_ = function(node, objectStack) {\n  const metadataObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMSCapabilities.readStyle_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.STYLE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nWMSCapabilities.readKeywordList_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.KEYWORDLIST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Service': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readService_),\n    'Capability': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapability_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CAPABILITY_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Request': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readRequest_),\n    'Exception': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readException_),\n    'Layer': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapabilityLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.SERVICE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'ContactInformation': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactInformation_),\n    'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AccessConstraints': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'LayerLimit': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_INFORMATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPersonPrimary': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactPersonPrimary_),\n    'ContactPosition': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactAddress': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactAddress_),\n    'ContactVoiceTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactFacsimileTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_PERSON_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPerson': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactOrganization': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'AddressType': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'StateOrProvince': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EXCEPTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'CRS': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'EX_GeographicBoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readEXGeographicBoundingBox_),\n    'BoundingBox': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readBoundingBox_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDimension_),\n    'Attribution': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readAttribution_),\n    'AuthorityURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readAuthorityURL_),\n    'Identifier': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'MetadataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readMetadataURL_),\n    'DataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'FeatureListURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readStyle_),\n    'MinScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'MaxScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.ATTRIBUTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'LogoURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readSizedFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'westBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'eastBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'southBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'northBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.REQUEST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'GetCapabilities': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetMap': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetFeatureInfo': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.OPERATIONTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'DCPType': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDCPType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.DCPTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readHTTP_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Post': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readSizedFormatOnlineresource_),\n    'StyleSheetURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'StyleURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n        XLink.readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.KEYWORDLIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Keyword': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\nexport default WMSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSCapabilities.js\n// module id = 208\n// module chunks = 0 1 2 4 5 8","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module gmfapp.print\n*/\nconst exports = {};\n\nimport './print.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfPrintComponent from 'gmf/print/component.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me when gmf.Theme and other dependencies are in a module\n  gmfLayertreeComponent.name,\n  gmfMapComponent.name,\n  gmfPrintComponent.name,\n  gmfThemeThemes.module.name,\n  ngeoMapModule.name //for ngeo.map.FeatureOverlay, perhaps remove me\n]);\n\n\nexports.module.value(\n  'gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?' +\n        'version=2&background=background');\n\n\nexports.module.value('gmfPrintUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/printproxy');\n\n\nexports.module.value(\n  'authenticationBaseUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi'\n);\n\n\nexports.module.value('gmfLayersUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *   overlay manager service.\n * @ngInject\n */\nexports.MainController = function(gmfThemes, ngeoFeatureOverlayMgr) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  /**\n   * @type {Object.<string, string|number|boolean>}\n   * @export\n   */\n  this.defaulPrintFieldstValues = {\n    'comments': 'Default comments example',\n    'legend': true\n  };\n\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.themes = undefined;\n\n  /**\n   * @type {Object|undefined}\n   * @export\n   */\n  this.treeSource = undefined;\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      this.themes = themes;\n      this.treeSource = themes[3];\n    }\n  });\n\n  ngeoFeatureOverlayMgr.init(this.map);\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/print.js","/**\n * @module gmf.print.component\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olObservable from 'ol/Observable.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/print/component.html`;\n  });\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priorty.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    if ($injector.has('gmfPrintOptions')) {\n      this.scaleInput = $injector.get('gmfPrintOptions')['scaleInput'];\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey|Array.<ol.EventsKey>}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey|Array.<ol.EventsKey>}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manualy choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    goog.asserts.assert(this.layoutInfo.scales);\n    goog.asserts.assert(this.layoutInfo.scale !== undefined);\n    if (this.layoutInfo.scale === -1 ||\n        olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale)) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = this.map.on('postcompose',\n          this.postcomposeListener_);\n        this.pointerDragListenerKey_ = this.map.on('pointerdrag',\n          this.onPointerDrag_.bind(this));\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olObservable.unByKey(this.postComposeListenerKey_);\n      olObservable.unByKey(this.pointerDragListenerKey_);\n      this.getSetRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    goog.asserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    goog.asserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Getter setter to update or get the current rotation value. Param and result\n   *     are in degree. Updating the rotation will redraw the mask or rorate the\n   *     map (depending on the configuration);\n   * @param {number=} opt_rotation The optional new rotation value.\n   * @return {number} The new value of rotation;\n   * @export\n   */\n  getSetRotation(opt_rotation) {\n    if (opt_rotation !== undefined) {\n      let rotation = parseInt(opt_rotation, 10);\n      if (rotation > 180) {\n        rotation = -180;\n      } else if (rotation < -180) {\n        rotation = 180;\n      }\n      this.rotation = rotation;\n\n      // Render the map to update the postcompose mask or rotate the map.\n      if (this.rotateMask) {\n        this.map.render();\n      } else {\n        this.map.getView().setRotation(olMath.toRadians(this.rotation));\n      }\n\n    }\n    return this.rotation;\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two differents sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.getSetRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.getOptimalScale_(mapSize, viewResolution);\n    const rotation = this.rotateMask ? -this.rotation : this.rotation;\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource,\n      'lang': this.gettextCatalog_.currentLanguage,\n      'rotation': rotation,\n      'scale': this.layoutInfo.scale\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const legend = this.getLegend_(scale);\n      if (legend !== null) {\n        customAttributes['legend'] = this.getLegend_(scale);\n      }\n    }\n\n    goog.asserts.assertNumber(this.layoutInfo.dpi);\n    goog.asserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        goog.asserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    goog.asserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale) {\n    const legend = {'classes': []};\n    let classes, layerNames, layerName, icons;\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          layerName = `${layer.get('layerNodeName')}`;\n          icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale);\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push({\n                'name': gettextCatalog.getString(name),\n                'icons': [icons]\n              });\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/print/component.js","/**\n * @module ngeo.print.Service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  goog.asserts.assert(viewCenter !== undefined);\n  goog.asserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  goog.asserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      goog.asserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  goog.asserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  goog.asserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  goog.asserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  goog.asserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  goog.asserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/Service.js","/**\n * @module ngeo.print.VectorEncoder\n*/\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        const styleId = olBase.getUid(style).toString();\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/VectorEncoder.js","/**\n * @module ngeo.print.Utils\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom rigth corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom rigth corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/Utils.js"],"sourceRoot":""}