{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/filters.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/interaction/MobileDraw.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./contribs/gmf/examples/mobilemeasure.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__WEBPACK_IMPORTED_MODULE_5__xml_js__","__webpack_require__","WMSGetFeatureInfo","opt_options","options","this","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","exports","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","listenerKeys_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","map","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","forEach","olEvents","unlistenByKey","$watchCollection","rootCtrl","children","value","traverseDepthFirst","registerTreeCtrl_","bind","push","listen","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","olCollection","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","name","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","view","getView","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","module","angular","service","gmfBase","requires","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","undefined","originalEl","element","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoBase","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","evt","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","setCoordinates","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","wrapX","getDefaultStyleFunction","updateWhileInteracting","geometryName_","condition_","condition","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","events","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","ol","Style","createDefaultEditing","resolution","event","originalEvent","EventType","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","Date","now","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","start","setGeometryName","setGeometry","dispatchEvent","last","sketchLineGeom","ring","getLinearRing","getLayout","done","pop","removeLastPoint","splice","sketchFeature","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","getSource","sketchFeatures","overlaySource","addFeatures","getActive","createRegularPolygon","opt_sides","opt_angle","center","angle","atan","createBox","ol_extent","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","transition","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","olInteractionInteraction","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","olLayerVector","olSourceVector","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","olProjEPSG4326","RADIUS","getFormattedArea","format","transform","abs","geodesicArea","getFormattedCircleArea","PI","pow","getFormattedLength","c1","c2","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","addOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","callback","getTooltipElement","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","opt_layout","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","layout","closestPointXY","closestPoint","minSquaredDistance","delta","containsXY","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","intersectsExtent","circleExtent","intersectsCoordinate","setCenter","setLayout","changed","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setFlatCoordinatesInternal","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","olString","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","_index","btnGroupComponent_","$parse","restrict","link","attrs","assign","buttons_","some","buttonModel","newValue","BtnGroupController","$scope","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","ngeoInteractionMeasure","br","olInteractionDraw","geom","proj","getLastCoordinate","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","olFunctions","TRUE","sketchPoints_","updateWhileAnimating","handleViewCenterChange_","getDirty","getDrawing","getValid","getFeature","addToDrawing","drawing","sketchFeatureGeom","getSketchPointGeometry_","olGeomSimpleGeometry","valid","clearDrawing","getCenter_","assertArray","$attrs","isRoot","nodeExpr","state_","oldVal","$eval","mapExpr","$parent","$on","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","ogcLayer","err","return","supportsWFS","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","defaultPrefix","ft","nodeName","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","gmfMapComponent","gmfMobileMeasureLengthComponent","gmfMobileMeasurePointComponent","ngeoMiscBtnComponent","constant","MainController","getMapCenter","zoom","getMapZoom","olMap","olSourceOSM","olView","resolutions","addControl","olControlScaleLine","measureLengthActive","measurePointLayersConfig","aster","srtm","measurePointActive","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","component_","gmfMobileMeasureLengthTemplateUrl","filter_","lineDash","olStyleRegularShape","radius2","drawInteraction","dirty","ngeoInteractionMeasureLengthMobile","defineProperty","olObject","addPoint","finish","deactivate","obj","ngeoInteractionMeasureLength","ngeoInteractionMobileDraw","gmfRasterRasterService","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gmfRaster","ngeoDebounce","gmfRaster_","ngeoDebounce_","gettextCatalog_","$filter_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","mapViewPropertyChangeEventKey_","ngeoInteractionMeasurePointMobile","translate","str","getMeasure_","el","ctn","className","childEl","previousCtn","getElementsByClassName","LayerConfig","coordFormat","format_","coordFormat_","dec","ngeoNotification","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","featureUidToGroupIndex_","groups_","layer_","styleFunction_","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoEventHelper","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","prop","setTarget","manageResizeProp","resizeTransitionProp","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","detail","olEventsEvent","factory_","func","wait","invokeApply","_len","args","_key","manager","manager_","index_","setFeatures"],"mappings":"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","file":"mobilemeasure.8367d3de78f3f644a30c.js","sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 125\n// module chunks = 0 1 2 3 4 5 6 7 8 12 13 14","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ngeo.interaction.MeasureBaseOptions\n*/\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.interaction.MeasureLength\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.raster.RasterService\n*/\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ngeo.interaction.MobileDraw\n*/\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      olInteractionDraw.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      this.dispatchEvent(new olInteractionDraw.Event(\n        /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    goog.asserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      this.dispatchEvent(new olInteractionDraw.Event(\n        /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      goog.asserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), this.sketchFeature_));\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    goog.asserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  goog.asserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  goog.asserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  goog.asserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MobileDraw.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.mobilemeasure\n*/\nconst exports = {};\n\nimport './mobilemeasure.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n  gmfPermalinkPermalink.module.name,\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n  ngeoMiscBtnComponent.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function(gmfPermalink) {\n\n  const center = gmfPermalink.getMapCenter() || [537635, 152640];\n  const zoom = gmfPermalink.getMapZoom() || 3;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: center,\n      zoom: zoom\n    })\n  });\n\n  this.map.addControl(new olControlScaleLine());\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {Object.<string, gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.measurePointLayersConfig = {\n    'aster': {unit: 'm', decimals: 2},\n    'srtm': {unit: 'm'}\n  };\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/mobilemeasure.js","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.mobile.measure.lengthComponent\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nconst exports = angular.module('', []);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} The template url.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/mobile/measure/lengthComponent.html`;\n  });\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('dirty'),\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('drawing'),\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('valid'),\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/mobile/measure/lengthComponent.js","/**\n * @module ngeo.interaction.MeasureLengthMobile\n*/\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olBase.obj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLengthMobile.js","/**\n * @module gmf.mobile.measure.pointComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\nimport olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('', [\n  gmfRasterRasterService.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} The template url.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/mobile/measure/pointComponent.html`;\n  });\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  goog.asserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ =\n    function() {\n      if (this.measure.getActive()) {\n        const view = this.map.getView();\n        this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n          view,\n          'propertychange',\n          this.ngeoDebounce_(\n            this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n          this);\n        this.getMeasure_();\n      } else if (this.mapViewPropertyChangeEventKey_) {\n        olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n        this.mapViewPropertyChangeEventKey_ = null;\n      }\n    };\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  goog.asserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/mobile/measure/pointComponent.js","/**\n * @module ngeo.interaction.MeasurePointMobile\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, coordFormat, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, options);\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasurePointMobile.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}