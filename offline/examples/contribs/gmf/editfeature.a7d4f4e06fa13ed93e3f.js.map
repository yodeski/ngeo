{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/editfeature.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","olBase","_Event","type","detail","olEventsEvent","inherits","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","JSONFeature","format_Feature","getObject","object","JSON","FormatType","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjection","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GeoJSON","defaultDataProjection","proj","featureProjection","defaultFeatureProjection","geometryName_","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","GEOMETRY_WRITERS","right","rightHanded","obj","geoJSONFeature","Feature","setGeometryName","geometry_name","setGeometry","id","setId","geoJSONFeatures","crs","adaptOptions","getId","objects","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","authenticationBaseUrl","gmfUser","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","baseUrl_","user_","load_","$inject","_inherits","_olEventsEventTarget","_createClass","RouteSuffix","IS_LOGGED_IN","handleLogin_","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","login","pwd","LOGIN","password","LOGOUT","resetUser_","RESET_PASSWORD","successFn","resp","functionalities","role_id","checkingLoginStatus","respData","setUser_","event","ngeoCustomEvent","user","emitEvent","username","is_password_changed","role_name","component_","require","ngModel","transclude","bindings","resizable","component","_class","$scope","$element","$element_","$scope_","modal_","dialog","draggable","$render","modal","$viewValue","on","e","$apply","$setViewValue","olUri","gmfLayersUrl","getFeaturesInExtent","layerIds","appendParams","handleGetFeatures_","getFeaturesWithComparisonFilters","filters","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","property","operator","err","return","olFormatGeoJSON","insertFeatures","layerId","geoJSON","updateFeature","put","deleteFeature","delete","gmfAuthenticationComponent","gmfAuthenticationService","ngeoMessageNotification","ngeoMessageModalComponent","gmfAuthenticationTemplateUrl","$attrs","gmfAuthenticationTemplateUrl_","allowPasswordChange","forcePasswordChange","AuthenticationController_","ngeoNotification","gmfAuthenticationService_","notification_","allowPasswordReset","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","onLoginReady_","setError_","changePassword","changePasswordReset","resetError_","logout","resetPasswordSuccessFn","resetPassword","msg","notify","ngeoMessageMessage","Type","WARNING","container","target","ERROR","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","ogcLayer","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","ngeoDatasourceDataSource","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","olExtent","gmfAuthenticationModule","gmfEditingEditFeature","gmfMapComponent","constant","MainController","gmfEditFeature","scope_","editFeature_","wmsSource_","olSourceImageWMS","LAYERS","wmsLayer_","olLayerImage","pixelBuffer_","layerId_","pending","olSourceOSM","olView","resolutions","center","zoom","handleMapSingleClick_","tooltip","trigger","buffer","getResolution","insertFeature","bottomLeft","getBottomLeft","topRight","getTopRight","left","bottom","deltaX","deltaY","random","handleEditFeature_","refreshWMSLayer_","updateParams","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","olServerType","serverType","createBasicWMSLayerFromDataSource","setVisible","visible","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","updateWMSLayerState","names","getQuerySourceIds","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","info","success","SUCCESS","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","disposeInternal","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"editfeature.a7d4f4e06fa13ed93e3f.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport gmfBase from 'gmf/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(\n      this.resetUser_.bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetUser_() {\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    this.load_();\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/authentication/Service.js","/**\n * @module ngeo.message.modalComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.modal_ = this.$element_.children();\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.$scope_.$apply(() => {\n        this.ngModel.$setViewValue(type == 'shown');\n      });\n    });\n  }\n\n  $onDestroy() {\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/modalComponent.js","/**\n * @module gmf.editing.EditFeature\n */\nimport gmfBase from 'gmf/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/EditFeature.js","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/authentication/module.js","/**\n * @module gmf.authentication.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    `${gmfBase.baseModuleTemplateUrl}/authentication/component.html`;\n};\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password.\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {angular.Scope} $scope The directive's scope.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor(gettextCatalog, $scope, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n\n    olEvents.listen(gmfAuthenticationService, 'ready', this.onLoginReady_.bind(this));\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // (1) validation - passwords are required\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // (2) validation - passwords must be new and must also match\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // (3) send request with current credentials, which may fail if\n        //     the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect username or password.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occured while reseting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n\n  /**\n   * @param {gmfx.AuthenticationEvent} e GMF Authentication event.\n   * @private\n   */\n  onLoginReady_(e) {\n    if (e.detail.user.is_password_changed === false && this.forcePasswordChange) {\n      const gettextCatalog = this.gettextCatalog;\n      const msg = gettextCatalog.getString('You must change your password.');\n      this.notification_.notify({\n        msg: msg,\n        type: ngeoMessageMessage.Type.WARNING\n      });\n    }\n  }\n\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = angular.element('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/authentication/component.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.editfeature\n */\nconst exports = {};\n\nimport './editfeature.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport gmfBase from 'gmf/index.js';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfAuthenticationModule.name,\n  gmfEditingEditFeature.module.name,\n  gmfMapComponent.name,\n]);\n\n\nexports.module.value(\n  'authenticationBaseUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi');\n\n\nexports.module.value('gmfLayersUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmfx.User} gmfUser User.\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, gmfEditFeature, gmfUser) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @export\n   */\n  this.editFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = gmfUser;\n\n  /**\n   * @type {ol.source.ImageWMS}\n   * @private\n   */\n  this.wmsSource_ = new olSourceImageWMS({\n    url: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    params: {'LAYERS': 'point'}\n  });\n\n  /**\n   * @type {ol.layer.Image}\n   * @private\n   */\n  this.wmsLayer_ = new olLayerImage({\n    source: this.wmsSource_\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelBuffer_ = 10;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.layerId_ = 113;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      this.wmsLayer_\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 2\n    })\n  });\n\n  this.map.on('singleclick', this.handleMapSingleClick_, this);\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapSingleClick_ = function(evt) {\n\n  // (1) Launch query to fetch new features\n  const coordinate = evt.coordinate;\n  const map = this.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const buffer = resolution * this.pixelBuffer_;\n  const extent = olExtent.buffer(\n    [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n    buffer\n  );\n\n  this.editFeature_.getFeaturesInExtent([this.layerId_], extent).then(\n    this.handleGetFeatures_.bind(this));\n\n  // (2) Clear any previously selected feature\n  this.feature = null;\n\n  // (3) Pending\n  this.pending = true;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.MainController.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  if (features.length) {\n    this.feature = features[0];\n  }\n};\n\n\n/**\n * Insert a new feature at a random location.\n * @export\n */\nexports.MainController.prototype.insertFeature = function() {\n\n  this.pending = true;\n\n  // (1) Create a randomly located feature\n  const map = this.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const buffer = resolution * -50; // 50 pixel buffer inside the extent\n  const size = /** @type {!Array.<number>} */ (map.getSize());\n  const extent = olExtent.buffer(\n    view.calculateExtent(size),\n    buffer\n  );\n  const bottomLeft = olExtent.getBottomLeft(extent);\n  const topRight = olExtent.getTopRight(extent);\n  const left = bottomLeft[0];\n  const bottom = bottomLeft[1];\n  const right = topRight[0];\n  const top = topRight[1];\n  const deltaX = right - left;\n  const deltaY = top - bottom;\n  const coordinate = [\n    left + Math.random() * deltaX,\n    right + Math.random() * deltaY\n  ];\n\n  const feature = new olFeature({\n    'geometry': new olGeomPoint(coordinate),\n    'name': 'New point'\n  });\n\n  // (2) Launch request\n  this.editFeature_.insertFeatures(\n    this.layerId_,\n    [feature]\n  ).then(\n    this.handleEditFeature_.bind(this)\n  );\n};\n\n\n/**\n * Update the currently selected feature with a new name.\n * @export\n */\nexports.MainController.prototype.updateFeature = function() {\n\n  console.assert(this.feature);\n\n  this.pending = true;\n\n  // (1) Update name\n  this.feature.set('name', 'Updated name');\n\n  // (2) Launch request\n  this.editFeature_.updateFeature(\n    this.layerId_,\n    this.feature\n  ).then(\n    this.handleEditFeature_.bind(this)\n  );\n\n  // (3) Reset selected feature\n  this.feature = null;\n};\n\n\n/**\n * Delete currently selected feature.\n * @export\n */\nexports.MainController.prototype.deleteFeature = function() {\n\n  console.assert(this.feature);\n\n  // (1) Launch request\n  this.editFeature_.deleteFeature(\n    this.layerId_,\n    this.feature\n  ).then(\n    this.handleEditFeature_.bind(this)\n  );\n\n  // (2) Reset selected feature\n  this.feature = null;\n};\n\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.MainController.prototype.handleEditFeature_ = function(resp) {\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * @private\n */\nexports.MainController.prototype.refreshWMSLayer_ = function() {\n  this.wmsSource_.updateParams({\n    'random': Math.random()\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/editfeature.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}