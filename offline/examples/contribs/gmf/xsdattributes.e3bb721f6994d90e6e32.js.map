{"version":3,"sources":["webpack:///./src/format/Attribute.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/format/XSDAttribute.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./node_modules/jquery-datetimepicker/build/jquery.datetimepicker.full.min.js-exposed","webpack:///./node_modules/jquery-datetimepicker/build/jquery.datetimepicker.full.min.js","webpack:///./node_modules/jquery-mousewheel/jquery.mousewheel.js","webpack:///./src/format/AttributeType.js","webpack:///./src/map/LayerHelper.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./contribs/gmf/examples/xsdattributes.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/EventHelper.js"],"names":["_AttributeType","__webpack_require__","exports","attribute","type","exec","ngeoFormatAttributeType","GEOMETRY","geomType","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","olBase","olArray","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","call","this","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","i","ii","length","theme","j","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","push","prototype","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","x","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","ngeoMapLayerHelper","value","service","requires","olFormatXML","read","source","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","n","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","attributes","readFromElementNode_","getAttribute","assertString","alias","nillable","required","ngeoFormatAttribute","setGeometryType","setAttributeByXsdType_","enumerations","SELECT","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","BOOLEAN","DATE","DATETIME","TIME","NUMBER","numType","NumberType","FLOAT","INTEGER","TEXT","getGeometryAttribute","geomAttribute","gmfLayersUrl","http_","baseUrl_","promises_","getAttributes","id","handleGetAttributes_","resp","ngeoFormatXSDAttribute","gmfBase","ngeoMiscEventHelper","ngeoBase","component_","controller","bindings","disabled","feature","require","form","templateUrl","baseModuleTemplateUrl","component","Controller_","$scope","ngeoEventHelper","properties","scope_","ngeoEventHelper_","updating_","$onInit","getProperties","uid","addListenerKey","olEvents","listen","handleFeaturePropertyChange_","handleInputChange","$onDestroy","clearListenerKey","evt","key","target","$apply","restrict","bindToController","scope","options","directive","$element","element_","gettextCatalog_","lang","getCurrentLanguage","$","datetimepicker","setLocale","fromJson","global","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","DateFormatter","e","t","a","r","o","toLowerCase","arguments","hasOwnProperty","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","1","2","3","Math","floor","separators","validParts","intParts","tzParts","tzClip","constructor","getMonth","parseDate","d","u","f","c","h","g","p","y","year","month","day","hour","min","sec","match","Error","replace","split","indexOf","guessDate","test","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setMinutes","setSeconds","splice","parseFormat","D","w","getDate","N","getDay","z","Y","round","W","F","M","L","slice","A","G","B","getHours","H","getMinutes","getSeconds","getMilliseconds","String","I","UTC","O","getTimezoneOffset","abs","P","T","pop","Z","U","getTime","formatDate","charAt","desc","style","i18n","ar","dayOfWeekShort","dayOfWeek","ro","is","bg","fa","ru","uk","en","el","de","nl","tr","fr","es","th","pl","pt","ch","se","km","kr","it","da","no","ja","vi","sl","cs","hu","az","bs","ca","en-GB","et","eu","fi","gl","hr","ko","lt","lv","mk","mn","pt-BR","sk","sq","sr-YU","sr","sv","zh-TW","zh","ug","he","hy","kg","rm","ka","ownerDocument","document","contentWindow","rtl","format","formatTime","startDate","step","monthChangeSpinner","closeOnDateSelect","closeOnTimeSelect","closeOnWithoutClick","closeOnInputClick","openOnFocus","timepicker","datepicker","weeks","defaultTime","defaultDate","minDate","maxDate","minTime","maxTime","minDateTime","disabledMinTime","disabledMaxTime","allowTimes","opened","initTime","inline","touchMovedThreshold","onSelectDate","onSelectTime","onChangeMonth","onGetWeekOfYear","onChangeYear","onChangeDateTime","onShow","onClose","onGenerate","withoutCopyright","inverseButton","hours12","next","prev","dayOfWeekStart","parentID","timeHeightInTimePicker","timepickerScrollbar","todayButton","prevButton","nextButton","defaultSelect","scrollMonth","scrollTime","scrollInput","lazyInit","mask","validateOnBlur","allowBlank","yearStart","yearEnd","monthStart","monthEnd","fixed","roundTime","className","weekends","highlightedDates","highlightedPeriods","allowDates","allowDateRe","disabledDates","disabledWeekDays","yearOffset","beforeShowDay","enterLikeTab","showApplyButton","substring","extend","setDateFormatter","RFC_2822","ATOM","ISO_8601","RFC_822","RFC_850","RFC_1036","RFC_1123","RSS","W3C","getComputedStyle","getPropertyValue","toUpperCase","currentStyle","Array","countDaysInMonth","fn","xdsoftScroller","each","originalEvent","touches","changedTouches","clientX","clientY","hasClass","eq","clientHeight","offsetHeight","append","addClass","trigger","on","css","body","off","removeClass","stopPropagation","preventDefault","setTimeout","hide","show","deltaY","v","b","k","S","_","C","isPlainObject","strToDate","val","strToDateTime","strtotime","isValidDate","RegExp","getElementById","createTextRange","collapse","moveEnd","moveStart","select","setSelectionRange","moment","clipboardData","getData","selectionStart","which","selectionEnd","fromCharCode","J","E","R","V","q","attr","after","currentTime","X","touchStartPosition","sqrt","touchMoved","now","parent","isFunction","getValue","getCurrentTime","setOptions","isArray","Object","open","setCurrentTime","str","dateFormat","toggle","empty","dayOfWeekStartPrev","setMilliseconds","nextMonth","prevMonth","getWeekOfYear","ceil","clearTimeout","marginTop","html","text","index","deltaX","parentNode","nodeName","offset","top","left","width","height","scrollTop","documentElement","clientWidth","outerWidth","offsetWidth","scrollLeft","outerHeight","position","bottom","focus","remove","unmousewheel","keyCode","defaultValue","defaults","apply","event","fix","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaMode","max","settings","normalizeOffset","getBoundingClientRect","deltaFactor","offsetX","offsetY","unshift","dispatch","handle","adjustOldDeltas","documentMode","fixHooks","mouseHooks","special","mousewheel","version","setup","addEventListener","onmousewheel","getLineHeight","getPageHeight","teardown","removeEventListener","removeData","unbind","factory","nullLowestDeltaTimeout","lowestDelta","toFix","toBind","handler","elem","$elem","$parent","absDelta","orgEvent","args","delta","lineHeight","pageHeight","shouldAdjustOldDeltas","boundingRect","nullLowestDelta","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","dataSource","wmsUrl","layerNames","getOGCLayerNames","ogcServerType","ogcImageType","setVisible","visible","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","olLayerGroup","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","XML","isDocument","isNode","gmfEditingXSDAttributes","gmfThemeThemes","ngeoEditingAttributesComponent","constant","MainController","$timeout","gmfThemes","gmfXSDAttributes","timeout_","xsdAttributes_","flatNodes","getDistinctFlatNodes_","getSetLayers","setAttributes_","olFeature","getGeomType","geomAttr","alreadyAdded","XLink","readHref","getAttributeNS","_ol_Image_","extent","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getPixelRatio","getExtent","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","axisOrientation","getAxisOrientation","bbox","uri","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","OWS","owsObject","xml","pushParseAndPop","PARSERS_","readAddress_","objectStack","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","makeObjectPropertySetter","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","coordinates","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","makeArrayPusher","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","listenerKeys_","initListenerKey_"],"mappings":"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","file":"xsdattributes.e3bb721f6994d90e6e32.js","sourcesContent":["/**\n * @module ngeo.format.Attribute\n*/\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/Attribute.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.format.XSDAttribute\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/XSDAttribute.js","/**\n * @module gmf.editing.XSDAttributes\n*/\nimport gmfBase from 'gmf/index.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/XSDAttributes.js","/**\n * @module ngeo.editing.attributesComponent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscEventHelper.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: () => `${ngeoBase.baseModuleTemplateUrl}/editing/attributescomponent.html`\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/attributesComponent.js","/**\n * @module ngeo.misc.datetimepickerComponent\n*/\nimport 'jquery-datetimepicker';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/datetimepickerComponent.js","module.exports = global[\"DateFormatter\"] = require(\"-!./jquery.datetimepicker.full.min.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jquery-datetimepicker/build/jquery.datetimepicker.full.min.js-exposed\n// module id = 280\n// module chunks = 3 24","var DateFormatter;!function(){\"use strict\";var e,t,a,n,r,o,i;o=864e5,i=3600,e=function(e,t){return\"string\"==typeof e&&\"string\"==typeof t&&e.toLowerCase()===t.toLowerCase()},t=function(e,a,n){var r=n||\"0\",o=e.toString();return o.length<a?t(r+o,a):o},a=function(e){var t,n;for(e=e||{},t=1;t<arguments.length;t++)if(n=arguments[t])for(var r in n)n.hasOwnProperty(r)&&(\"object\"==typeof n[r]?a(e[r],n[r]):e[r]=n[r]);return e},n=function(e,t){for(var a=0;a<t.length;a++)if(t[a].toLowerCase()===e.toLowerCase())return a;return-1},r={dateSettings:{days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],daysShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthsShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],meridiem:[\"AM\",\"PM\"],ordinal:function(e){var t=e%10,a={1:\"st\",2:\"nd\",3:\"rd\"};return 1!==Math.floor(e%100/10)&&a[t]?a[t]:\"th\"}},separators:/[ \\-+\\/\\.T:@]/g,validParts:/[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,intParts:/[djwNzmnyYhHgGis]/g,tzParts:/\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,tzClip:/[^-+\\dA-Z]/g},(DateFormatter=function(e){var t=this,n=a(r,e);t.dateSettings=n.dateSettings,t.separators=n.separators,t.validParts=n.validParts,t.intParts=n.intParts,t.tzParts=n.tzParts,t.tzClip=n.tzClip}).prototype={constructor:DateFormatter,getMonth:function(e){var t,a=this;return 0===(t=n(e,a.dateSettings.monthsShort)+1)&&(t=n(e,a.dateSettings.months)+1),t},parseDate:function(t,a){var n,r,o,i,s,d,u,l,f,c,h=this,m=!1,g=!1,p=h.dateSettings,y={date:null,year:null,month:null,day:null,hour:0,min:0,sec:0};if(!t)return null;if(t instanceof Date)return t;if(\"U\"===a)return(o=parseInt(t))?new Date(1e3*o):t;switch(typeof t){case\"number\":return new Date(t);case\"string\":break;default:return null}if(!(n=a.match(h.validParts))||0===n.length)throw new Error(\"Invalid date format definition.\");for(r=t.replace(h.separators,\"\\0\").split(\"\\0\"),o=0;o<r.length;o++)switch(i=r[o],s=parseInt(i),n[o]){case\"y\":case\"Y\":if(!s)return null;f=i.length,y.year=2===f?parseInt((70>s?\"20\":\"19\")+i):s,m=!0;break;case\"m\":case\"n\":case\"M\":case\"F\":if(isNaN(s)){if(!((d=h.getMonth(i))>0))return null;y.month=d}else{if(!(s>=1&&12>=s))return null;y.month=s}m=!0;break;case\"d\":case\"j\":if(!(s>=1&&31>=s))return null;y.day=s,m=!0;break;case\"g\":case\"h\":if(u=n.indexOf(\"a\")>-1?n.indexOf(\"a\"):n.indexOf(\"A\")>-1?n.indexOf(\"A\"):-1,c=r[u],u>-1)l=e(c,p.meridiem[0])?0:e(c,p.meridiem[1])?12:-1,s>=1&&12>=s&&l>-1?y.hour=s+l-1:s>=0&&23>=s&&(y.hour=s);else{if(!(s>=0&&23>=s))return null;y.hour=s}g=!0;break;case\"G\":case\"H\":if(!(s>=0&&23>=s))return null;y.hour=s,g=!0;break;case\"i\":if(!(s>=0&&59>=s))return null;y.min=s,g=!0;break;case\"s\":if(!(s>=0&&59>=s))return null;y.sec=s,g=!0}if(!0===m&&y.year&&y.month&&y.day)y.date=new Date(y.year,y.month-1,y.day,y.hour,y.min,y.sec,0);else{if(!0!==g)return null;y.date=new Date(0,0,0,y.hour,y.min,y.sec,0)}return y.date},guessDate:function(e,t){if(\"string\"!=typeof e)return e;var a,n,r,o,i,s,d=this,u=e.replace(d.separators,\"\\0\").split(\"\\0\"),l=/^[djmn]/g,f=t.match(d.validParts),c=new Date,h=0;if(!l.test(f[0]))return e;for(r=0;r<u.length;r++){if(h=2,i=u[r],s=parseInt(i.substr(0,2)),isNaN(s))return null;switch(r){case 0:\"m\"===f[0]||\"n\"===f[0]?c.setMonth(s-1):c.setDate(s);break;case 1:\"m\"===f[0]||\"n\"===f[0]?c.setDate(s):c.setMonth(s-1);break;case 2:if(n=c.getFullYear(),a=i.length,h=4>a?a:4,!(n=parseInt(4>a?n.toString().substr(0,4-a)+i:i.substr(0,4))))return null;c.setFullYear(n);break;case 3:c.setHours(s);break;case 4:c.setMinutes(s);break;case 5:c.setSeconds(s)}(o=i.substr(h)).length>0&&u.splice(r+1,0,o)}return c},parseFormat:function(e,a){var n,r=this,s=r.dateSettings,d=/\\\\?(.?)/gi,u=function(e,t){return n[e]?n[e]():t};return n={d:function(){return t(n.j(),2)},D:function(){return s.daysShort[n.w()]},j:function(){return a.getDate()},l:function(){return s.days[n.w()]},N:function(){return n.w()||7},w:function(){return a.getDay()},z:function(){var e=new Date(n.Y(),n.n()-1,n.j()),t=new Date(n.Y(),0,1);return Math.round((e-t)/o)},W:function(){var e=new Date(n.Y(),n.n()-1,n.j()-n.N()+3),a=new Date(e.getFullYear(),0,4);return t(1+Math.round((e-a)/o/7),2)},F:function(){return s.months[a.getMonth()]},m:function(){return t(n.n(),2)},M:function(){return s.monthsShort[a.getMonth()]},n:function(){return a.getMonth()+1},t:function(){return new Date(n.Y(),n.n(),0).getDate()},L:function(){var e=n.Y();return e%4==0&&e%100!=0||e%400==0?1:0},o:function(){var e=n.n(),t=n.W();return n.Y()+(12===e&&9>t?1:1===e&&t>9?-1:0)},Y:function(){return a.getFullYear()},y:function(){return n.Y().toString().slice(-2)},a:function(){return n.A().toLowerCase()},A:function(){var e=n.G()<12?0:1;return s.meridiem[e]},B:function(){var e=a.getUTCHours()*i,n=60*a.getUTCMinutes(),r=a.getUTCSeconds();return t(Math.floor((e+n+r+i)/86.4)%1e3,3)},g:function(){return n.G()%12||12},G:function(){return a.getHours()},h:function(){return t(n.g(),2)},H:function(){return t(n.G(),2)},i:function(){return t(a.getMinutes(),2)},s:function(){return t(a.getSeconds(),2)},u:function(){return t(1e3*a.getMilliseconds(),6)},e:function(){return/\\((.*)\\)/.exec(String(a))[1]||\"Coordinated Universal Time\"},I:function(){return new Date(n.Y(),0)-Date.UTC(n.Y(),0)!=new Date(n.Y(),6)-Date.UTC(n.Y(),6)?1:0},O:function(){var e=a.getTimezoneOffset(),n=Math.abs(e);return(e>0?\"-\":\"+\")+t(100*Math.floor(n/60)+n%60,4)},P:function(){var e=n.O();return e.substr(0,3)+\":\"+e.substr(3,2)},T:function(){return(String(a).match(r.tzParts)||[\"\"]).pop().replace(r.tzClip,\"\")||\"UTC\"},Z:function(){return 60*-a.getTimezoneOffset()},c:function(){return\"Y-m-d\\\\TH:i:sP\".replace(d,u)},r:function(){return\"D, d M Y H:i:s O\".replace(d,u)},U:function(){return a.getTime()/1e3||0}},u(e,e)},formatDate:function(e,t){var a,n,r,o,i,s=this,d=\"\";if(\"string\"==typeof e&&!(e=s.parseDate(e,t)))return null;if(e instanceof Date){for(r=t.length,a=0;r>a;a++)\"S\"!==(i=t.charAt(a))&&\"\\\\\"!==i&&(a>0&&\"\\\\\"===t.charAt(a-1)?d+=i:(o=s.parseFormat(i,e),a!==r-1&&s.intParts.test(i)&&\"S\"===t.charAt(a+1)&&(n=parseInt(o)||0,o+=s.dateSettings.ordinal(n)),d+=o));return d}return\"\"}}}();var datetimepickerFactory=function(e){\"use strict\";function t(e,t,a){this.date=e,this.desc=t,this.style=a}var a={i18n:{ar:{months:[\"كانون الثاني\",\"شباط\",\"آذار\",\"نيسان\",\"مايو\",\"حزيران\",\"تموز\",\"آب\",\"أيلول\",\"تشرين الأول\",\"تشرين الثاني\",\"كانون الأول\"],dayOfWeekShort:[\"ن\",\"ث\",\"ع\",\"خ\",\"ج\",\"س\",\"ح\"],dayOfWeek:[\"الأحد\",\"الاثنين\",\"الثلاثاء\",\"الأربعاء\",\"الخميس\",\"الجمعة\",\"السبت\",\"الأحد\"]},ro:{months:[\"Ianuarie\",\"Februarie\",\"Martie\",\"Aprilie\",\"Mai\",\"Iunie\",\"Iulie\",\"August\",\"Septembrie\",\"Octombrie\",\"Noiembrie\",\"Decembrie\"],dayOfWeekShort:[\"Du\",\"Lu\",\"Ma\",\"Mi\",\"Jo\",\"Vi\",\"Sâ\"],dayOfWeek:[\"Duminică\",\"Luni\",\"Marţi\",\"Miercuri\",\"Joi\",\"Vineri\",\"Sâmbătă\"]},id:{months:[\"Januari\",\"Februari\",\"Maret\",\"April\",\"Mei\",\"Juni\",\"Juli\",\"Agustus\",\"September\",\"Oktober\",\"November\",\"Desember\"],dayOfWeekShort:[\"Min\",\"Sen\",\"Sel\",\"Rab\",\"Kam\",\"Jum\",\"Sab\"],dayOfWeek:[\"Minggu\",\"Senin\",\"Selasa\",\"Rabu\",\"Kamis\",\"Jumat\",\"Sabtu\"]},is:{months:[\"Janúar\",\"Febrúar\",\"Mars\",\"Apríl\",\"Maí\",\"Júní\",\"Júlí\",\"Ágúst\",\"September\",\"Október\",\"Nóvember\",\"Desember\"],dayOfWeekShort:[\"Sun\",\"Mán\",\"Þrið\",\"Mið\",\"Fim\",\"Fös\",\"Lau\"],dayOfWeek:[\"Sunnudagur\",\"Mánudagur\",\"Þriðjudagur\",\"Miðvikudagur\",\"Fimmtudagur\",\"Föstudagur\",\"Laugardagur\"]},bg:{months:[\"Януари\",\"Февруари\",\"Март\",\"Април\",\"Май\",\"Юни\",\"Юли\",\"Август\",\"Септември\",\"Октомври\",\"Ноември\",\"Декември\"],dayOfWeekShort:[\"Нд\",\"Пн\",\"Вт\",\"Ср\",\"Чт\",\"Пт\",\"Сб\"],dayOfWeek:[\"Неделя\",\"Понеделник\",\"Вторник\",\"Сряда\",\"Четвъртък\",\"Петък\",\"Събота\"]},fa:{months:[\"فروردین\",\"اردیبهشت\",\"خرداد\",\"تیر\",\"مرداد\",\"شهریور\",\"مهر\",\"آبان\",\"آذر\",\"دی\",\"بهمن\",\"اسفند\"],dayOfWeekShort:[\"یکشنبه\",\"دوشنبه\",\"سه شنبه\",\"چهارشنبه\",\"پنجشنبه\",\"جمعه\",\"شنبه\"],dayOfWeek:[\"یک‌شنبه\",\"دوشنبه\",\"سه‌شنبه\",\"چهارشنبه\",\"پنج‌شنبه\",\"جمعه\",\"شنبه\",\"یک‌شنبه\"]},ru:{months:[\"Январь\",\"Февраль\",\"Март\",\"Апрель\",\"Май\",\"Июнь\",\"Июль\",\"Август\",\"Сентябрь\",\"Октябрь\",\"Ноябрь\",\"Декабрь\"],dayOfWeekShort:[\"Вс\",\"Пн\",\"Вт\",\"Ср\",\"Чт\",\"Пт\",\"Сб\"],dayOfWeek:[\"Воскресенье\",\"Понедельник\",\"Вторник\",\"Среда\",\"Четверг\",\"Пятница\",\"Суббота\"]},uk:{months:[\"Січень\",\"Лютий\",\"Березень\",\"Квітень\",\"Травень\",\"Червень\",\"Липень\",\"Серпень\",\"Вересень\",\"Жовтень\",\"Листопад\",\"Грудень\"],dayOfWeekShort:[\"Ндл\",\"Пнд\",\"Втр\",\"Срд\",\"Чтв\",\"Птн\",\"Сбт\"],dayOfWeek:[\"Неділя\",\"Понеділок\",\"Вівторок\",\"Середа\",\"Четвер\",\"П'ятниця\",\"Субота\"]},en:{months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],dayOfWeekShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],dayOfWeek:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},el:{months:[\"Ιανουάριος\",\"Φεβρουάριος\",\"Μάρτιος\",\"Απρίλιος\",\"Μάιος\",\"Ιούνιος\",\"Ιούλιος\",\"Αύγουστος\",\"Σεπτέμβριος\",\"Οκτώβριος\",\"Νοέμβριος\",\"Δεκέμβριος\"],dayOfWeekShort:[\"Κυρ\",\"Δευ\",\"Τρι\",\"Τετ\",\"Πεμ\",\"Παρ\",\"Σαβ\"],dayOfWeek:[\"Κυριακή\",\"Δευτέρα\",\"Τρίτη\",\"Τετάρτη\",\"Πέμπτη\",\"Παρασκευή\",\"Σάββατο\"]},de:{months:[\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"],dayOfWeekShort:[\"So\",\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\"],dayOfWeek:[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"]},nl:{months:[\"januari\",\"februari\",\"maart\",\"april\",\"mei\",\"juni\",\"juli\",\"augustus\",\"september\",\"oktober\",\"november\",\"december\"],dayOfWeekShort:[\"zo\",\"ma\",\"di\",\"wo\",\"do\",\"vr\",\"za\"],dayOfWeek:[\"zondag\",\"maandag\",\"dinsdag\",\"woensdag\",\"donderdag\",\"vrijdag\",\"zaterdag\"]},tr:{months:[\"Ocak\",\"Şubat\",\"Mart\",\"Nisan\",\"Mayıs\",\"Haziran\",\"Temmuz\",\"Ağustos\",\"Eylül\",\"Ekim\",\"Kasım\",\"Aralık\"],dayOfWeekShort:[\"Paz\",\"Pts\",\"Sal\",\"Çar\",\"Per\",\"Cum\",\"Cts\"],dayOfWeek:[\"Pazar\",\"Pazartesi\",\"Salı\",\"Çarşamba\",\"Perşembe\",\"Cuma\",\"Cumartesi\"]},fr:{months:[\"Janvier\",\"Février\",\"Mars\",\"Avril\",\"Mai\",\"Juin\",\"Juillet\",\"Août\",\"Septembre\",\"Octobre\",\"Novembre\",\"Décembre\"],dayOfWeekShort:[\"Dim\",\"Lun\",\"Mar\",\"Mer\",\"Jeu\",\"Ven\",\"Sam\"],dayOfWeek:[\"dimanche\",\"lundi\",\"mardi\",\"mercredi\",\"jeudi\",\"vendredi\",\"samedi\"]},es:{months:[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"],dayOfWeekShort:[\"Dom\",\"Lun\",\"Mar\",\"Mié\",\"Jue\",\"Vie\",\"Sáb\"],dayOfWeek:[\"Domingo\",\"Lunes\",\"Martes\",\"Miércoles\",\"Jueves\",\"Viernes\",\"Sábado\"]},th:{months:[\"มกราคม\",\"กุมภาพันธ์\",\"มีนาคม\",\"เมษายน\",\"พฤษภาคม\",\"มิถุนายน\",\"กรกฎาคม\",\"สิงหาคม\",\"กันยายน\",\"ตุลาคม\",\"พฤศจิกายน\",\"ธันวาคม\"],dayOfWeekShort:[\"อา.\",\"จ.\",\"อ.\",\"พ.\",\"พฤ.\",\"ศ.\",\"ส.\"],dayOfWeek:[\"อาทิตย์\",\"จันทร์\",\"อังคาร\",\"พุธ\",\"พฤหัส\",\"ศุกร์\",\"เสาร์\",\"อาทิตย์\"]},pl:{months:[\"styczeń\",\"luty\",\"marzec\",\"kwiecień\",\"maj\",\"czerwiec\",\"lipiec\",\"sierpień\",\"wrzesień\",\"październik\",\"listopad\",\"grudzień\"],dayOfWeekShort:[\"nd\",\"pn\",\"wt\",\"śr\",\"cz\",\"pt\",\"sb\"],dayOfWeek:[\"niedziela\",\"poniedziałek\",\"wtorek\",\"środa\",\"czwartek\",\"piątek\",\"sobota\"]},pt:{months:[\"Janeiro\",\"Fevereiro\",\"Março\",\"Abril\",\"Maio\",\"Junho\",\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\"],dayOfWeekShort:[\"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"Sab\"],dayOfWeek:[\"Domingo\",\"Segunda\",\"Terça\",\"Quarta\",\"Quinta\",\"Sexta\",\"Sábado\"]},ch:{months:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],dayOfWeekShort:[\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"]},se:{months:[\"Januari\",\"Februari\",\"Mars\",\"April\",\"Maj\",\"Juni\",\"Juli\",\"Augusti\",\"September\",\"Oktober\",\"November\",\"December\"],dayOfWeekShort:[\"Sön\",\"Mån\",\"Tis\",\"Ons\",\"Tor\",\"Fre\",\"Lör\"]},km:{months:[\"មករា​\",\"កុម្ភៈ\",\"មិនា​\",\"មេសា​\",\"ឧសភា​\",\"មិថុនា​\",\"កក្កដា​\",\"សីហា​\",\"កញ្ញា​\",\"តុលា​\",\"វិច្ឆិកា\",\"ធ្នូ​\"],dayOfWeekShort:[\"អាទិ​\",\"ច័ន្ទ​\",\"អង្គារ​\",\"ពុធ​\",\"ព្រហ​​\",\"សុក្រ​\",\"សៅរ៍\"],dayOfWeek:[\"អាទិត្យ​\",\"ច័ន្ទ​\",\"អង្គារ​\",\"ពុធ​\",\"ព្រហស្បតិ៍​\",\"សុក្រ​\",\"សៅរ៍\"]},kr:{months:[\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\",\"12월\"],dayOfWeekShort:[\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"],dayOfWeek:[\"일요일\",\"월요일\",\"화요일\",\"수요일\",\"목요일\",\"금요일\",\"토요일\"]},it:{months:[\"Gennaio\",\"Febbraio\",\"Marzo\",\"Aprile\",\"Maggio\",\"Giugno\",\"Luglio\",\"Agosto\",\"Settembre\",\"Ottobre\",\"Novembre\",\"Dicembre\"],dayOfWeekShort:[\"Dom\",\"Lun\",\"Mar\",\"Mer\",\"Gio\",\"Ven\",\"Sab\"],dayOfWeek:[\"Domenica\",\"Lunedì\",\"Martedì\",\"Mercoledì\",\"Giovedì\",\"Venerdì\",\"Sabato\"]},da:{months:[\"Januar\",\"Februar\",\"Marts\",\"April\",\"Maj\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"December\"],dayOfWeekShort:[\"Søn\",\"Man\",\"Tir\",\"Ons\",\"Tor\",\"Fre\",\"Lør\"],dayOfWeek:[\"søndag\",\"mandag\",\"tirsdag\",\"onsdag\",\"torsdag\",\"fredag\",\"lørdag\"]},no:{months:[\"Januar\",\"Februar\",\"Mars\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Desember\"],dayOfWeekShort:[\"Søn\",\"Man\",\"Tir\",\"Ons\",\"Tor\",\"Fre\",\"Lør\"],dayOfWeek:[\"Søndag\",\"Mandag\",\"Tirsdag\",\"Onsdag\",\"Torsdag\",\"Fredag\",\"Lørdag\"]},ja:{months:[\"1月\",\"2月\",\"3月\",\"4月\",\"5月\",\"6月\",\"7月\",\"8月\",\"9月\",\"10月\",\"11月\",\"12月\"],dayOfWeekShort:[\"日\",\"月\",\"火\",\"水\",\"木\",\"金\",\"土\"],dayOfWeek:[\"日曜\",\"月曜\",\"火曜\",\"水曜\",\"木曜\",\"金曜\",\"土曜\"]},vi:{months:[\"Tháng 1\",\"Tháng 2\",\"Tháng 3\",\"Tháng 4\",\"Tháng 5\",\"Tháng 6\",\"Tháng 7\",\"Tháng 8\",\"Tháng 9\",\"Tháng 10\",\"Tháng 11\",\"Tháng 12\"],dayOfWeekShort:[\"CN\",\"T2\",\"T3\",\"T4\",\"T5\",\"T6\",\"T7\"],dayOfWeek:[\"Chủ nhật\",\"Thứ hai\",\"Thứ ba\",\"Thứ tư\",\"Thứ năm\",\"Thứ sáu\",\"Thứ bảy\"]},sl:{months:[\"Januar\",\"Februar\",\"Marec\",\"April\",\"Maj\",\"Junij\",\"Julij\",\"Avgust\",\"September\",\"Oktober\",\"November\",\"December\"],dayOfWeekShort:[\"Ned\",\"Pon\",\"Tor\",\"Sre\",\"Čet\",\"Pet\",\"Sob\"],dayOfWeek:[\"Nedelja\",\"Ponedeljek\",\"Torek\",\"Sreda\",\"Četrtek\",\"Petek\",\"Sobota\"]},cs:{months:[\"Leden\",\"Únor\",\"Březen\",\"Duben\",\"Květen\",\"Červen\",\"Červenec\",\"Srpen\",\"Září\",\"Říjen\",\"Listopad\",\"Prosinec\"],dayOfWeekShort:[\"Ne\",\"Po\",\"Út\",\"St\",\"Čt\",\"Pá\",\"So\"]},hu:{months:[\"Január\",\"Február\",\"Március\",\"Április\",\"Május\",\"Június\",\"Július\",\"Augusztus\",\"Szeptember\",\"Október\",\"November\",\"December\"],dayOfWeekShort:[\"Va\",\"Hé\",\"Ke\",\"Sze\",\"Cs\",\"Pé\",\"Szo\"],dayOfWeek:[\"vasárnap\",\"hétfő\",\"kedd\",\"szerda\",\"csütörtök\",\"péntek\",\"szombat\"]},az:{months:[\"Yanvar\",\"Fevral\",\"Mart\",\"Aprel\",\"May\",\"Iyun\",\"Iyul\",\"Avqust\",\"Sentyabr\",\"Oktyabr\",\"Noyabr\",\"Dekabr\"],dayOfWeekShort:[\"B\",\"Be\",\"Ça\",\"Ç\",\"Ca\",\"C\",\"Ş\"],dayOfWeek:[\"Bazar\",\"Bazar ertəsi\",\"Çərşənbə axşamı\",\"Çərşənbə\",\"Cümə axşamı\",\"Cümə\",\"Şənbə\"]},bs:{months:[\"Januar\",\"Februar\",\"Mart\",\"April\",\"Maj\",\"Jun\",\"Jul\",\"Avgust\",\"Septembar\",\"Oktobar\",\"Novembar\",\"Decembar\"],dayOfWeekShort:[\"Ned\",\"Pon\",\"Uto\",\"Sri\",\"Čet\",\"Pet\",\"Sub\"],dayOfWeek:[\"Nedjelja\",\"Ponedjeljak\",\"Utorak\",\"Srijeda\",\"Četvrtak\",\"Petak\",\"Subota\"]},ca:{months:[\"Gener\",\"Febrer\",\"Març\",\"Abril\",\"Maig\",\"Juny\",\"Juliol\",\"Agost\",\"Setembre\",\"Octubre\",\"Novembre\",\"Desembre\"],dayOfWeekShort:[\"Dg\",\"Dl\",\"Dt\",\"Dc\",\"Dj\",\"Dv\",\"Ds\"],dayOfWeek:[\"Diumenge\",\"Dilluns\",\"Dimarts\",\"Dimecres\",\"Dijous\",\"Divendres\",\"Dissabte\"]},\"en-GB\":{months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],dayOfWeekShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],dayOfWeek:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},et:{months:[\"Jaanuar\",\"Veebruar\",\"Märts\",\"Aprill\",\"Mai\",\"Juuni\",\"Juuli\",\"August\",\"September\",\"Oktoober\",\"November\",\"Detsember\"],dayOfWeekShort:[\"P\",\"E\",\"T\",\"K\",\"N\",\"R\",\"L\"],dayOfWeek:[\"Pühapäev\",\"Esmaspäev\",\"Teisipäev\",\"Kolmapäev\",\"Neljapäev\",\"Reede\",\"Laupäev\"]},eu:{months:[\"Urtarrila\",\"Otsaila\",\"Martxoa\",\"Apirila\",\"Maiatza\",\"Ekaina\",\"Uztaila\",\"Abuztua\",\"Iraila\",\"Urria\",\"Azaroa\",\"Abendua\"],dayOfWeekShort:[\"Ig.\",\"Al.\",\"Ar.\",\"Az.\",\"Og.\",\"Or.\",\"La.\"],dayOfWeek:[\"Igandea\",\"Astelehena\",\"Asteartea\",\"Asteazkena\",\"Osteguna\",\"Ostirala\",\"Larunbata\"]},fi:{months:[\"Tammikuu\",\"Helmikuu\",\"Maaliskuu\",\"Huhtikuu\",\"Toukokuu\",\"Kesäkuu\",\"Heinäkuu\",\"Elokuu\",\"Syyskuu\",\"Lokakuu\",\"Marraskuu\",\"Joulukuu\"],dayOfWeekShort:[\"Su\",\"Ma\",\"Ti\",\"Ke\",\"To\",\"Pe\",\"La\"],dayOfWeek:[\"sunnuntai\",\"maanantai\",\"tiistai\",\"keskiviikko\",\"torstai\",\"perjantai\",\"lauantai\"]},gl:{months:[\"Xan\",\"Feb\",\"Maz\",\"Abr\",\"Mai\",\"Xun\",\"Xul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dec\"],dayOfWeekShort:[\"Dom\",\"Lun\",\"Mar\",\"Mer\",\"Xov\",\"Ven\",\"Sab\"],dayOfWeek:[\"Domingo\",\"Luns\",\"Martes\",\"Mércores\",\"Xoves\",\"Venres\",\"Sábado\"]},hr:{months:[\"Siječanj\",\"Veljača\",\"Ožujak\",\"Travanj\",\"Svibanj\",\"Lipanj\",\"Srpanj\",\"Kolovoz\",\"Rujan\",\"Listopad\",\"Studeni\",\"Prosinac\"],dayOfWeekShort:[\"Ned\",\"Pon\",\"Uto\",\"Sri\",\"Čet\",\"Pet\",\"Sub\"],dayOfWeek:[\"Nedjelja\",\"Ponedjeljak\",\"Utorak\",\"Srijeda\",\"Četvrtak\",\"Petak\",\"Subota\"]},ko:{months:[\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\",\"12월\"],dayOfWeekShort:[\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"],dayOfWeek:[\"일요일\",\"월요일\",\"화요일\",\"수요일\",\"목요일\",\"금요일\",\"토요일\"]},lt:{months:[\"Sausio\",\"Vasario\",\"Kovo\",\"Balandžio\",\"Gegužės\",\"Birželio\",\"Liepos\",\"Rugpjūčio\",\"Rugsėjo\",\"Spalio\",\"Lapkričio\",\"Gruodžio\"],dayOfWeekShort:[\"Sek\",\"Pir\",\"Ant\",\"Tre\",\"Ket\",\"Pen\",\"Šeš\"],dayOfWeek:[\"Sekmadienis\",\"Pirmadienis\",\"Antradienis\",\"Trečiadienis\",\"Ketvirtadienis\",\"Penktadienis\",\"Šeštadienis\"]},lv:{months:[\"Janvāris\",\"Februāris\",\"Marts\",\"Aprīlis \",\"Maijs\",\"Jūnijs\",\"Jūlijs\",\"Augusts\",\"Septembris\",\"Oktobris\",\"Novembris\",\"Decembris\"],dayOfWeekShort:[\"Sv\",\"Pr\",\"Ot\",\"Tr\",\"Ct\",\"Pk\",\"St\"],dayOfWeek:[\"Svētdiena\",\"Pirmdiena\",\"Otrdiena\",\"Trešdiena\",\"Ceturtdiena\",\"Piektdiena\",\"Sestdiena\"]},mk:{months:[\"јануари\",\"февруари\",\"март\",\"април\",\"мај\",\"јуни\",\"јули\",\"август\",\"септември\",\"октомври\",\"ноември\",\"декември\"],dayOfWeekShort:[\"нед\",\"пон\",\"вто\",\"сре\",\"чет\",\"пет\",\"саб\"],dayOfWeek:[\"Недела\",\"Понеделник\",\"Вторник\",\"Среда\",\"Четврток\",\"Петок\",\"Сабота\"]},mn:{months:[\"1-р сар\",\"2-р сар\",\"3-р сар\",\"4-р сар\",\"5-р сар\",\"6-р сар\",\"7-р сар\",\"8-р сар\",\"9-р сар\",\"10-р сар\",\"11-р сар\",\"12-р сар\"],dayOfWeekShort:[\"Дав\",\"Мяг\",\"Лха\",\"Пүр\",\"Бсн\",\"Бям\",\"Ням\"],dayOfWeek:[\"Даваа\",\"Мягмар\",\"Лхагва\",\"Пүрэв\",\"Баасан\",\"Бямба\",\"Ням\"]},\"pt-BR\":{months:[\"Janeiro\",\"Fevereiro\",\"Março\",\"Abril\",\"Maio\",\"Junho\",\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\"],dayOfWeekShort:[\"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"Sáb\"],dayOfWeek:[\"Domingo\",\"Segunda\",\"Terça\",\"Quarta\",\"Quinta\",\"Sexta\",\"Sábado\"]},sk:{months:[\"Január\",\"Február\",\"Marec\",\"Apríl\",\"Máj\",\"Jún\",\"Júl\",\"August\",\"September\",\"Október\",\"November\",\"December\"],dayOfWeekShort:[\"Ne\",\"Po\",\"Ut\",\"St\",\"Št\",\"Pi\",\"So\"],dayOfWeek:[\"Nedeľa\",\"Pondelok\",\"Utorok\",\"Streda\",\"Štvrtok\",\"Piatok\",\"Sobota\"]},sq:{months:[\"Janar\",\"Shkurt\",\"Mars\",\"Prill\",\"Maj\",\"Qershor\",\"Korrik\",\"Gusht\",\"Shtator\",\"Tetor\",\"Nëntor\",\"Dhjetor\"],dayOfWeekShort:[\"Die\",\"Hën\",\"Mar\",\"Mër\",\"Enj\",\"Pre\",\"Shtu\"],dayOfWeek:[\"E Diel\",\"E Hënë\",\"E Martē\",\"E Mërkurë\",\"E Enjte\",\"E Premte\",\"E Shtunë\"]},\"sr-YU\":{months:[\"Januar\",\"Februar\",\"Mart\",\"April\",\"Maj\",\"Jun\",\"Jul\",\"Avgust\",\"Septembar\",\"Oktobar\",\"Novembar\",\"Decembar\"],dayOfWeekShort:[\"Ned\",\"Pon\",\"Uto\",\"Sre\",\"čet\",\"Pet\",\"Sub\"],dayOfWeek:[\"Nedelja\",\"Ponedeljak\",\"Utorak\",\"Sreda\",\"Četvrtak\",\"Petak\",\"Subota\"]},sr:{months:[\"јануар\",\"фебруар\",\"март\",\"април\",\"мај\",\"јун\",\"јул\",\"август\",\"септембар\",\"октобар\",\"новембар\",\"децембар\"],dayOfWeekShort:[\"нед\",\"пон\",\"уто\",\"сре\",\"чет\",\"пет\",\"суб\"],dayOfWeek:[\"Недеља\",\"Понедељак\",\"Уторак\",\"Среда\",\"Четвртак\",\"Петак\",\"Субота\"]},sv:{months:[\"Januari\",\"Februari\",\"Mars\",\"April\",\"Maj\",\"Juni\",\"Juli\",\"Augusti\",\"September\",\"Oktober\",\"November\",\"December\"],dayOfWeekShort:[\"Sön\",\"Mån\",\"Tis\",\"Ons\",\"Tor\",\"Fre\",\"Lör\"],dayOfWeek:[\"Söndag\",\"Måndag\",\"Tisdag\",\"Onsdag\",\"Torsdag\",\"Fredag\",\"Lördag\"]},\"zh-TW\":{months:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],dayOfWeekShort:[\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"],dayOfWeek:[\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]},zh:{months:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],dayOfWeekShort:[\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"],dayOfWeek:[\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]},ug:{months:[\"1-ئاي\",\"2-ئاي\",\"3-ئاي\",\"4-ئاي\",\"5-ئاي\",\"6-ئاي\",\"7-ئاي\",\"8-ئاي\",\"9-ئاي\",\"10-ئاي\",\"11-ئاي\",\"12-ئاي\"],dayOfWeek:[\"يەكشەنبە\",\"دۈشەنبە\",\"سەيشەنبە\",\"چارشەنبە\",\"پەيشەنبە\",\"جۈمە\",\"شەنبە\"]},he:{months:[\"ינואר\",\"פברואר\",\"מרץ\",\"אפריל\",\"מאי\",\"יוני\",\"יולי\",\"אוגוסט\",\"ספטמבר\",\"אוקטובר\",\"נובמבר\",\"דצמבר\"],dayOfWeekShort:[\"א'\",\"ב'\",\"ג'\",\"ד'\",\"ה'\",\"ו'\",\"שבת\"],dayOfWeek:[\"ראשון\",\"שני\",\"שלישי\",\"רביעי\",\"חמישי\",\"שישי\",\"שבת\",\"ראשון\"]},hy:{months:[\"Հունվար\",\"Փետրվար\",\"Մարտ\",\"Ապրիլ\",\"Մայիս\",\"Հունիս\",\"Հուլիս\",\"Օգոստոս\",\"Սեպտեմբեր\",\"Հոկտեմբեր\",\"Նոյեմբեր\",\"Դեկտեմբեր\"],dayOfWeekShort:[\"Կի\",\"Երկ\",\"Երք\",\"Չոր\",\"Հնգ\",\"Ուրբ\",\"Շբթ\"],dayOfWeek:[\"Կիրակի\",\"Երկուշաբթի\",\"Երեքշաբթի\",\"Չորեքշաբթի\",\"Հինգշաբթի\",\"Ուրբաթ\",\"Շաբաթ\"]},kg:{months:[\"Үчтүн айы\",\"Бирдин айы\",\"Жалган Куран\",\"Чын Куран\",\"Бугу\",\"Кулжа\",\"Теке\",\"Баш Оона\",\"Аяк Оона\",\"Тогуздун айы\",\"Жетинин айы\",\"Бештин айы\"],dayOfWeekShort:[\"Жек\",\"Дүй\",\"Шей\",\"Шар\",\"Бей\",\"Жум\",\"Ише\"],dayOfWeek:[\"Жекшемб\",\"Дүйшөмб\",\"Шейшемб\",\"Шаршемб\",\"Бейшемби\",\"Жума\",\"Ишенб\"]},rm:{months:[\"Schaner\",\"Favrer\",\"Mars\",\"Avrigl\",\"Matg\",\"Zercladur\",\"Fanadur\",\"Avust\",\"Settember\",\"October\",\"November\",\"December\"],dayOfWeekShort:[\"Du\",\"Gli\",\"Ma\",\"Me\",\"Gie\",\"Ve\",\"So\"],dayOfWeek:[\"Dumengia\",\"Glindesdi\",\"Mardi\",\"Mesemna\",\"Gievgia\",\"Venderdi\",\"Sonda\"]},ka:{months:[\"იანვარი\",\"თებერვალი\",\"მარტი\",\"აპრილი\",\"მაისი\",\"ივნისი\",\"ივლისი\",\"აგვისტო\",\"სექტემბერი\",\"ოქტომბერი\",\"ნოემბერი\",\"დეკემბერი\"],dayOfWeekShort:[\"კვ\",\"ორშ\",\"სამშ\",\"ოთხ\",\"ხუთ\",\"პარ\",\"შაბ\"],dayOfWeek:[\"კვირა\",\"ორშაბათი\",\"სამშაბათი\",\"ოთხშაბათი\",\"ხუთშაბათი\",\"პარასკევი\",\"შაბათი\"]}},ownerDocument:document,contentWindow:window,value:\"\",rtl:!1,format:\"Y/m/d H:i\",formatTime:\"H:i\",formatDate:\"Y/m/d\",startDate:!1,step:60,monthChangeSpinner:!0,closeOnDateSelect:!1,closeOnTimeSelect:!0,closeOnWithoutClick:!0,closeOnInputClick:!0,openOnFocus:!0,timepicker:!0,datepicker:!0,weeks:!1,defaultTime:!1,defaultDate:!1,minDate:!1,maxDate:!1,minTime:!1,maxTime:!1,minDateTime:!1,disabledMinTime:!1,disabledMaxTime:!1,allowTimes:[],opened:!1,initTime:!0,inline:!1,theme:\"\",touchMovedThreshold:5,onSelectDate:function(){},onSelectTime:function(){},onChangeMonth:function(){},onGetWeekOfYear:function(){},onChangeYear:function(){},onChangeDateTime:function(){},onShow:function(){},onClose:function(){},onGenerate:function(){},withoutCopyright:!0,inverseButton:!1,hours12:!1,next:\"xdsoft_next\",prev:\"xdsoft_prev\",dayOfWeekStart:0,parentID:\"body\",timeHeightInTimePicker:25,timepickerScrollbar:!0,todayButton:!0,prevButton:!0,nextButton:!0,defaultSelect:!0,scrollMonth:!0,scrollTime:!0,scrollInput:!0,lazyInit:!1,mask:!1,validateOnBlur:!0,allowBlank:!0,yearStart:1950,yearEnd:2050,monthStart:0,monthEnd:11,style:\"\",id:\"\",fixed:!1,roundTime:\"round\",className:\"\",weekends:[],highlightedDates:[],highlightedPeriods:[],allowDates:[],allowDateRe:null,disabledDates:[],disabledWeekDays:[],yearOffset:0,beforeShowDay:null,enterLikeTab:!0,showApplyButton:!1},n=null,r=\"en\",o={meridiem:[\"AM\",\"PM\"]},i=function(){var t=a.i18n[r],i={days:t.dayOfWeek,daysShort:t.dayOfWeekShort,months:t.months,monthsShort:e.map(t.months,function(e){return e.substring(0,3)})};\"function\"==typeof DateFormatter&&(n=new DateFormatter({dateSettings:e.extend({},o,i)}))};e.datetimepicker={setLocale:function(e){var t=a.i18n[e]?e:\"en\";r!==t&&(r=t,i())},setDateFormatter:function(e){n=e},RFC_2822:\"D, d M Y H:i:s O\",ATOM:\"Y-m-dTH:i:sP\",ISO_8601:\"Y-m-dTH:i:sO\",RFC_822:\"D, d M y H:i:s O\",RFC_850:\"l, d-M-y H:i:s T\",RFC_1036:\"D, d M y H:i:s O\",RFC_1123:\"D, d M Y H:i:s O\",RSS:\"D, d M Y H:i:s O\",W3C:\"Y-m-dTH:i:sP\"},i(),window.getComputedStyle||(window.getComputedStyle=function(e){return this.el=e,this.getPropertyValue=function(t){var a=/(-([a-z]))/g;return\"float\"===t&&(t=\"styleFloat\"),a.test(t)&&(t=t.replace(a,function(e,t,a){return a.toUpperCase()})),e.currentStyle[t]||null},this}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e,t){var a,n;for(a=t||0,n=this.length;a<n;a+=1)if(this[a]===e)return a;return-1}),Date.prototype.countDaysInMonth=function(){return new Date(this.getFullYear(),this.getMonth()+1,0).getDate()},e.fn.xdsoftScroller=function(t,a){return this.each(function(){var n,r,o,i,s,d=e(this),u=function(e){var t,a={x:0,y:0};return\"touchstart\"===e.type||\"touchmove\"===e.type||\"touchend\"===e.type||\"touchcancel\"===e.type?(t=e.originalEvent.touches[0]||e.originalEvent.changedTouches[0],a.x=t.clientX,a.y=t.clientY):\"mousedown\"!==e.type&&\"mouseup\"!==e.type&&\"mousemove\"!==e.type&&\"mouseover\"!==e.type&&\"mouseout\"!==e.type&&\"mouseenter\"!==e.type&&\"mouseleave\"!==e.type||(a.x=e.clientX,a.y=e.clientY),a},l=100,f=!1,c=0,h=0,m=0,g=!1,p=0,y=function(){};\"hide\"!==a?(e(this).hasClass(\"xdsoft_scroller_box\")||(n=d.children().eq(0),r=d[0].clientHeight,o=n[0].offsetHeight,i=e('<div class=\"xdsoft_scrollbar\"></div>'),s=e('<div class=\"xdsoft_scroller\"></div>'),i.append(s),d.addClass(\"xdsoft_scroller_box\").append(i),y=function(e){var t=u(e).y-c+p;t<0&&(t=0),t+s[0].offsetHeight>m&&(t=m-s[0].offsetHeight),d.trigger(\"scroll_element.xdsoft_scroller\",[l?t/l:0])},s.on(\"touchstart.xdsoft_scroller mousedown.xdsoft_scroller\",function(n){r||d.trigger(\"resize_scroll.xdsoft_scroller\",[a]),c=u(n).y,p=parseInt(s.css(\"margin-top\"),10),m=i[0].offsetHeight,\"mousedown\"===n.type||\"touchstart\"===n.type?(t.ownerDocument&&e(t.ownerDocument.body).addClass(\"xdsoft_noselect\"),e([t.ownerDocument.body,t.contentWindow]).on(\"touchend mouseup.xdsoft_scroller\",function a(){e([t.ownerDocument.body,t.contentWindow]).off(\"touchend mouseup.xdsoft_scroller\",a).off(\"mousemove.xdsoft_scroller\",y).removeClass(\"xdsoft_noselect\")}),e(t.ownerDocument.body).on(\"mousemove.xdsoft_scroller\",y)):(g=!0,n.stopPropagation(),n.preventDefault())}).on(\"touchmove\",function(e){g&&(e.preventDefault(),y(e))}).on(\"touchend touchcancel\",function(){g=!1,p=0}),d.on(\"scroll_element.xdsoft_scroller\",function(e,t){r||d.trigger(\"resize_scroll.xdsoft_scroller\",[t,!0]),t=t>1?1:t<0||isNaN(t)?0:t,s.css(\"margin-top\",l*t),setTimeout(function(){n.css(\"marginTop\",-parseInt((n[0].offsetHeight-r)*t,10))},10)}).on(\"resize_scroll.xdsoft_scroller\",function(e,t,a){var u,f;r=d[0].clientHeight,o=n[0].offsetHeight,f=(u=r/o)*i[0].offsetHeight,u>1?s.hide():(s.show(),s.css(\"height\",parseInt(f>10?f:10,10)),l=i[0].offsetHeight-s[0].offsetHeight,!0!==a&&d.trigger(\"scroll_element.xdsoft_scroller\",[t||Math.abs(parseInt(n.css(\"marginTop\"),10))/(o-r)]))}),d.on(\"mousewheel\",function(e){var t=Math.abs(parseInt(n.css(\"marginTop\"),10));return(t-=20*e.deltaY)<0&&(t=0),d.trigger(\"scroll_element.xdsoft_scroller\",[t/(o-r)]),e.stopPropagation(),!1}),d.on(\"touchstart\",function(e){f=u(e),h=Math.abs(parseInt(n.css(\"marginTop\"),10))}),d.on(\"touchmove\",function(e){if(f){e.preventDefault();var t=u(e);d.trigger(\"scroll_element.xdsoft_scroller\",[(h-(t.y-f.y))/(o-r)])}}),d.on(\"touchend touchcancel\",function(){f=!1,h=0})),d.trigger(\"resize_scroll.xdsoft_scroller\",[a])):d.find(\".xdsoft_scrollbar\").hide()})},e.fn.datetimepicker=function(o,i){var s,d,u=this,l=48,f=57,c=96,h=105,m=17,g=46,p=13,y=27,v=8,D=37,b=38,k=39,x=40,T=9,S=116,w=65,M=67,O=86,W=90,_=89,F=!1,C=e.isPlainObject(o)||!o?e.extend(!0,{},a,o):e.extend(!0,{},a),P=0,A=function(e){e.on(\"open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart\",function t(){e.is(\":disabled\")||e.data(\"xdsoft_datetimepicker\")||(clearTimeout(P),P=setTimeout(function(){e.data(\"xdsoft_datetimepicker\")||s(e),e.off(\"open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart\",t).trigger(\"open.xdsoft\")},100))})};return s=function(a){function i(){var e,t=!1;return C.startDate?t=Y.strToDate(C.startDate):(t=C.value||(a&&a.val&&a.val()?a.val():\"\"))?t=Y.strToDateTime(t):C.defaultDate&&(t=Y.strToDateTime(C.defaultDate),C.defaultTime&&(e=Y.strtotime(C.defaultTime),t.setHours(e.getHours()),t.setMinutes(e.getMinutes()))),t&&Y.isValidDate(t)?H.data(\"changed\",!0):t=\"\",t||0}function s(t){var n=function(e,t){var a=e.replace(/([\\[\\]\\/\\{\\}\\(\\)\\-\\.\\+]{1})/g,\"\\\\$1\").replace(/_/g,\"{digit+}\").replace(/([0-9]{1})/g,\"{digit$1}\").replace(/\\{digit([0-9]{1})\\}/g,\"[0-$1_]{1}\").replace(/\\{digit[\\+]\\}/g,\"[0-9_]{1}\");return new RegExp(a).test(t)},r=function(e,a){if(!(e=\"string\"==typeof e||e instanceof String?t.ownerDocument.getElementById(e):e))return!1;if(e.createTextRange){var n=e.createTextRange();return n.collapse(!0),n.moveEnd(\"character\",a),n.moveStart(\"character\",a),n.select(),!0}return!!e.setSelectionRange&&(e.setSelectionRange(a,a),!0)};t.mask&&a.off(\"keydown.xdsoft\"),!0===t.mask&&(\"undefined\"!=typeof moment?t.mask=t.format.replace(/Y{4}/g,\"9999\").replace(/Y{2}/g,\"99\").replace(/M{2}/g,\"19\").replace(/D{2}/g,\"39\").replace(/H{2}/g,\"29\").replace(/m{2}/g,\"59\").replace(/s{2}/g,\"59\"):t.mask=t.format.replace(/Y/g,\"9999\").replace(/F/g,\"9999\").replace(/m/g,\"19\").replace(/d/g,\"39\").replace(/H/g,\"29\").replace(/i/g,\"59\").replace(/s/g,\"59\")),\"string\"===e.type(t.mask)&&(n(t.mask,a.val())||(a.val(t.mask.replace(/[0-9]/g,\"_\")),r(a[0],0)),a.on(\"paste.xdsoft\",function(o){var i=(o.clipboardData||o.originalEvent.clipboardData||window.clipboardData).getData(\"text\"),s=this.value,d=this.selectionStart;return s=s.substr(0,d)+i+s.substr(d+i.length),d+=i.length,n(t.mask,s)?(this.value=s,r(this,d)):\"\"===e.trim(s)?this.value=t.mask.replace(/[0-9]/g,\"_\"):a.trigger(\"error_input.xdsoft\"),o.preventDefault(),!1}),a.on(\"keydown.xdsoft\",function(o){var i,s=this.value,d=o.which,u=this.selectionStart,C=this.selectionEnd,P=u!==C;if(d>=l&&d<=f||d>=c&&d<=h||d===v||d===g){for(i=d===v||d===g?\"_\":String.fromCharCode(c<=d&&d<=h?d-l:d),d===v&&u&&!P&&(u-=1);;){var A=t.mask.substr(u,1),Y=u<t.mask.length,j=u>0;if(!(/[^0-9_]/.test(A)&&Y&&j))break;u+=d!==v||P?1:-1}if(P){var H=C-u,J=t.mask.replace(/[0-9]/g,\"_\"),z=J.substr(u,H).substr(1);s=s.substr(0,u)+(i+z)+s.substr(u+H)}else s=s.substr(0,u)+i+s.substr(u+1);if(\"\"===e.trim(s))s=J;else if(u===t.mask.length)return o.preventDefault(),!1;for(u+=d===v?0:1;/[^0-9_]/.test(t.mask.substr(u,1))&&u<t.mask.length&&u>0;)u+=d===v?0:1;n(t.mask,s)?(this.value=s,r(this,u)):\"\"===e.trim(s)?this.value=t.mask.replace(/[0-9]/g,\"_\"):a.trigger(\"error_input.xdsoft\")}else if(-1!==[w,M,O,W,_].indexOf(d)&&F||-1!==[y,b,x,D,k,S,m,T,p].indexOf(d))return!0;return o.preventDefault(),!1}))}var d,u,P,A,Y,j,H=e('<div class=\"xdsoft_datetimepicker xdsoft_noselect\"></div>'),J=e('<div class=\"xdsoft_copyright\"><a target=\"_blank\" href=\"http://xdsoft.net/jqplugins/datetimepicker/\">xdsoft.net</a></div>'),z=e('<div class=\"xdsoft_datepicker active\"></div>'),I=e('<div class=\"xdsoft_monthpicker\"><button type=\"button\" class=\"xdsoft_prev\"></button><button type=\"button\" class=\"xdsoft_today_button\"></button><div class=\"xdsoft_label xdsoft_month\"><span></span><i></i></div><div class=\"xdsoft_label xdsoft_year\"><span></span><i></i></div><button type=\"button\" class=\"xdsoft_next\"></button></div>'),N=e('<div class=\"xdsoft_calendar\"></div>'),L=e('<div class=\"xdsoft_timepicker active\"><button type=\"button\" class=\"xdsoft_prev\"></button><div class=\"xdsoft_time_box\"></div><button type=\"button\" class=\"xdsoft_next\"></button></div>'),E=L.find(\".xdsoft_time_box\").eq(0),R=e('<div class=\"xdsoft_time_variant\"></div>'),V=e('<button type=\"button\" class=\"xdsoft_save_selected blue-gradient-button\">Save Selected</button>'),B=e('<div class=\"xdsoft_select xdsoft_monthselect\"><div></div></div>'),G=e('<div class=\"xdsoft_select xdsoft_yearselect\"><div></div></div>'),U=!1,q=0;C.id&&H.attr(\"id\",C.id),C.style&&H.attr(\"style\",C.style),C.weeks&&H.addClass(\"xdsoft_showweeks\"),C.rtl&&H.addClass(\"xdsoft_rtl\"),H.addClass(\"xdsoft_\"+C.theme),H.addClass(C.className),I.find(\".xdsoft_month span\").after(B),I.find(\".xdsoft_year span\").after(G),I.find(\".xdsoft_month,.xdsoft_year\").on(\"touchstart mousedown.xdsoft\",function(t){var a,n,r=e(this).find(\".xdsoft_select\").eq(0),o=0,i=0,s=r.is(\":visible\");for(I.find(\".xdsoft_select\").hide(),Y.currentTime&&(o=Y.currentTime[e(this).hasClass(\"xdsoft_month\")?\"getMonth\":\"getFullYear\"]()),r[s?\"hide\":\"show\"](),a=r.find(\"div.xdsoft_option\"),n=0;n<a.length&&a.eq(n).data(\"value\")!==o;n+=1)i+=a[0].offsetHeight;return r.xdsoftScroller(C,i/(r.children()[0].offsetHeight-r[0].clientHeight)),t.stopPropagation(),!1});var X=function(e){this.touchStartPosition=this.touchStartPosition||e.originalEvent.touches[0];var t=e.originalEvent.touches[0],a=Math.abs(this.touchStartPosition.clientX-t.clientX),n=Math.abs(this.touchStartPosition.clientY-t.clientY);Math.sqrt(a*a+n*n)>C.touchMovedThreshold&&(this.touchMoved=!0)};I.find(\".xdsoft_select\").xdsoftScroller(C).on(\"touchstart mousedown.xdsoft\",function(e){this.touchMoved=!1,this.touchStartPosition=e.originalEvent.touches[0],e.stopPropagation(),e.preventDefault()}).on(\"touchmove\",\".xdsoft_option\",X).on(\"touchend mousedown.xdsoft\",\".xdsoft_option\",function(){if(!this.touchMoved){void 0!==Y.currentTime&&null!==Y.currentTime||(Y.currentTime=Y.now());var t=Y.currentTime.getFullYear();Y&&Y.currentTime&&Y.currentTime[e(this).parent().parent().hasClass(\"xdsoft_monthselect\")?\"setMonth\":\"setFullYear\"](e(this).data(\"value\")),e(this).parent().parent().hide(),H.trigger(\"xchange.xdsoft\"),C.onChangeMonth&&e.isFunction(C.onChangeMonth)&&C.onChangeMonth.call(H,Y.currentTime,H.data(\"input\")),t!==Y.currentTime.getFullYear()&&e.isFunction(C.onChangeYear)&&C.onChangeYear.call(H,Y.currentTime,H.data(\"input\"))}}),H.getValue=function(){return Y.getCurrentTime()},H.setOptions=function(r){var o={};C=e.extend(!0,{},C,r),r.allowTimes&&e.isArray(r.allowTimes)&&r.allowTimes.length&&(C.allowTimes=e.extend(!0,[],r.allowTimes)),r.weekends&&e.isArray(r.weekends)&&r.weekends.length&&(C.weekends=e.extend(!0,[],r.weekends)),r.allowDates&&e.isArray(r.allowDates)&&r.allowDates.length&&(C.allowDates=e.extend(!0,[],r.allowDates)),r.allowDateRe&&\"[object String]\"===Object.prototype.toString.call(r.allowDateRe)&&(C.allowDateRe=new RegExp(r.allowDateRe)),r.highlightedDates&&e.isArray(r.highlightedDates)&&r.highlightedDates.length&&(e.each(r.highlightedDates,function(a,r){var i,s=e.map(r.split(\",\"),e.trim),d=new t(n.parseDate(s[0],C.formatDate),s[1],s[2]),u=n.formatDate(d.date,C.formatDate);void 0!==o[u]?(i=o[u].desc)&&i.length&&d.desc&&d.desc.length&&(o[u].desc=i+\"\\n\"+d.desc):o[u]=d}),C.highlightedDates=e.extend(!0,[],o)),r.highlightedPeriods&&e.isArray(r.highlightedPeriods)&&r.highlightedPeriods.length&&(o=e.extend(!0,[],C.highlightedDates),e.each(r.highlightedPeriods,function(a,r){var i,s,d,u,l,f,c;if(e.isArray(r))i=r[0],s=r[1],d=r[2],c=r[3];else{var h=e.map(r.split(\",\"),e.trim);i=n.parseDate(h[0],C.formatDate),s=n.parseDate(h[1],C.formatDate),d=h[2],c=h[3]}for(;i<=s;)u=new t(i,d,c),l=n.formatDate(i,C.formatDate),i.setDate(i.getDate()+1),void 0!==o[l]?(f=o[l].desc)&&f.length&&u.desc&&u.desc.length&&(o[l].desc=f+\"\\n\"+u.desc):o[l]=u}),C.highlightedDates=e.extend(!0,[],o)),r.disabledDates&&e.isArray(r.disabledDates)&&r.disabledDates.length&&(C.disabledDates=e.extend(!0,[],r.disabledDates)),r.disabledWeekDays&&e.isArray(r.disabledWeekDays)&&r.disabledWeekDays.length&&(C.disabledWeekDays=e.extend(!0,[],r.disabledWeekDays)),!C.open&&!C.opened||C.inline||a.trigger(\"open.xdsoft\"),C.inline&&(U=!0,H.addClass(\"xdsoft_inline\"),a.after(H).hide()),C.inverseButton&&(C.next=\"xdsoft_prev\",C.prev=\"xdsoft_next\"),C.datepicker?z.addClass(\"active\"):z.removeClass(\"active\"),C.timepicker?L.addClass(\"active\"):L.removeClass(\"active\"),C.value&&(Y.setCurrentTime(C.value),a&&a.val&&a.val(Y.str)),isNaN(C.dayOfWeekStart)?C.dayOfWeekStart=0:C.dayOfWeekStart=parseInt(C.dayOfWeekStart,10)%7,C.timepickerScrollbar||E.xdsoftScroller(C,\"hide\"),C.minDate&&/^[\\+\\-](.*)$/.test(C.minDate)&&(C.minDate=n.formatDate(Y.strToDateTime(C.minDate),C.formatDate)),C.maxDate&&/^[\\+\\-](.*)$/.test(C.maxDate)&&(C.maxDate=n.formatDate(Y.strToDateTime(C.maxDate),C.formatDate)),C.minDateTime&&/^\\+(.*)$/.test(C.minDateTime)&&(C.minDateTime=Y.strToDateTime(C.minDateTime).dateFormat(C.formatDate)),V.toggle(C.showApplyButton),I.find(\".xdsoft_today_button\").css(\"visibility\",C.todayButton?\"visible\":\"hidden\"),I.find(\".\"+C.prev).css(\"visibility\",C.prevButton?\"visible\":\"hidden\"),I.find(\".\"+C.next).css(\"visibility\",C.nextButton?\"visible\":\"hidden\"),s(C),C.validateOnBlur&&a.off(\"blur.xdsoft\").on(\"blur.xdsoft\",function(){if(C.allowBlank&&(!e.trim(e(this).val()).length||\"string\"==typeof C.mask&&e.trim(e(this).val())===C.mask.replace(/[0-9]/g,\"_\")))e(this).val(null),H.data(\"xdsoft_datetime\").empty();else{var t=n.parseDate(e(this).val(),C.format);if(t)e(this).val(n.formatDate(t,C.format));else{var a=+[e(this).val()[0],e(this).val()[1]].join(\"\"),r=+[e(this).val()[2],e(this).val()[3]].join(\"\");!C.datepicker&&C.timepicker&&a>=0&&a<24&&r>=0&&r<60?e(this).val([a,r].map(function(e){return e>9?e:\"0\"+e}).join(\":\")):e(this).val(n.formatDate(Y.now(),C.format))}H.data(\"xdsoft_datetime\").setCurrentTime(e(this).val())}H.trigger(\"changedatetime.xdsoft\"),H.trigger(\"close.xdsoft\")}),C.dayOfWeekStartPrev=0===C.dayOfWeekStart?6:C.dayOfWeekStart-1,H.trigger(\"xchange.xdsoft\").trigger(\"afterOpen.xdsoft\")},H.data(\"options\",C).on(\"touchstart mousedown.xdsoft\",function(e){return e.stopPropagation(),e.preventDefault(),G.hide(),B.hide(),!1}),E.append(R),E.xdsoftScroller(C),H.on(\"afterOpen.xdsoft\",function(){E.xdsoftScroller(C)}),H.append(z).append(L),!0!==C.withoutCopyright&&H.append(J),z.append(I).append(N).append(V),e(C.parentID).append(H),Y=new function(){var t=this;t.now=function(e){var a,n,r=new Date;return!e&&C.defaultDate&&(a=t.strToDateTime(C.defaultDate),r.setFullYear(a.getFullYear()),r.setMonth(a.getMonth()),r.setDate(a.getDate())),C.yearOffset&&r.setFullYear(r.getFullYear()+C.yearOffset),!e&&C.defaultTime&&(n=t.strtotime(C.defaultTime),r.setHours(n.getHours()),r.setMinutes(n.getMinutes()),r.setSeconds(n.getSeconds()),r.setMilliseconds(n.getMilliseconds())),r},t.isValidDate=function(e){return\"[object Date]\"===Object.prototype.toString.call(e)&&!isNaN(e.getTime())},t.setCurrentTime=function(e,a){\"string\"==typeof e?t.currentTime=t.strToDateTime(e):t.isValidDate(e)?t.currentTime=e:e||a||!C.allowBlank||C.inline?t.currentTime=t.now():t.currentTime=null,H.trigger(\"xchange.xdsoft\")},t.empty=function(){t.currentTime=null},t.getCurrentTime=function(){return t.currentTime},t.nextMonth=function(){void 0!==t.currentTime&&null!==t.currentTime||(t.currentTime=t.now());var a,n=t.currentTime.getMonth()+1;return 12===n&&(t.currentTime.setFullYear(t.currentTime.getFullYear()+1),n=0),a=t.currentTime.getFullYear(),t.currentTime.setDate(Math.min(new Date(t.currentTime.getFullYear(),n+1,0).getDate(),t.currentTime.getDate())),t.currentTime.setMonth(n),C.onChangeMonth&&e.isFunction(C.onChangeMonth)&&C.onChangeMonth.call(H,Y.currentTime,H.data(\"input\")),a!==t.currentTime.getFullYear()&&e.isFunction(C.onChangeYear)&&C.onChangeYear.call(H,Y.currentTime,H.data(\"input\")),H.trigger(\"xchange.xdsoft\"),n},t.prevMonth=function(){void 0!==t.currentTime&&null!==t.currentTime||(t.currentTime=t.now());var a=t.currentTime.getMonth()-1;return-1===a&&(t.currentTime.setFullYear(t.currentTime.getFullYear()-1),a=11),t.currentTime.setDate(Math.min(new Date(t.currentTime.getFullYear(),a+1,0).getDate(),t.currentTime.getDate())),t.currentTime.setMonth(a),C.onChangeMonth&&e.isFunction(C.onChangeMonth)&&C.onChangeMonth.call(H,Y.currentTime,H.data(\"input\")),H.trigger(\"xchange.xdsoft\"),a},t.getWeekOfYear=function(t){if(C.onGetWeekOfYear&&e.isFunction(C.onGetWeekOfYear)){var a=C.onGetWeekOfYear.call(H,t);if(void 0!==a)return a}var n=new Date(t.getFullYear(),0,1);return 4!==n.getDay()&&n.setMonth(0,1+(4-n.getDay()+7)%7),Math.ceil(((t-n)/864e5+n.getDay()+1)/7)},t.strToDateTime=function(e){var a,r,o=[];return e&&e instanceof Date&&t.isValidDate(e)?e:((o=/^([+-]{1})(.*)$/.exec(e))&&(o[2]=n.parseDate(o[2],C.formatDate)),o&&o[2]?(a=o[2].getTime()-6e4*o[2].getTimezoneOffset(),r=new Date(t.now(!0).getTime()+parseInt(o[1]+\"1\",10)*a)):r=e?n.parseDate(e,C.format):t.now(),t.isValidDate(r)||(r=t.now()),r)},t.strToDate=function(e){if(e&&e instanceof Date&&t.isValidDate(e))return e;var a=e?n.parseDate(e,C.formatDate):t.now(!0);return t.isValidDate(a)||(a=t.now(!0)),a},t.strtotime=function(e){if(e&&e instanceof Date&&t.isValidDate(e))return e;var a=e?n.parseDate(e,C.formatTime):t.now(!0);return t.isValidDate(a)||(a=t.now(!0)),a},t.str=function(){return n.formatDate(t.currentTime,C.format)},t.currentTime=this.now()},V.on(\"touchend click\",function(e){e.preventDefault(),H.data(\"changed\",!0),Y.setCurrentTime(i()),a.val(Y.str()),H.trigger(\"close.xdsoft\")}),I.find(\".xdsoft_today_button\").on(\"touchend mousedown.xdsoft\",function(){H.data(\"changed\",!0),Y.setCurrentTime(0,!0),H.trigger(\"afterOpen.xdsoft\")}).on(\"dblclick.xdsoft\",function(){var e,t,n=Y.getCurrentTime();n=new Date(n.getFullYear(),n.getMonth(),n.getDate()),e=Y.strToDate(C.minDate),n<(e=new Date(e.getFullYear(),e.getMonth(),e.getDate()))||(t=Y.strToDate(C.maxDate),n>(t=new Date(t.getFullYear(),t.getMonth(),t.getDate()))||(a.val(Y.str()),a.trigger(\"change\"),H.trigger(\"close.xdsoft\")))}),I.find(\".xdsoft_prev,.xdsoft_next\").on(\"touchend mousedown.xdsoft\",function(){var t=e(this),a=0,n=!1;!function e(r){t.hasClass(C.next)?Y.nextMonth():t.hasClass(C.prev)&&Y.prevMonth(),C.monthChangeSpinner&&(n||(a=setTimeout(e,r||100)))}(500),e([C.ownerDocument.body,C.contentWindow]).on(\"touchend mouseup.xdsoft\",function t(){clearTimeout(a),n=!0,e([C.ownerDocument.body,C.contentWindow]).off(\"touchend mouseup.xdsoft\",t)})}),L.find(\".xdsoft_prev,.xdsoft_next\").on(\"touchend mousedown.xdsoft\",function(){var t=e(this),a=0,n=!1,r=110;!function e(o){var i=E[0].clientHeight,s=R[0].offsetHeight,d=Math.abs(parseInt(R.css(\"marginTop\"),10));t.hasClass(C.next)&&s-i-C.timeHeightInTimePicker>=d?R.css(\"marginTop\",\"-\"+(d+C.timeHeightInTimePicker)+\"px\"):t.hasClass(C.prev)&&d-C.timeHeightInTimePicker>=0&&R.css(\"marginTop\",\"-\"+(d-C.timeHeightInTimePicker)+\"px\"),E.trigger(\"scroll_element.xdsoft_scroller\",[Math.abs(parseInt(R[0].style.marginTop,10)/(s-i))]),r=r>10?10:r-10,n||(a=setTimeout(e,o||r))}(500),e([C.ownerDocument.body,C.contentWindow]).on(\"touchend mouseup.xdsoft\",function t(){clearTimeout(a),n=!0,e([C.ownerDocument.body,C.contentWindow]).off(\"touchend mouseup.xdsoft\",t)})}),d=0,H.on(\"xchange.xdsoft\",function(t){clearTimeout(d),d=setTimeout(function(){void 0!==Y.currentTime&&null!==Y.currentTime||(Y.currentTime=Y.now());for(var t,i,s,d,u,l,f,c,h,m,g=\"\",p=new Date(Y.currentTime.getFullYear(),Y.currentTime.getMonth(),1,12,0,0),y=0,v=Y.now(),D=!1,b=!1,k=!1,x=[],T=!0,S=\"\";p.getDay()!==C.dayOfWeekStart;)p.setDate(p.getDate()-1);for(g+=\"<table><thead><tr>\",C.weeks&&(g+=\"<th></th>\"),t=0;t<7;t+=1)g+=\"<th>\"+C.i18n[r].dayOfWeekShort[(t+C.dayOfWeekStart)%7]+\"</th>\";for(g+=\"</tr></thead>\",g+=\"<tbody>\",!1!==C.maxDate&&(D=Y.strToDate(C.maxDate),D=new Date(D.getFullYear(),D.getMonth(),D.getDate(),23,59,59,999)),!1!==C.minDate&&(b=Y.strToDate(C.minDate),b=new Date(b.getFullYear(),b.getMonth(),b.getDate())),!1!==C.minDateTime&&(k=Y.strToDate(C.minDateTime),k=new Date(k.getFullYear(),k.getMonth(),k.getDate(),k.getHours(),k.getMinutes(),k.getSeconds()));y<Y.currentTime.countDaysInMonth()||p.getDay()!==C.dayOfWeekStart||Y.currentTime.getMonth()===p.getMonth();)x=[],y+=1,s=p.getDay(),d=p.getDate(),u=p.getFullYear(),l=p.getMonth(),f=Y.getWeekOfYear(p),m=\"\",x.push(\"xdsoft_date\"),c=C.beforeShowDay&&e.isFunction(C.beforeShowDay.call)?C.beforeShowDay.call(H,p):null,C.allowDateRe&&\"[object RegExp]\"===Object.prototype.toString.call(C.allowDateRe)&&(C.allowDateRe.test(n.formatDate(p,C.formatDate))||x.push(\"xdsoft_disabled\")),C.allowDates&&C.allowDates.length>0&&-1===C.allowDates.indexOf(n.formatDate(p,C.formatDate))&&x.push(\"xdsoft_disabled\"),(!1!==D&&p>D||!1!==k&&p<k||!1!==b&&p<b||c&&!1===c[0])&&x.push(\"xdsoft_disabled\"),-1!==C.disabledDates.indexOf(n.formatDate(p,C.formatDate))&&x.push(\"xdsoft_disabled\"),-1!==C.disabledWeekDays.indexOf(s)&&x.push(\"xdsoft_disabled\"),a.is(\"[disabled]\")&&x.push(\"xdsoft_disabled\"),c&&\"\"!==c[1]&&x.push(c[1]),Y.currentTime.getMonth()!==l&&x.push(\"xdsoft_other_month\"),(C.defaultSelect||H.data(\"changed\"))&&n.formatDate(Y.currentTime,C.formatDate)===n.formatDate(p,C.formatDate)&&x.push(\"xdsoft_current\"),n.formatDate(v,C.formatDate)===n.formatDate(p,C.formatDate)&&x.push(\"xdsoft_today\"),0!==p.getDay()&&6!==p.getDay()&&-1===C.weekends.indexOf(n.formatDate(p,C.formatDate))||x.push(\"xdsoft_weekend\"),void 0!==C.highlightedDates[n.formatDate(p,C.formatDate)]&&(i=C.highlightedDates[n.formatDate(p,C.formatDate)],x.push(void 0===i.style?\"xdsoft_highlighted_default\":i.style),m=void 0===i.desc?\"\":i.desc),C.beforeShowDay&&e.isFunction(C.beforeShowDay)&&x.push(C.beforeShowDay(p)),T&&(g+=\"<tr>\",T=!1,C.weeks&&(g+=\"<th>\"+f+\"</th>\")),g+='<td data-date=\"'+d+'\" data-month=\"'+l+'\" data-year=\"'+u+'\" class=\"xdsoft_date xdsoft_day_of_week'+p.getDay()+\" \"+x.join(\" \")+'\" title=\"'+m+'\"><div>'+d+\"</div></td>\",p.getDay()===C.dayOfWeekStartPrev&&(g+=\"</tr>\",T=!0),p.setDate(d+1);if(g+=\"</tbody></table>\",N.html(g),I.find(\".xdsoft_label span\").eq(0).text(C.i18n[r].months[Y.currentTime.getMonth()]),I.find(\".xdsoft_label span\").eq(1).text(Y.currentTime.getFullYear()),S=\"\",\"\",l=\"\",h=function(t,r){var o,i,s=Y.now(),d=C.allowTimes&&e.isArray(C.allowTimes)&&C.allowTimes.length;s.setHours(t),t=parseInt(s.getHours(),10),s.setMinutes(r),r=parseInt(s.getMinutes(),10),(o=new Date(Y.currentTime)).setHours(t),o.setMinutes(r),x=[],!1!==C.minDateTime&&C.minDateTime>o||!1!==C.maxTime&&Y.strtotime(C.maxTime).getTime()<s.getTime()||!1!==C.minTime&&Y.strtotime(C.minTime).getTime()>s.getTime()?x.push(\"xdsoft_disabled\"):!1!==C.minDateTime&&C.minDateTime>o||!1!==C.disabledMinTime&&s.getTime()>Y.strtotime(C.disabledMinTime).getTime()&&!1!==C.disabledMaxTime&&s.getTime()<Y.strtotime(C.disabledMaxTime).getTime()?x.push(\"xdsoft_disabled\"):a.is(\"[disabled]\")&&x.push(\"xdsoft_disabled\"),(i=new Date(Y.currentTime)).setHours(parseInt(Y.currentTime.getHours(),10)),d||i.setMinutes(Math[C.roundTime](Y.currentTime.getMinutes()/C.step)*C.step),(C.initTime||C.defaultSelect||H.data(\"changed\"))&&i.getHours()===parseInt(t,10)&&(!d&&C.step>59||i.getMinutes()===parseInt(r,10))&&(C.defaultSelect||H.data(\"changed\")?x.push(\"xdsoft_current\"):C.initTime&&x.push(\"xdsoft_init_time\")),parseInt(v.getHours(),10)===parseInt(t,10)&&parseInt(v.getMinutes(),10)===parseInt(r,10)&&x.push(\"xdsoft_today\"),S+='<div class=\"xdsoft_time '+x.join(\" \")+'\" data-hour=\"'+t+'\" data-minute=\"'+r+'\">'+n.formatDate(s,C.formatTime)+\"</div>\"},C.allowTimes&&e.isArray(C.allowTimes)&&C.allowTimes.length)for(y=0;y<C.allowTimes.length;y+=1)h(Y.strtotime(C.allowTimes[y]).getHours(),l=Y.strtotime(C.allowTimes[y]).getMinutes());else for(y=0,t=0;y<(C.hours12?12:24);y+=1)for(t=0;t<60;t+=C.step)h((y<10?\"0\":\"\")+y,l=(t<10?\"0\":\"\")+t);for(R.html(S),o=\"\",y=parseInt(C.yearStart,10)+C.yearOffset;y<=parseInt(C.yearEnd,10)+C.yearOffset;y+=1)o+='<div class=\"xdsoft_option '+(Y.currentTime.getFullYear()===y?\"xdsoft_current\":\"\")+'\" data-value=\"'+y+'\">'+y+\"</div>\";for(G.children().eq(0).html(o),y=parseInt(C.monthStart,10),o=\"\";y<=parseInt(C.monthEnd,10);y+=1)o+='<div class=\"xdsoft_option '+(Y.currentTime.getMonth()===y?\"xdsoft_current\":\"\")+'\" data-value=\"'+y+'\">'+C.i18n[r].months[y]+\"</div>\";B.children().eq(0).html(o),e(H).trigger(\"generate.xdsoft\")},10),t.stopPropagation()}).on(\"afterOpen.xdsoft\",function(){if(C.timepicker){var e,t,a,n;R.find(\".xdsoft_current\").length?e=\".xdsoft_current\":R.find(\".xdsoft_init_time\").length&&(e=\".xdsoft_init_time\"),e?(t=E[0].clientHeight,(a=R[0].offsetHeight)-t<(n=R.find(e).index()*C.timeHeightInTimePicker+1)&&(n=a-t),E.trigger(\"scroll_element.xdsoft_scroller\",[parseInt(n,10)/(a-t)])):E.trigger(\"scroll_element.xdsoft_scroller\",[0])}}),u=0,N.on(\"touchend click.xdsoft\",\"td\",function(t){t.stopPropagation(),u+=1;var n=e(this),r=Y.currentTime;if(void 0!==r&&null!==r||(Y.currentTime=Y.now(),r=Y.currentTime),n.hasClass(\"xdsoft_disabled\"))return!1;r.setDate(1),r.setFullYear(n.data(\"year\")),r.setMonth(n.data(\"month\")),r.setDate(n.data(\"date\")),H.trigger(\"select.xdsoft\",[r]),a.val(Y.str()),C.onSelectDate&&e.isFunction(C.onSelectDate)&&C.onSelectDate.call(H,Y.currentTime,H.data(\"input\"),t),H.data(\"changed\",!0),H.trigger(\"xchange.xdsoft\"),H.trigger(\"changedatetime.xdsoft\"),(u>1||!0===C.closeOnDateSelect||!1===C.closeOnDateSelect&&!C.timepicker)&&!C.inline&&H.trigger(\"close.xdsoft\"),setTimeout(function(){u=0},200)}),R.on(\"touchstart\",\"div\",function(e){this.touchMoved=!1}).on(\"touchmove\",\"div\",X).on(\"touchend click.xdsoft\",\"div\",function(t){if(!this.touchMoved){t.stopPropagation();var a=e(this),n=Y.currentTime;if(void 0!==n&&null!==n||(Y.currentTime=Y.now(),n=Y.currentTime),a.hasClass(\"xdsoft_disabled\"))return!1;n.setHours(a.data(\"hour\")),n.setMinutes(a.data(\"minute\")),H.trigger(\"select.xdsoft\",[n]),H.data(\"input\").val(Y.str()),C.onSelectTime&&e.isFunction(C.onSelectTime)&&C.onSelectTime.call(H,Y.currentTime,H.data(\"input\"),t),H.data(\"changed\",!0),H.trigger(\"xchange.xdsoft\"),H.trigger(\"changedatetime.xdsoft\"),!0!==C.inline&&!0===C.closeOnTimeSelect&&H.trigger(\"close.xdsoft\")}}),z.on(\"mousewheel.xdsoft\",function(e){return!C.scrollMonth||(e.deltaY<0?Y.nextMonth():Y.prevMonth(),!1)}),a.on(\"mousewheel.xdsoft\",function(e){return!C.scrollInput||(!C.datepicker&&C.timepicker?((P=R.find(\".xdsoft_current\").length?R.find(\".xdsoft_current\").eq(0).index():0)+e.deltaY>=0&&P+e.deltaY<R.children().length&&(P+=e.deltaY),R.children().eq(P).length&&R.children().eq(P).trigger(\"mousedown\"),!1):C.datepicker&&!C.timepicker?(z.trigger(e,[e.deltaY,e.deltaX,e.deltaY]),a.val&&a.val(Y.str()),H.trigger(\"changedatetime.xdsoft\"),!1):void 0)}),H.on(\"changedatetime.xdsoft\",function(t){if(C.onChangeDateTime&&e.isFunction(C.onChangeDateTime)){var a=H.data(\"input\");C.onChangeDateTime.call(H,Y.currentTime,a,t),delete C.value,a.trigger(\"change\")}}).on(\"generate.xdsoft\",function(){C.onGenerate&&e.isFunction(C.onGenerate)&&C.onGenerate.call(H,Y.currentTime,H.data(\"input\")),U&&(H.trigger(\"afterOpen.xdsoft\"),U=!1)}).on(\"click.xdsoft\",function(e){e.stopPropagation()}),P=0,j=function(e,t){do{if(!(e=e.parentNode)||!1===t(e))break}while(\"HTML\"!==e.nodeName)},A=function(){var t,a,n,r,o,i,s,d,u,l,f,c,h;if(d=H.data(\"input\"),t=d.offset(),a=d[0],l=\"top\",n=t.top+a.offsetHeight-1,r=t.left,o=\"absolute\",u=e(C.contentWindow).width(),c=e(C.contentWindow).height(),h=e(C.contentWindow).scrollTop(),C.ownerDocument.documentElement.clientWidth-t.left<z.parent().outerWidth(!0)){var m=z.parent().outerWidth(!0)-a.offsetWidth;r-=m}\"rtl\"===d.parent().css(\"direction\")&&(r-=H.outerWidth()-d.outerWidth()),C.fixed?(n-=h,r-=e(C.contentWindow).scrollLeft(),o=\"fixed\"):(s=!1,j(a,function(e){return null!==e&&(\"fixed\"===C.contentWindow.getComputedStyle(e).getPropertyValue(\"position\")?(s=!0,!1):void 0)}),s?(o=\"fixed\",n+H.outerHeight()>c+h?(l=\"bottom\",n=c+h-t.top):n-=h):n+H[0].offsetHeight>c+h&&(n=t.top-H[0].offsetHeight+1),n<0&&(n=0),r+a.offsetWidth>u&&(r=u-a.offsetWidth)),i=H[0],j(i,function(e){if(\"relative\"===C.contentWindow.getComputedStyle(e).getPropertyValue(\"position\")&&u>=e.offsetWidth)return r-=(u-e.offsetWidth)/2,!1}),(f={position:o,left:r,top:\"\",bottom:\"\"})[l]=n,H.css(f)},H.on(\"open.xdsoft\",function(t){var a=!0;C.onShow&&e.isFunction(C.onShow)&&(a=C.onShow.call(H,Y.currentTime,H.data(\"input\"),t)),!1!==a&&(H.show(),A(),e(C.contentWindow).off(\"resize.xdsoft\",A).on(\"resize.xdsoft\",A),C.closeOnWithoutClick&&e([C.ownerDocument.body,C.contentWindow]).on(\"touchstart mousedown.xdsoft\",function t(){H.trigger(\"close.xdsoft\"),e([C.ownerDocument.body,C.contentWindow]).off(\"touchstart mousedown.xdsoft\",t)}))}).on(\"close.xdsoft\",function(t){var a=!0;I.find(\".xdsoft_month,.xdsoft_year\").find(\".xdsoft_select\").hide(),C.onClose&&e.isFunction(C.onClose)&&(a=C.onClose.call(H,Y.currentTime,H.data(\"input\"),t)),!1===a||C.opened||C.inline||H.hide(),t.stopPropagation()}).on(\"toggle.xdsoft\",function(){H.is(\":visible\")?H.trigger(\"close.xdsoft\"):H.trigger(\"open.xdsoft\")}).data(\"input\",a),q=0,H.data(\"xdsoft_datetime\",Y),H.setOptions(C),Y.setCurrentTime(i()),a.data(\"xdsoft_datetimepicker\",H).on(\"open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart\",function(){a.is(\":disabled\")||a.data(\"xdsoft_datetimepicker\").is(\":visible\")&&C.closeOnInputClick||C.openOnFocus&&(clearTimeout(q),q=setTimeout(function(){a.is(\":disabled\")||(U=!0,Y.setCurrentTime(i(),!0),C.mask&&s(C),H.trigger(\"open.xdsoft\"))},100))}).on(\"keydown.xdsoft\",function(t){var a,n=t.which;return-1!==[p].indexOf(n)&&C.enterLikeTab?(a=e(\"input:visible,textarea:visible,button:visible,a:visible\"),H.trigger(\"close.xdsoft\"),a.eq(a.index(this)+1).focus(),!1):-1!==[T].indexOf(n)?(H.trigger(\"close.xdsoft\"),!0):void 0}).on(\"blur.xdsoft\",function(){H.trigger(\"close.xdsoft\")})},d=function(t){var a=t.data(\"xdsoft_datetimepicker\");a&&(a.data(\"xdsoft_datetime\",null),a.remove(),t.data(\"xdsoft_datetimepicker\",null).off(\".xdsoft\"),e(C.contentWindow).off(\"resize.xdsoft\"),e([C.contentWindow,C.ownerDocument.body]).off(\"mousedown.xdsoft touchstart\"),t.unmousewheel&&t.unmousewheel())},e(C.ownerDocument).off(\"keydown.xdsoftctrl keyup.xdsoftctrl\").on(\"keydown.xdsoftctrl\",function(e){e.keyCode===m&&(F=!0)}).on(\"keyup.xdsoftctrl\",function(e){e.keyCode===m&&(F=!1)}),this.each(function(){var t=e(this).data(\"xdsoft_datetimepicker\");if(t){if(\"string\"===e.type(o))switch(o){case\"show\":e(this).select().focus(),t.trigger(\"open.xdsoft\");break;case\"hide\":t.trigger(\"close.xdsoft\");break;case\"toggle\":t.trigger(\"toggle.xdsoft\");break;case\"destroy\":d(e(this));break;case\"reset\":this.value=this.defaultValue,this.value&&t.data(\"xdsoft_datetime\").isValidDate(n.parseDate(this.value,C.format))||t.data(\"changed\",!1),t.data(\"xdsoft_datetime\").setCurrentTime(this.value);break;case\"validate\":t.data(\"input\").trigger(\"blur.xdsoft\");break;default:t[o]&&e.isFunction(t[o])&&(u=t[o](i))}else t.setOptions(o);return 0}\"string\"!==e.type(o)&&(!C.lazyInit||C.open||C.inline?s(e(this)):A(e(this)))}),u},e.fn.datetimepicker.defaults=a};!function(e){\"function\"==typeof define&&define.amd?define([\"jquery\",\"jquery-mousewheel\"],e):\"object\"==typeof exports?module.exports=e(require(\"jquery\")):e(jQuery)}(datetimepickerFactory),function(e){\"function\"==typeof define&&define.amd?define([\"jquery\"],e):\"object\"==typeof exports?module.exports=e:e(jQuery)}(function(e){function t(t){var i=t||window.event,s=d.call(arguments,1),u=0,f=0,c=0,h=0,m=0,g=0;if(t=e.event.fix(i),t.type=\"mousewheel\",\"detail\"in i&&(c=-1*i.detail),\"wheelDelta\"in i&&(c=i.wheelDelta),\"wheelDeltaY\"in i&&(c=i.wheelDeltaY),\"wheelDeltaX\"in i&&(f=-1*i.wheelDeltaX),\"axis\"in i&&i.axis===i.HORIZONTAL_AXIS&&(f=-1*c,c=0),u=0===c?f:c,\"deltaY\"in i&&(u=c=-1*i.deltaY),\"deltaX\"in i&&(f=i.deltaX,0===c&&(u=-1*f)),0!==c||0!==f){if(1===i.deltaMode){var p=e.data(this,\"mousewheel-line-height\");u*=p,c*=p,f*=p}else if(2===i.deltaMode){var y=e.data(this,\"mousewheel-page-height\");u*=y,c*=y,f*=y}if(h=Math.max(Math.abs(c),Math.abs(f)),(!o||h<o)&&(o=h,n(i,h)&&(o/=40)),n(i,h)&&(u/=40,f/=40,c/=40),u=Math[u>=1?\"floor\":\"ceil\"](u/o),f=Math[f>=1?\"floor\":\"ceil\"](f/o),c=Math[c>=1?\"floor\":\"ceil\"](c/o),l.settings.normalizeOffset&&this.getBoundingClientRect){var v=this.getBoundingClientRect();m=t.clientX-v.left,g=t.clientY-v.top}return t.deltaX=f,t.deltaY=c,t.deltaFactor=o,t.offsetX=m,t.offsetY=g,t.deltaMode=0,s.unshift(t,u,f,c),r&&clearTimeout(r),r=setTimeout(a,200),(e.event.dispatch||e.event.handle).apply(this,s)}}function a(){o=null}function n(e,t){return l.settings.adjustOldDeltas&&\"mousewheel\"===e.type&&t%120==0}var r,o,i=[\"wheel\",\"mousewheel\",\"DOMMouseScroll\",\"MozMousePixelScroll\"],s=\"onwheel\"in document||document.documentMode>=9?[\"wheel\"]:[\"mousewheel\",\"DomMouseScroll\",\"MozMousePixelScroll\"],d=Array.prototype.slice;if(e.event.fixHooks)for(var u=i.length;u;)e.event.fixHooks[i[--u]]=e.event.mouseHooks;var l=e.event.special.mousewheel={version:\"3.1.12\",setup:function(){if(this.addEventListener)for(var a=s.length;a;)this.addEventListener(s[--a],t,!1);else this.onmousewheel=t;e.data(this,\"mousewheel-line-height\",l.getLineHeight(this)),e.data(this,\"mousewheel-page-height\",l.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var a=s.length;a;)this.removeEventListener(s[--a],t,!1);else this.onmousewheel=null;e.removeData(this,\"mousewheel-line-height\"),e.removeData(this,\"mousewheel-page-height\")},getLineHeight:function(t){var a=e(t),n=a[\"offsetParent\"in e.fn?\"offsetParent\":\"parent\"]();return n.length||(n=e(\"body\")),parseInt(n.css(\"fontSize\"),10)||parseInt(a.css(\"fontSize\"),10)||16},getPageHeight:function(t){return e(t).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};e.fn.extend({mousewheel:function(e){return e?this.bind(\"mousewheel\",e):this.trigger(\"mousewheel\")},unmousewheel:function(e){return this.unbind(\"mousewheel\",e)}})});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jquery-datetimepicker/build/jquery.datetimepicker.full.min.js\n// module id = 281\n// module chunks = 3 24","/*!\n * jQuery Mousewheel 3.1.13\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n */\n\n(function (factory) {\n    if ( typeof define === 'function' && define.amd ) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify\n        module.exports = factory;\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function ($) {\n\n    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],\n        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?\n                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],\n        slice  = Array.prototype.slice,\n        nullLowestDeltaTimeout, lowestDelta;\n\n    if ( $.event.fixHooks ) {\n        for ( var i = toFix.length; i; ) {\n            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;\n        }\n    }\n\n    var special = $.event.special.mousewheel = {\n        version: '3.1.12',\n\n        setup: function() {\n            if ( this.addEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.addEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = handler;\n            }\n            // Store the line height and page height for this particular element\n            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));\n            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));\n        },\n\n        teardown: function() {\n            if ( this.removeEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.removeEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = null;\n            }\n            // Clean up the data we added to the element\n            $.removeData(this, 'mousewheel-line-height');\n            $.removeData(this, 'mousewheel-page-height');\n        },\n\n        getLineHeight: function(elem) {\n            var $elem = $(elem),\n                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();\n            if (!$parent.length) {\n                $parent = $('body');\n            }\n            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;\n        },\n\n        getPageHeight: function(elem) {\n            return $(elem).height();\n        },\n\n        settings: {\n            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below\n            normalizeOffset: true  // calls getBoundingClientRect for each event\n        }\n    };\n\n    $.fn.extend({\n        mousewheel: function(fn) {\n            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');\n        },\n\n        unmousewheel: function(fn) {\n            return this.unbind('mousewheel', fn);\n        }\n    });\n\n\n    function handler(event) {\n        var orgEvent   = event || window.event,\n            args       = slice.call(arguments, 1),\n            delta      = 0,\n            deltaX     = 0,\n            deltaY     = 0,\n            absDelta   = 0,\n            offsetX    = 0,\n            offsetY    = 0;\n        event = $.event.fix(orgEvent);\n        event.type = 'mousewheel';\n\n        // Old school scrollwheel delta\n        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }\n        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }\n        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }\n        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }\n\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n            deltaX = deltaY * -1;\n            deltaY = 0;\n        }\n\n        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\n        delta = deltaY === 0 ? deltaX : deltaY;\n\n        // New school wheel delta (wheel event)\n        if ( 'deltaY' in orgEvent ) {\n            deltaY = orgEvent.deltaY * -1;\n            delta  = deltaY;\n        }\n        if ( 'deltaX' in orgEvent ) {\n            deltaX = orgEvent.deltaX;\n            if ( deltaY === 0 ) { delta  = deltaX * -1; }\n        }\n\n        // No change actually happened, no reason to go any further\n        if ( deltaY === 0 && deltaX === 0 ) { return; }\n\n        // Need to convert lines and pages to pixels if we aren't already in pixels\n        // There are three delta modes:\n        //   * deltaMode 0 is by pixels, nothing to do\n        //   * deltaMode 1 is by lines\n        //   * deltaMode 2 is by pages\n        if ( orgEvent.deltaMode === 1 ) {\n            var lineHeight = $.data(this, 'mousewheel-line-height');\n            delta  *= lineHeight;\n            deltaY *= lineHeight;\n            deltaX *= lineHeight;\n        } else if ( orgEvent.deltaMode === 2 ) {\n            var pageHeight = $.data(this, 'mousewheel-page-height');\n            delta  *= pageHeight;\n            deltaY *= pageHeight;\n            deltaX *= pageHeight;\n        }\n\n        // Store lowest absolute delta to normalize the delta values\n        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );\n\n        if ( !lowestDelta || absDelta < lowestDelta ) {\n            lowestDelta = absDelta;\n\n            // Adjust older deltas if necessary\n            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n                lowestDelta /= 40;\n            }\n        }\n\n        // Adjust older deltas if necessary\n        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n            // Divide all the things by 40!\n            delta  /= 40;\n            deltaX /= 40;\n            deltaY /= 40;\n        }\n\n        // Get a whole, normalized value for the deltas\n        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);\n        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);\n        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);\n\n        // Normalise offsetX and offsetY properties\n        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {\n            var boundingRect = this.getBoundingClientRect();\n            offsetX = event.clientX - boundingRect.left;\n            offsetY = event.clientY - boundingRect.top;\n        }\n\n        // Add information to the event object\n        event.deltaX = deltaX;\n        event.deltaY = deltaY;\n        event.deltaFactor = lowestDelta;\n        event.offsetX = offsetX;\n        event.offsetY = offsetY;\n        // Go ahead and set deltaMode to 0 since we converted to pixels\n        // Although this is a little odd since we overwrite the deltaX/Y\n        // properties with normalized deltas.\n        event.deltaMode = 0;\n\n        // Add event and delta to the front of the arguments\n        args.unshift(event, delta, deltaX, deltaY);\n\n        // Clearout lowestDelta after sometime to better\n        // handle multiple device types that give different\n        // a different lowestDelta\n        // Ex: trackpad = 3 and mouse wheel = 120\n        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }\n        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);\n\n        return ($.event.dispatch || $.event.handle).apply(this, args);\n    }\n\n    function nullLowestDelta() {\n        lowestDelta = null;\n    }\n\n    function shouldAdjustOldDeltas(orgEvent, absDelta) {\n        // If this is an older event and the delta is divisable by 120,\n        // then we are assuming that the browser is treating this as an\n        // older mouse wheel event and that we should divide the deltas\n        // by 40 to try and get a more usable deltaFactor.\n        // Side note, this actually impacts the reported scroll distance\n        // in older browsers and can cause scrolling to be slower than native.\n        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\n        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;\n    }\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jquery-mousewheel/jquery.mousewheel.js\n// module id = 282\n// module chunks = 3 24","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module gmfapp.xsdattributes\n*/\nconst exports = {};\n\nimport './xsdattributes.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport olFeature from 'ol/Feature.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfEditingXSDAttributes.module.name,\n  gmfThemeThemes.module.name,\n  ngeoEditingAttributesComponent.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\n\nexports.module.value('gmfLayersUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\n\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function($timeout, gmfThemes, gmfXSDAttributes) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.xsdAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {?Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {Array.<gmfThemes.GmfLayer>}\n   * @export\n   */\n  this.layers = [];\n\n  // TMP - The list of layer names to use. We'll keep this until we can use\n  //       those that are editable.\n  const layerNames = ['line', 'point', 'polygon'];\n\n  gmfThemes.loadThemes();\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (!themes) {\n      return;\n    }\n    // Get an array with all nodes entities existing in \"themes\".\n    const flatNodes = [];\n    themes.forEach((theme) => {\n      theme.children.forEach((group) => {\n        this.getDistinctFlatNodes_(group, flatNodes);\n      });\n    });\n    flatNodes.forEach((node) => {\n      // Get an array of all layers\n      if (node.children === undefined && layerNames.indexOf(node.name) !== -1) {\n        this.layers.push(node);\n      }\n    });\n\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfLayer|undefined} value A layer or undefined to get layers.\n * @return {Array.<gmfThemes.GmfLayer>} All layers in all themes.\n * @export\n */\nexports.MainController.prototype.getSetLayers = function(value) {\n  if (value !== undefined) {\n    this.xsdAttributes_.getAttributes(value.id).then(\n      this.setAttributes_.bind(this));\n  }\n  return this.layers;\n};\n\n\n/**\n * @param {Array.<ngeox.Attribute>} attributes Attributes.\n * @export\n */\nexports.MainController.prototype.setAttributes_ = function(attributes) {\n\n  // (1) Reset first\n  this.feature = null;\n  this.attributes = null;\n\n  // (2) Then set\n  this.timeout_(() => {\n    this.feature = new olFeature();\n    this.attributes = attributes;\n  }, 0);\n};\n\n\n/**\n * @return {string} Type of geometry.\n * @export\n */\nexports.MainController.prototype.getGeomType = function() {\n  let type = 'N/A';\n  if (this.attributes) {\n    const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n      this.attributes\n    );\n    if (geomAttr && geomAttr.geomType) {\n      type = geomAttr.geomType;\n    }\n  }\n  return type;\n};\n\n\n/**\n * Just for this example\n * @param {gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer} node A theme, group or layer node.\n * @param {Array.<gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An Array of nodes.\n * @export\n */\nexports.MainController.prototype.getDistinctFlatNodes_ = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      this.getDistinctFlatNodes_(children[i], nodes);\n    }\n  }\n  let alreadyAdded = false;\n  nodes.some((n) => {\n    if (n.id === node.id) {\n      return alreadyAdded = true;\n    }\n  });\n  if (!alreadyAdded) {\n    nodes.push(node);\n  }\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/xsdattributes.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js"],"sourceRoot":""}