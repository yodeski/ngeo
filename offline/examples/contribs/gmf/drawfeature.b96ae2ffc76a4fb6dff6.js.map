{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/draw/Controller.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/Menu.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./node_modules/openlayers/src/ol/interaction/TranslateEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Translate.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/draw/component.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./contribs/gmf/examples/drawfeature.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./src/editing/exportfeaturesComponent.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__string_js__","__webpack_require__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","ngeoMapLayerHelper","value","service","requires","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeoBase","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","key","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoStatemanagerService","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","olGeomPoint","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","navigator","userAgent","hex","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","olEventsCondition","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","olStyleStyle","defaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","createFunction","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","unlisten","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","olStyleStroke","width","radius","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","olFeature","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","ngeoPopover","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","detail","olEventsEvent","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","olOverlay","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","ngeoFormatFeatureHashStyleType","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","olGeomGeometryLayout","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","shift","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","min","closestOnCircle","closestOnSegment","distance","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","segmentData","insert","k","kk","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","atan","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","transform","abs","getFormattedCircleArea","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","olString","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","assertNumber","getNumber","getOpacityProperty","azimut","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","rad","acos","__WEBPACK_AMD_DEFINE_RESULT__","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","__webpack_amd_options__","olObservable","mapUids_","mapUid","previous","setAt","removeAt","insertAt","current","baseBgLayer","hasUpdates","updatedDimensions","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","toolContext","activePropertyName","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","ModifyEventType","Modify","handleDragEvent","handleDragEvent_","primaryAction","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","RBush","snappedToVertex_","changingFeature_","dragSegments_","Collection","VectorEventType","handleSourceAdd_","handleSourceRemove_","addFeature_","CollectionEventType","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData_","equals","insertVertex_","dragSegment","setGeometryCoordinates_","update","handled","getInteracting","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared_","vertexSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getClosestPoint","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","mapBrowserPointerEvent","registerTool","tool","opt_defaultActivate","entries","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ngeoMapBackgroundLayerMgr","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","$element","recenter","attr","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","ngeoFeatureHelper","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","ngeoMiscFeatureHelper","br","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","menuOptions","opt_overlayOptions","olOverlayPositioning","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","actions","action","data-name","prepend","cls","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","close","closest","Element","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","olInteractionModify","centerFeatures_","handleDown_","handleDrag_","handleUp_","handleKeyUp_","olGeomGeometry","getCenterCoordinate_","centerFeature","forEachFeatureAtPixel","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","olInteractionTranslate","setState_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","handleGeometryChange_","getGeometryCenterPoint_","TranslateEventType","Translate","handleMoveEvent","handleMoveEvent_","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","elem","getViewport","getHitTolerance","setHitTolerance","oldMap","ngeoMiscColorpickerComponent","handleColorSet_","handleFeatureSet_","newFeature","previousFeature","propName","olObject","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","ngeoDrawController","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","drawFeatureCtrl","$compile","contMsg","ngeoInteractionMeasureArea","fromCircle","ngeoInteractionMeasureLength","otherFeatures_","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","TRUE","interactions","getFeatureCollection_","isRectangle","olStructsRBush","boundingExtent","olCoordinate","olMapBrowserPointerEvent","vectorPoints_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","nextFeature","initializeParams_","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","gmfDrawingModule","gmfMapComponent","ngeoMapModule","ngeoMiscToolActivateMgr","constant","MainController","ngeoToolActivateMgr","olView","olSourceOSM","drawFeatureActive","drawFeatureToolActivate","ngeoMiscToolActivate","pointerMoveActive","pointerMoveToolActivate","un","tooltip","trigger","gmfDrawingDrawFeatureComponent","gmfDrawingFeatureStyleComponent","ngeoEditingExportfeaturesComponent","ngeoMiscBtnComponent","ngeoDrawComponent","drawActive","drawToolActivate","mapSelectActive","longPressTimeout_","mapSelectToolActivate","ngeoToolActivateMgr_","selectedFeature","selectedFeatures","modify_","ngeoInteractionModify","menu_","modifyToolActivate","translate_","ngeoInteractionTranslate","rotate_","ngeoInteractionRotate","initializeInteractions_","rotateToolActivate","translateToolActivate","listSelectionInProgress_","handleActiveChange_","unregisterInteractions_","registerInteractions_","handleMapSelectActiveChange_","nameProperty","drawUid","otherUid","toolMgr","handleTranslateEnd_","handleRotateEnd_","selectFeatureFromList","getFeaturesArray","clearFeatures","confirm","mapDiv","assertElement","handleMapClick_","handleMapContextMenu_","handleMapTouchStart_","handleMapTouchEnd_","ret","getEventPixel","ngeoMenu","handleMenuActionClick_","element_","items_","$menu","aria-labelledby","$item","handleMenuItemClick_","formats_","handleElementClick_","handleDestroy_","removeClass","parentElement","off"],"mappings":"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","file":"drawfeature.b96ae2ffc76a4fb6dff6.js","sourcesContent":["/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivate\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @module ngeo.misc.btnComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.map.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        }, this);\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/Controller.js","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.misc.colorpickerComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Menu.js","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olBase.extent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Translate.js","/**\n * @module ol/interaction/TranslateEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature translation start.\n   * @event ol.interaction.Translate.Event#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event ol.interaction.Translate.Event#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event ol.interaction.Translate.Event#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/TranslateEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport BaseObject from '../Object.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport TranslateEventType from '../interaction/TranslateEventType.js';\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Translate.Event\n * @param {olx.interaction.TranslateOptions=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: Translate.handleDownEvent_,\n    handleDragEvent: Translate.handleDragEvent_,\n    handleMoveEvent: Translate.handleMoveEvent_,\n    handleUpEvent: Translate.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(ol.layer.Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(ol.layer.Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDownEvent_ = function(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleUpEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDragEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleMoveEvent_ = function(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n};\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {ol.Pixel} pixel Pixel coordinate to test for intersection.\n * @param {ol.PluggableMap} map Map to test the intersection on.\n * @return {ol.Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {ol.PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Translate} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.interaction.TranslateEvent}\n * @param {ol.interaction.TranslateEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features translated.\n * @param {ol.Coordinate} coordinate The event coordinate.\n */\nTranslate.Event = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\ninherits(Translate.Event, Event);\nexport default Translate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/component.js","/**\n * @module ngeo.draw.point\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/point.js","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/rectangle.js","/**\n * @module ngeo.draw.text\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/text.js","/**\n * @module ngeo.measure.area\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/area.js","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = olGeomPolygon.fromCircle(circle, 64);\n          event.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/azimut.js","/**\n * @module ngeo.measure.length\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/length.js","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    }, this);\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    }, this);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  }, this);\n\n  if (active && map) {\n    this.features_.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Modify.js","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olCoordinate from 'ol/coordinate.js';\nimport olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  // Get the style for the box and the points\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach(this.addFeature_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyRectangle.js","/**\n * @module gmfapp.drawfeature\n */\nconst exports = {};\n\nimport './drawfeature.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me when gmf.Theme and other dependencies are in a module\n  gmfDrawingModule.name,\n  gmfMapComponent.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper, ngeoFeatures,\n  ngeoToolActivateMgr, ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const view = new olView({\n    center: [0, 0],\n    zoom: 3\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  const featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  featureOverlay.setFeatures(ngeoFeatures);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = true;\n\n  const drawFeatureToolActivate = new ngeoMiscToolActivate(\n    this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', drawFeatureToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pointerMoveActive = false;\n\n  const pointerMoveToolActivate = new ngeoMiscToolActivate(\n    this, 'pointerMoveActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', pointerMoveToolActivate, false);\n\n  $scope.$watch(\n    () => this.pointerMoveActive,\n    (newVal) => {\n      if (newVal) {\n        this.map.on('pointermove', this.handleMapPointerMove_, this);\n      } else {\n        this.map.un('pointermove', this.handleMapPointerMove_, this);\n        $('#pointermove-feature').html('');\n      }\n    }\n  );\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapPointerMove_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  $('#pointermove-feature').html(\n    (feature) ? feature.get(ngeoFormatFeatureProperties.NAME) : 'None'\n  );\n\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/drawfeature.js","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/module.js","/**\n * @module gmf.drawing.drawFeatureComponent\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/drawFeatureComponent.html`\n  };\n};\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.addInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.removeInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/drawFeatureComponent.js","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nngeoBase.module.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    }, this);\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/exportfeaturesComponent.js"],"sourceRoot":""}