{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/draw/Controller.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/Menu.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./node_modules/openlayers/src/ol/interaction/TranslateEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Translate.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/draw/component.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./contribs/gmf/examples/drawfeature.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./src/editing/exportfeaturesComponent.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__string_js__","__webpack_require__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","ngeoMapLayerHelper","value","service","requires","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeoBase","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","key","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoStatemanagerService","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","olExtent","multiGeom","olGeomPoint","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","navigator","userAgent","hex","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","olEventsCondition","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","olStyleStyle","defaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","createFunction","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","unlisten","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","olStyleStroke","width","radius","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","olFeature","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","ngeoPopover","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","detail","olEventsEvent","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","olOverlay","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","ngeoFormatFeatureHashStyleType","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","olGeomGeometryLayout","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","shift","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","min","closestOnCircle","closestOnSegment","distance","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","segmentData","insert","k","kk","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","atan","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","transform","abs","getFormattedCircleArea","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","olString","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","assertNumber","getNumber","getOpacityProperty","azimut","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","rad","acos","__WEBPACK_AMD_DEFINE_RESULT__","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","__webpack_amd_options__","olObservable","mapUids_","mapUid","previous","setAt","removeAt","insertAt","current","baseBgLayer","hasUpdates","updatedDimensions","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","toolContext","activePropertyName","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","ModifyEventType","Modify","handleDragEvent","handleDragEvent_","primaryAction","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","RBush","snappedToVertex_","changingFeature_","dragSegments_","Collection","VectorEventType","handleSourceAdd_","handleSourceRemove_","addFeature_","CollectionEventType","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData_","equals","insertVertex_","dragSegment","setGeometryCoordinates_","update","handled","getInteracting","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared_","vertexSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getClosestPoint","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","mapBrowserPointerEvent","registerTool","tool","opt_defaultActivate","entries","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ngeoMapBackgroundLayerMgr","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","$element","recenter","attr","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","ngeoFeatureHelper","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","ngeoMiscFeatureHelper","br","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","menuOptions","opt_overlayOptions","olOverlayPositioning","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","actions","action","data-name","prepend","cls","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","close","closest","Element","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","olInteractionModify","centerFeatures_","handleDown_","handleDrag_","handleUp_","handleKeyUp_","olGeomGeometry","getCenterCoordinate_","centerFeature","forEachFeatureAtPixel","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","olInteractionTranslate","setState_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","handleGeometryChange_","getGeometryCenterPoint_","TranslateEventType","Translate","handleMoveEvent","handleMoveEvent_","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","elem","getViewport","getHitTolerance","setHitTolerance","oldMap","ngeoMiscColorpickerComponent","handleColorSet_","handleFeatureSet_","newFeature","previousFeature","propName","olObject","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","ngeoDrawController","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","drawFeatureCtrl","$compile","contMsg","ngeoInteractionMeasureArea","fromCircle","ngeoInteractionMeasureLength","otherFeatures_","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","TRUE","interactions","getFeatureCollection_","isRectangle","olStructsRBush","boundingExtent","olCoordinate","olMapBrowserPointerEvent","vectorPoints_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","nextFeature","initializeParams_","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","gmfDrawingModule","gmfMapComponent","ngeoMapModule","ngeoMiscToolActivateMgr","constant","MainController","ngeoToolActivateMgr","olView","olSourceOSM","drawFeatureActive","drawFeatureToolActivate","ngeoMiscToolActivate","pointerMoveActive","pointerMoveToolActivate","un","tooltip","trigger","gmfDrawingDrawFeatureComponent","gmfDrawingFeatureStyleComponent","ngeoEditingExportfeaturesComponent","ngeoMiscBtnComponent","ngeoDrawComponent","drawActive","drawToolActivate","mapSelectActive","longPressTimeout_","mapSelectToolActivate","ngeoToolActivateMgr_","selectedFeature","selectedFeatures","modify_","ngeoInteractionModify","menu_","modifyToolActivate","translate_","ngeoInteractionTranslate","rotate_","ngeoInteractionRotate","initializeInteractions_","rotateToolActivate","translateToolActivate","listSelectionInProgress_","handleActiveChange_","unregisterInteractions_","registerInteractions_","handleMapSelectActiveChange_","nameProperty","drawUid","otherUid","toolMgr","handleTranslateEnd_","handleRotateEnd_","selectFeatureFromList","getFeaturesArray","clearFeatures","confirm","mapDiv","assertElement","handleMapClick_","handleMapContextMenu_","handleMapTouchStart_","handleMapTouchEnd_","ret","getEventPixel","ngeoMenu","handleMenuActionClick_","element_","items_","$menu","aria-labelledby","$item","handleMenuItemClick_","formats_","handleElementClick_","handleDestroy_","removeClass","parentElement","off"],"mappings":"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","file":"drawfeature.b074122168cd67709037.js","sourcesContent":["/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivate\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @module ngeo.misc.btnComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.map.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        }, this);\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/Controller.js","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.misc.colorpickerComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Menu.js","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olBase.extent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Translate.js","/**\n * @module ol/interaction/TranslateEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature translation start.\n   * @event ol.interaction.Translate.Event#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event ol.interaction.Translate.Event#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event ol.interaction.Translate.Event#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/TranslateEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport BaseObject from '../Object.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport TranslateEventType from '../interaction/TranslateEventType.js';\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Translate.Event\n * @param {olx.interaction.TranslateOptions=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: Translate.handleDownEvent_,\n    handleDragEvent: Translate.handleDragEvent_,\n    handleMoveEvent: Translate.handleMoveEvent_,\n    handleUpEvent: Translate.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(ol.layer.Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(ol.layer.Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDownEvent_ = function(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleUpEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDragEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleMoveEvent_ = function(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n};\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {ol.Pixel} pixel Pixel coordinate to test for intersection.\n * @param {ol.PluggableMap} map Map to test the intersection on.\n * @return {ol.Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {ol.PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Translate} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.interaction.TranslateEvent}\n * @param {ol.interaction.TranslateEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features translated.\n * @param {ol.Coordinate} coordinate The event coordinate.\n */\nTranslate.Event = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\ninherits(Translate.Event, Event);\nexport default Translate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/component.js","/**\n * @module ngeo.draw.point\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/point.js","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/rectangle.js","/**\n * @module ngeo.draw.text\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/text.js","/**\n * @module ngeo.measure.area\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/area.js","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = olGeomPolygon.fromCircle(circle, 64);\n          event.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/azimut.js","/**\n * @module ngeo.measure.length\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/length.js","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    }, this);\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    }, this);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  }, this);\n\n  if (active && map) {\n    this.features_.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Modify.js","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olCoordinate from 'ol/coordinate.js';\nimport olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  // Get the style for the box and the points\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach(this.addFeature_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyRectangle.js","/**\n * @module gmfapp.drawfeature\n */\nconst exports = {};\n\nimport './drawfeature.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me when gmf.Theme and other dependencies are in a module\n  gmfDrawingModule.name,\n  gmfMapComponent.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper, ngeoFeatures,\n  ngeoToolActivateMgr, ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const view = new olView({\n    center: [0, 0],\n    zoom: 3\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  const featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  featureOverlay.setFeatures(ngeoFeatures);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = true;\n\n  const drawFeatureToolActivate = new ngeoMiscToolActivate(\n    this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', drawFeatureToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pointerMoveActive = false;\n\n  const pointerMoveToolActivate = new ngeoMiscToolActivate(\n    this, 'pointerMoveActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', pointerMoveToolActivate, false);\n\n  $scope.$watch(\n    () => this.pointerMoveActive,\n    (newVal) => {\n      if (newVal) {\n        this.map.on('pointermove', this.handleMapPointerMove_, this);\n      } else {\n        this.map.un('pointermove', this.handleMapPointerMove_, this);\n        $('#pointermove-feature').html('');\n      }\n    }\n  );\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapPointerMove_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  $('#pointermove-feature').html(\n    (feature) ? feature.get(ngeoFormatFeatureProperties.NAME) : 'None'\n  );\n\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/drawfeature.js","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/module.js","/**\n * @module gmf.drawing.drawFeatureComponent\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/drawFeatureComponent.html`\n  };\n};\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.addInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.removeInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/drawFeatureComponent.js","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nngeoBase.module.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    }, this);\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/exportfeaturesComponent.js"],"sourceRoot":""}