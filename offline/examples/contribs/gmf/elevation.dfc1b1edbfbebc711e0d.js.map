{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/elevation.js","webpack:///./contribs/gmf/src/raster/module.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","gmfMapComponent","gmfRasterModule","constant","MainController","elevationLayers","selectedElevationLayer","olSourceOSM","olView","resolutions","center","zoom","gmfRasterComponent","gmfRasterRasterService","ngeoMiscDebounce","component_","elevation","loading","attr","ctrl","toggleActive_","ngeoDebounce","gmfRaster","ngeoDebounce_","gmfRaster_","scope_","inViewport_","e","$apply","pointerStop_","getViewport","getRasterSuccess_","getRasterError_","widgetComponent_","bindings","component","WidgetController_","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"elevation.dfc1b1edbfbebc711e0d.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module gmf.raster.RasterService\n */\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.elevation\n */\nconst exports = {};\n\nimport './elevation.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfRasterModule from 'gmf/raster/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n  gmfRasterModule.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/elevation.js","/**\n * @module gmf.raster.module\n */\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterModule', [\n  gmfRasterComponent.name,\n  gmfRasterRasterService.module.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/module.js","/**\n * @module gmf.raster.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/raster/widgetComponent.html`\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}