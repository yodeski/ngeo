{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./src/misc/filters.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/contextualdata.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","Infinity","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","olString","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","gmfContextualdataModule","gmfMapComponent","ngeoMiscFilters","constant","MainController","olSourceOSM","olView","resolutions","center","zoom","onRasterData","elelvation_diff","_component","gmfContextualdataComponent","olObj","gmfRasterRasterService","$compile","gmfRaster","overlay_","$compile_","$scope_","gmfRaster_","on","hidePopover","preparePopover_","mapDiv","getTargetElement","assertElement","handleMapContextMenu_","event","$apply","getEventPixel","setContent_","preventDefault","showPopover","setPosition","$new","content_","mapProjection","proj","coord","transform","getRasterSuccess","assign","container","document","createElement","classList","css","arrow","stopEvent","autoPan","autoPanAnimation","duration","positioning","addOverlay","contentDirective_","gmfContextualdatacontentTemplateUrl","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","olExtent","multiGeom","navigator","userAgent","hex","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"contextualdata.1d2a823a24a41d66c0ab.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module gmf.raster.RasterService\n */\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.contextualdata\n */\nconst exports = {};\n\nimport './contextualdata.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\n\nimport gmfMapComponent from 'gmf/map/component.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfContextualdataModule.name,\n  gmfMapComponent.name,\n  ngeoMiscFilters.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.module.value(\n  'gmfContextualdatacontentTemplateUrl',\n  'partials/contextualdata.html');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate The coordinate for the right-clicked\n *     point.\n * @param {Object} data The data received from the raster service.\n * @return {Object} The additional data to add to the scope for the\n *     contextualdata popover.\n */\nexports.MainController.prototype.onRasterData = function(coordinate, data) {\n  return {\n    'elelvation_diff': data['srtm'] - data['aster']\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/contextualdata.js","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/contextualdata/module.js","/**\n * @module gmf.contextualdata.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n    this.overlay_.setPosition(coordinate);\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/contextualdata/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}