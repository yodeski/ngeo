{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./contribs/gmf/examples/themeselector.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./src/message/Notification.js","webpack:///./contribs/gmf/src/theme/Manager.js"],"names":["__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__webpack_require__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","undefined","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","ngeoMapLayerHelper","value","service","requires","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","goog","asserts","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeoBase","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","source","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","wmsUrl","layerNames","getOGCLayerNames","ogcServerType","ogcImageType","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","read","options","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","TIME","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","ngeoMessageMessage","Type","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoStatemanagerService","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","key","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","XML","isDocument","readFromDocument","isNode","readFromNode","doc","gmfThemeModule","constant","MainController","gmfThemeManager","manager","gmfThemeSelectorComponent","component_","bindings","templateUrl","baseModuleTemplateUrl","component","Controller_","listenerKeys_","setThemes_","handleDestroy_","setTheme","addTheme","unlistenByKey","geometry","multiGeom","olGeomPoint","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","navigator","userAgent","hex","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","pair","indexOfEquals","decodeURIComponent","return","queryItem","encodeURIComponent","event","olEventsCondition","noModifierKeys","singleClick","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","isArray","XLink","readHref","getAttributeNS","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","ol_Image","ImageWMS","opt_options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","getCode","WMSServerType","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","axisOrientation","getAxisOrientation","bbox","substr","uri","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","OWS","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","owsObject","xml","pushParseAndPop","PARSERS_","readAddress_","objectStack","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","getAttribute","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","makeObjectPropertySetter","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","style","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","format","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","makeArrayPusher","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","olSourceTile","olSourceImage","$applyAsync","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clear","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","setThemeName","getThemeName","isLoading","$emit","THEME_NAME_SET","gmfLayertreeTreeManager"],"mappings":"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","file":"themeselector.aef89db80e01d3722f9e.js","sourcesContent":["/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module gmfapp.themeselector\n*/\nconst exports = {};\n\nimport './themeselector.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeModule from 'gmf/theme/module.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfThemeModule.name,\n]);\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\n\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {angular.$http} $http Angular's $http service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @param {gmf.theme.Manager} gmfThemeManager gmf Tree Manager service.\n * @ngInject\n */\nexports.MainController = function($http, gmfThemes, gmfThemeManager) {\n\n  /**\n   * @param {gmfThemes.GmfTheme} theme Theme.\n   * @return {boolean} Theme is 'Enseignement'\n   * @export\n   */\n  this.filter = function(theme) {\n    return theme.name !== 'Enseignement';\n  };\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.manager = gmfThemeManager;\n\n  gmfThemes.loadThemes();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/themeselector.js","/**\n * @module gmf.theme.module\n*/\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/module.js","/**\n * @module gmf.theme.selectorComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/theme/selectorComponent.html`\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/selectorComponent.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js"],"sourceRoot":""}